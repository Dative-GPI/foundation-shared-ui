import{d as h,b as B,B as i,D as m,I as n,F as o,H as d,Q as f,E as C,M as g,j as c,G as b,N as v,O as q}from"./vue.esm-bundler-DSwHwgKw.js";import{_ as S}from"./FSSlideGroup-DmKSX9y1.js";import{F as $}from"./FSWrapGroup-DErk_6Fw.js";import{F as V}from"./FSButton-CN1ZIktz.js";import{C as p}from"./useColors-C4EmrkDp.js";import{_ as E}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as T}from"./VInput-21AfxGIO.js";const A=h({name:"FSToggleSet",components:{FSSlideGroup:S,FSWrapGroup:$,FSButton:V},props:{padding:{type:[Array,String,Number],required:!1,default:"0"},gap:{type:[Array,String,Number],required:!1,default:"8px"},values:{type:Array,required:!1,default:()=>[]},variant:{type:String,required:!1,default:"wrap"},buttonVariant:{type:String,required:!1,default:"standard"},activeVariant:{type:String,required:!1,default:"standard"},errorVariant:{type:String,required:!1,default:"standard"},buttonClass:{type:[Array,String],required:!1,default:null},activeClass:{type:[Array,String],required:!1,default:null},errorClass:{type:[Array,String],required:!1,default:null},buttonColor:{type:String,required:!1,default:p.Light},activeColor:{type:String,required:!1,default:p.Primary},errorColor:{type:String,required:!1,default:p.Error},rules:{type:Array,required:!1,default:()=>[]},modelValue:{type:[Array,String,Number],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},required:{type:Boolean,required:!1,default:!1},editable:{type:Boolean,required:!1,default:!0}},emits:["update:modelValue"],setup(e,{emit:t}){const u=B(null);return{toggleSetRef:u,getVariant:l=>Array.isArray(e.modelValue)&&e.modelValue.some(r=>r===l.id)||!Array.isArray(e.modelValue)&&e.modelValue===l.id?e.activeVariant:e.buttonVariant,goToStart:()=>{u.value&&u.value.goToStart()},getColor:l=>Array.isArray(e.modelValue)&&e.modelValue.some(r=>r===l.id)||!Array.isArray(e.modelValue)&&e.modelValue===l.id?e.activeColor:e.buttonColor,getClass:l=>Array.isArray(e.modelValue)&&e.modelValue.some(r=>r===l.id)||!Array.isArray(e.modelValue)&&e.modelValue===l.id?e.activeClass:e.buttonClass,goToEnd:()=>{u.value&&u.value.goToEnd()},toggle:l=>{if(Array.isArray(e.modelValue))if(e.multiple)if(e.modelValue.length&&e.modelValue.every(r=>r===l.id)){if(!e.required){t("update:modelValue",[]);return}}else if(e.modelValue.some(r=>r===l.id)){t("update:modelValue",e.modelValue.filter(r=>r!==l.id));return}else{t("update:modelValue",[...e.modelValue,l.id]);return}else if(e.modelValue.some(r=>r===l.id)){if(!e.required){t("update:modelValue",[]);return}}else{t("update:modelValue",[l.id]);return}else if(e.modelValue===l.id){if(!e.required){if(e.multiple){t("update:modelValue",[]);return}t("update:modelValue",null);return}}else{if(e.multiple){if(e.modelValue){t("update:modelValue",[e.modelValue,l.id]);return}t("update:modelValue",[l.id]);return}t("update:modelValue",l.id);return}}}}});function N(e,t,u,k,F,I){return n(),i(T,{class:"fs-toggle-set",rules:e.$props.rules,modelValue:e.$props.modelValue},{default:m(()=>[["wrap"].includes(e.$props.variant)?(n(),i($,{key:0,ref:"toggleSetRef",padding:e.$props.padding,gap:e.$props.gap},{default:m(()=>[e.$props.values.length?(n(),o(d,{key:0},[e.$slots.item?(n(!0),o(d,{key:1},f(e.$props.values,a=>g(e.$slots,"item",c({ref_for:!0},{item:a,toggle:e.toggle,getVariant:e.getVariant,getColor:e.getColor,getClass:e.getClass}))),256)):(n(!0),o(d,{key:0},f(e.$props.values,(a,s)=>(n(),i(V,{prependIcon:a.prependIcon,appendIcon:a.appendIcon,editable:e.$props.editable,variant:e.getVariant(a),color:e.getColor(a),class:C(e.getClass(a)),label:a.label,icon:a.icon,key:s,onClick:y=>e.toggle(a)},null,8,["prependIcon","appendIcon","editable","variant","color","class","label","icon","onClick"]))),128))],64)):b("",!0),g(e.$slots,"default",v(q({toggle:e.toggle,getVariant:e.getVariant,getColor:e.getColor,getClass:e.getClass})))]),_:3},8,["padding","gap"])):(n(),i(S,{key:1,ref:"toggleSetRef",padding:e.$props.padding,gap:e.$props.gap},{default:m(()=>[e.$props.values.length?(n(),o(d,{key:0},[e.$slots.item?(n(!0),o(d,{key:1},f(e.$props.values,a=>g(e.$slots,"item",c({ref_for:!0},{item:a,toggle:e.toggle,getVariant:e.getVariant,getColor:e.getColor,getClass:e.getClass}))),256)):(n(!0),o(d,{key:0},f(e.$props.values,(a,s)=>(n(),i(V,{prependIcon:a.prependIcon,appendIcon:a.appendIcon,editable:e.$props.editable,variant:e.getVariant(a),color:e.getColor(a),class:C(e.getClass(a)),label:a.label,icon:a.icon,key:s,onClick:y=>e.toggle(a)},null,8,["prependIcon","appendIcon","editable","variant","color","class","label","icon","onClick"]))),128))],64)):b("",!0),g(e.$slots,"default",v(q({toggle:e.toggle,getVariant:e.getVariant,getColor:e.getColor,getClass:e.getClass})))]),_:3},8,["padding","gap"]))]),_:3},8,["rules","modelValue"])}const D=E(A,[["render",N]]);A.__docgenInfo={displayName:"FSToggleSet",exportName:"default",description:"",tags:{},props:[{name:"padding",type:{name:"string[] | number[] | string | number | null"},required:!1,defaultValue:{func:!1,value:'"0"'}},{name:"gap",type:{name:"string[] | number[] | string | number | null"},required:!1,defaultValue:{func:!1,value:'"8px"'}},{name:"values",type:{name:"FSToggle[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"variant",values:["wrap","slide"],type:{name:"string"},required:!1,defaultValue:{func:!1,value:'"wrap"'}},{name:"buttonVariant",values:["standard","full","icon"],type:{name:"string"},required:!1,defaultValue:{func:!1,value:'"standard"'}},{name:"activeVariant",values:["standard","full","icon"],type:{name:"string"},required:!1,defaultValue:{func:!1,value:'"standard"'}},{name:"errorVariant",values:["standard","full","icon"],type:{name:"string"},required:!1,defaultValue:{func:!1,value:'"standard"'}},{name:"buttonClass",type:{name:"string[] | string"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"activeClass",type:{name:"string[] | string"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"errorClass",type:{name:"string[] | string"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"buttonColor",type:{name:"ColorBase"},required:!1,defaultValue:{func:!1,value:"ColorEnum.Light"}},{name:"activeColor",type:{name:"ColorBase"},required:!1,defaultValue:{func:!1,value:"ColorEnum.Primary"}},{name:"errorColor",type:{name:"ColorBase"},required:!1,defaultValue:{func:!1,value:"ColorEnum.Error"}},{name:"rules",type:{name:"any[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"modelValue",type:{name:"(string | number)[] | string | number | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"required",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}}],events:[{name:"update:modelValue"}],slots:[{name:"item",scoped:!0,bindings:[{name:"item",title:"binding"},{name:"toggle",title:"binding"},{name:"getVariant",title:"binding"},{name:"getColor",title:"binding"},{name:"getClass",title:"binding"}]},{name:"default",scoped:!0,bindings:[{name:"toggle",title:"binding"},{name:"getVariant",title:"binding"},{name:"getColor",title:"binding"},{name:"getClass",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/shared/foundation-shared-components/components/FSToggleSet.vue"]};export{D as F};
