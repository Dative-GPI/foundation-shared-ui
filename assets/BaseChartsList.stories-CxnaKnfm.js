import{d as $,c as q,w as D,y as u,z as I,A as S,M as k,N as E,B as r,m as N,I as w,J as M,K as U,L as l,E as T,G,D as P}from"./vue.esm-bundler-BSyvBTC9.js";import{_ as j}from"./lodash-BiW_TGGX.js";import{F as z}from"./FSChartTileUI-DItqly-P.js";import{F as A}from"./FSTagGroup-DAvzeC4G.js";import{F as J}from"./FSImage-BxDhaxzU.js";import{F as y}from"./FSIcon-DwJNOKvG.js";import{F as _}from"./FSDataTable-B8KhhJkc.js";import{u as K}from"./useChartOrganisations-Da2b9mlX.js";import{u as R}from"./useChartOrganisationTypes-dJN_rUrd.js";import{C as H}from"./useColors-DlnF7i6T.js";import{_ as Q}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSClickable-CS9kdIxp.js";import"./FSCard-Dakm4bPu.js";import"./FSCol-DZA6pxA1.js";import"./css-DLfrm0pR.js";import"./FSRow-CA1vgNXx.js";import"./VProgressCircular-Dh9H7lZx.js";import"./color-BygXFKwQ.js";import"./theme-D4rXHj3O.js";import"./tag-DB5D_XjQ.js";import"./FSSpan-CCGpb4KF.js";import"./useSlots-P12pG1X5.js";import"./charts-BPLoyxCB.js";import"./useTranslations-CdSqQFV3.js";import"./FSWrapGroup-DgP826LK.js";import"./uuid-DTaye2KM.js";import"./FSSlideGroup-CDcZ7it9.js";import"./FSButton-BjjxnBJw.js";import"./index-CHbvZ5Sj.js";import"./display-BMkR1-zV.js";import"./group-CBCTR8u6.js";import"./proxiedModel-Bq4wip6p.js";import"./VIcon-BIpY_noq.js";import"./locale-C-s_GJlL.js";import"./FSTag-CiTQmVvb.js";import"./VBtn-CC1p3R0h.js";import"./border-njGtMOdT.js";import"./density-CDPzHPmZ.js";import"./elevation-Ben4zuE4.js";import"./rounded-Dg8mz8II.js";import"./dimensions-DyYT4L19.js";import"./loader-pPiux2KM.js";import"./anchor-D9N-895C.js";import"./router-D2IrSaAD.js";import"./index-DPxysH4G.js";import"./VDefaultsProvider-YWdCRIjF.js";import"./FSImageUI-C0XOuHIu.js";import"./FSLoader-CtbqJzfZ.js";import"./VImg-DW7Ik4XH.js";import"./transition-CNA6wh-m.js";import"./index-D_lBla-s.js";import"./useImages-BaeRdzQ-.js";import"./base-CmdGny12.js";import"./serviceFactory-Bd5jifNi.js";import"./composableFactory-wHNy9kQa.js";import"./VSpacer-C4plVoTE.js";import"./FSDataTableUI-BMmNIEj-.js";import"./vue-router-BhvpcqFa.js";import"./FSCheckbox-DPKcfP0u.js";import"./useRules-B3HKjmia.js";import"./VSelectionControl-BRDFiqFl.js";import"./VLabel-owjBjdIA.js";import"./VInput-DO9fMQeR.js";import"./form-B61Sg6X-.js";import"./FSText-DyldgdXP.js";import"./FSSearchField-fyCoX-Sm.js";import"./FSTextField-DOjRjaWh.js";import"./FSBaseField-BkzmckaL.js";import"./VField-DndYz9t7.js";import"./forwardRefs-DWGaNmQL.js";import"./FSSelectField-DGC4MS1S.js";import"./FSDialogMenu-D5T4tlYN.js";import"./VDialog-BkP6MFQ7.js";import"./VOverlay-CLFcrAVK.js";import"./lazy-CAOrKziU.js";import"./FSToggleSet-dT-IKU0T.js";import"./FSFadeOut-D96pvLZm.js";import"./FSRadio-CTi9smel.js";import"./VList-BSxk2mkg.js";import"./ssrBoot-SGvAq9J5.js";import"./VSelect-B7wMH5Gc.js";import"./VMenu-BVgNprPc.js";import"./FSDivider-DQ-5tMcN.js";import"./FSChip-Cu5YGhb-.js";import"./FSOptionGroup-BgNblDTh.js";import"./filter-C1K_d8Vd.js";import"./filter-DuGNEgHB.js";import"./base-1FyQZYnT.js";import"./useAppOrganisationId-BfPsGMlN.js";import"./chartSerie-CU1F_Cev.js";import"./timeRange-DtWQBHMx.js";import"./index-DfSX31J9.js";const B=$({name:"FSBaseChartsList",components:{FSChartTileUI:z,FSDataTable:_,FSTagGroup:A,FSImage:J,FSIcon:y},props:{modelValue:{type:Array,default:()=>[],required:!1},chartOrganisationFilters:{type:Object,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},tableCode:{type:String,required:!0}},emits:["update:modelValue","update:scope"],setup(t,{emit:n}){const{entities:g,fetching:b,getMany:F}=K(),{entities:h,fetching:f,getMany:p}=R(),d=e=>t.modelValue.includes(e),C=()=>{F(t.chartOrganisationFilters),p(t.chartOrganisationTypeFilters)},a=q(()=>g.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})).concat(h.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})))),o=e=>{const i=d(e);m(i?t.modelValue.filter(s=>s!=e):[...t.modelValue,e])},m=e=>{if(!e){n("update:modelValue",[]),n("update:scope",[]);return}const i=a.value.filter(s=>e.includes(s.id));n("update:modelValue",i.map(s=>s.id)),n("update:scope",i.map(s=>s.scope))};return D(()=>[t.chartOrganisationFilters,t.chartOrganisationTypeFilters],(e,i)=>{(!e&&!i||!j.isEqual(e,i))&&C()},{immediate:!0}),{fetchingChartOrganisationTypes:f,fetchingChartOrganisations:b,chartOrganisationTypes:h,chartOrganisations:g,ColorEnum:H,charts:a,isSelected:d,onSelect:m,update:o}}});function W(t,n,g,b,F,h){const f=u("FSImage"),p=u("FSTagGroup"),d=u("FSChartTileUI"),C=u("FSDataTable");return I(),S(C,N({loading:t.fetchingChartOrganisationTypes||t.fetchingChartOrganisations,items:t.charts,tableCode:t.$props.tableCode,modelValue:t.$props.modelValue,"onUpdate:modelValue":t.onSelect},t.$attrs),k({"header.imageId-title":r(()=>[l(y,null,{default:r(()=>[T(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[l(y,null,{default:r(()=>[T(G(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(I(),S(f,{key:0,height:"32px",width:"32px",imageId:a.imageId},null,8,["imageId"])):P("",!0)]),"item.tags":r(({item:a})=>[l(p,{variant:"slide",editable:!1,tags:a.tags},null,8,["tags"])]),"item.modelsLabels":r(({item:a})=>[l(p,{editable:!1,tags:a.modelsLabels.map(o=>o.label)},null,8,["tags"])]),"item.tile":r(({item:a})=>[l(d,{label:a.label,categoryLabel:a.chartCategoryLabel,icon:a.icon,imageId:a.imageId,type:a.chartType,color:t.isSelected(a.id)?t.ColorEnum.Primary:t.ColorEnum.Dark,onClick:o=>t.update(a.id)},null,8,["label","categoryLabel","icon","imageId","type","color","onClick"])]),_:2},[E(t.$slots,(a,o)=>({name:o,fn:r(m=>[w(t.$slots,o,M(U(m)))])}))]),1040,["loading","items","tableCode","modelValue","onUpdate:modelValue"])}const v=Q(B,[["render",W]]);B.__docgenInfo={displayName:"FSBaseChartsList",exportName:"default",description:"",tags:{},props:[{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"tableCode",type:{name:"string"},required:!0}],events:[{name:"update:modelValue"},{name:"update:scope"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/charts/FSBaseChartsList.vue"]};const Nt={title:"Foundation/Core/Lists/Base Lists/BaseChartsList",component:v,subcomponents:{FSDataTable:_},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["charts1"]},args:{selecteds:[]}}},c={render:t=>({components:{FSBaseChartsList:v},setup(){return{args:t}},template:`
      <FSBaseChartsList
        :tableCode="args.tableCode"
        v-model="args.selecteds"
      />
    `}),args:{tableCode:"charts1"}};var L,O,V;c.parameters={...c.parameters,docs:{...(L=c.parameters)==null?void 0:L.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartsList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartsList
        :tableCode="args.tableCode"
        v-model="args.selecteds"
      />
    \`
  }),
  args: {
    tableCode: 'charts1'
  }
}`,...(V=(O=c.parameters)==null?void 0:O.docs)==null?void 0:V.source}}};const wt=["Default"];export{c as Default,wt as __namedExportsOrder,Nt as default};
