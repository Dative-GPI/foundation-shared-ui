import{a as U,b as E}from"./properties-Qw-O9fbT.js";import{F as T}from"./FSAutocompleteField-D7kTrWBx.js";import{d as L,c,B as V,E as i,m as j,I as b,J as F,z as g,G as z,D as P,H as G,A as H,K as J}from"./vue.esm-bundler-CqZ6aK3I.js";import{F as $}from"./FSButton-2OKi08_r.js";import{F as K}from"./FSChip-BAjrANNt.js";import{F as N}from"./FSIcon-8KcAAKgU.js";import{u as Q}from"./useChartOrganisationTypes-Cxq5tZuV.js";import{u as R}from"./useChartOrganisations-BR66mJmv.js";import{u as W}from"./useAutocomplete-7at5cGp9.js";import{a as p,b as X,d as Y}from"./chartsTools-BCNkwpFT.js";import{u as Z}from"./useTranslations-D4m4SVfo.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as ee}from"./VAutocomplete-BWj5khwo.js";import"./FSSearchField-VvMfG9Mz.js";import"./FSTextField-CEJP76Sx.js";import"./FSBaseField-eUR0iGRU.js";import"./FSSpan-B7HDTlg9.js";import"./useBreakpoints-DMrtgY61.js";import"./useSlots-BgbXyH5p.js";import"./FSCol-DIPgj7wU.js";import"./css-BZjDzSZ1.js";import"./FSRow-udQVJR1p.js";import"./useColors-BIkRBR7C.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DfSX31J9.js";import"./theme-CCooKRqg.js";import"./useRules-Cutg_0Yh.js";import"./VField-B2nfi808.js";import"./index-BHk1SuU0.js";import"./color-iZFxpsFf.js";import"./transition-C13qRIR1.js";import"./VLabel-D1qNLyt7.js";import"./VInput-f1leR0eo.js";import"./locale-BJmdjC_5.js";import"./VIcon-ZzEkeSRE.js";import"./density-B3EUR5Bv.js";import"./dimensions-CuS7VcMO.js";import"./proxiedModel-BirLikdP.js";import"./loader-Bh1R7Z2A.js";import"./VProgressCircular-cB7gdjsO.js";import"./resizeObserver-C7qOORSR.js";import"./anchor-DiyvyHyx.js";import"./rounded-T_eKj2ZY.js";import"./VDefaultsProvider-3cG3_dFO.js";import"./forwardRefs-DWGaNmQL.js";import"./index-0XvVa1kA.js";import"./VList-BdRSj6hM.js";import"./FSCard-BH9I8ruU.js";import"./VDialog-BjO_95QL.js";import"./VOverlay-CrPt6Ctk.js";import"./display-Cs3Y1ygD.js";import"./scopeId-BQSHBqq_.js";import"./router-C0dK7NvB.js";import"./ssrBoot-B76fNmmB.js";import"./border-DGybV2oK.js";import"./elevation-DCJceMeT.js";import"./index-BSoBU6Pm.js";import"./VImg-UKGkvK5A.js";import"./FSSlideGroup-FM6r_xNQ.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BR7gWMZw.js";import"./VSlideGroupItem-DMC4DYA5.js";import"./group-1sntWZNj.js";import"./FSToggleSet-CzuJHIxU.js";import"./FSWrapGroup-Dpc14vID.js";import"./FSCheckbox-tSiw0lhZ.js";import"./VSelectionControl-Dw5vpEc6.js";import"./FSFadeOut-B817LR1t.js";import"./FSLoader-0ho3eZau.js";import"./FSRadio-DU7kdJ5e.js";import"./VSelect-Bvdm_LMp.js";import"./VMenu-B5kDinlh.js";import"./filter-DhzaDDBp.js";import"./FSRouterLink-CyH3F3Zz.js";import"./vue-router-RJKW7Wfw.js";import"./FSClickable-CBfoSsDs.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./base-B6WxqUqv.js";import"./useAppOrganisationId-oxTtWVij.js";import"./composableFactory-BJClBu0g.js";import"./serviceFactory-B3o6Bvwt.js";import"./lodash-BrWYvtk2.js";import"./filter-C8lRnd-b.js";import"./index-BzzUvCyY.js";import"./theme-CTWEJzEM.js";import"./proxiedModel-BTe_bRC7.js";import"./color-DAxnEVUs.js";import"./icons-6vxClz5I.js";import"./VMenu-Dc3D6cVM.js";import"./display-Ac4jsJim.js";import"./lazy-BpdGTnOx.js";import"./goto-BM7IOwr4.js";import"./VDivider-Dt8vKQX2.js";const B=L({name:"FSAutocompleteChart",components:{FSAutocompleteField:T,FSButton:$,FSChip:K,FSIcon:N},props:{chartOrganisationTypeFilters:{type:Object,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:p.None},ignoreChartOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreChartOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(e,{emit:o}){const{getMany:f,fetching:h,entities:y}=Q(),{getMany:C,fetching:n,entities:s}=R(),{$tr:a}=Z(),u=c(()=>y.value.map(t=>({id:t.id,icon:t.icon,label:t.label,type:p.OrganisationType})).concat(s.value.map(t=>({id:t.id,icon:t.icon,label:t.label,type:p.Organisation})))),k=c(()=>_.value&&(h.value||n.value)),v=c(()=>e.multiple&&e.modelValue?a("autocomplete.chart.placeholder","{0} chart(s) selected",e.modelValue.length):null),D=t=>{if(Array.isArray(t)){const r=t.map(d=>d.id),O=t.map(d=>d.type);o("update:modelValue",r),o("update:type",O),o("update",{modelValue:r,type:O})}else o("update:modelValue",t==null?void 0:t.id),o("update:type",t==null?void 0:t.type),o("update",{modelValue:t==null?void 0:t.id,type:t==null?void 0:t.type})},I=t=>{const r=[];return e.ignoreChartOrganisationTypes||r.push(f({...e.chartOrganisationTypeFilters,search:t??void 0})),e.ignoreChartOrganisations||r.push(C({...e.chartOrganisationFilters,search:t??void 0})),Promise.all(r)},{toggleSet:M,init:_,onUpdate:w}=W(u,[()=>e.chartOrganisationTypeFilters,()=>e.chartOrganisationFilters],o,I,D);return{placeholder:v,toggleSet:M,loading:k,charts:u,chartOriginColor:Y,chartOriginLabel:X,onUpdate:w}}});function te(e,o,f,h,y,C){const n=b("FSChip"),s=b("FSAutocompleteField");return F(),V(s,j({label:e.$props.label??e.$tr("ui.common.chart","Chart"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.charts,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":i(({item:a})=>[a.icon?(F(),V(N,{key:0},{default:i(()=>[H(J(a.icon),1)]),_:2},1024)):G("",!0)]),"item-append":i(({item:a})=>[g(n,{color:e.chartOriginColor(a.type),label:e.chartOriginLabel(a.type)},null,8,["color","label"])]),"toggle-set-item":i(a=>[g($,{prependIcon:a.item.icon,variant:a.getVariant(a.item),color:a.getColor(a.item),class:z(a.getClass(a.item)),label:a.item.label,onClick:u=>a.toggle(a.item)},P({_:2},[a.item.type?{name:"append",fn:i(()=>[g(n,{color:e.chartOriginColor(a.item.type),label:e.chartOriginLabel(a.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const m=x(B,[["render",te]]);B.__docgenInfo={displayName:"FSAutocompleteChart",exportName:"default",description:"",tags:{},props:[{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"ChartOrigin[] | ChartOrigin"},required:!1,defaultValue:{func:!1,value:"ChartOrigin.None"}},{name:"ignoreChartOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreChartOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteChart.vue"]};const Pt={title:"Foundation/Core/Autocompletes/AutocompleteChart",component:m,tags:["autodocs"],argTypes:{...E([T,ee],m),...U(m)}},l={render:e=>({components:{FSAutocompleteChart:m},setup(){return{args:e}},template:`
    <FSAutocompleteChart
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:p.None}};var S,A,q;l.parameters={...l.parameters,docs:{...(S=l.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteChart
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteChart
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: ChartOrigin.None
  }
}`,...(q=(A=l.parameters)==null?void 0:A.docs)==null?void 0:q.source}}};const Gt=["Default"];export{l as Default,Gt as __namedExportsOrder,Pt as default};
