import{l as i,d as l}from"./vue.esm-bundler-cada065a.js";import{u as b}from"./useOrganisationId-8b1fef51.js";function g(c,r=t=>!0,n=t=>t.id){return(e,s)=>{switch(e){case"add":h(c,s,n,r);return;case"update":p(c,s,n,r);return;case"delete":y(c,s,n);return}}}function d(c,r=n=>n.id){return(t,e)=>{if(!c.value)return;const s=r(c.value);(t==="add"||t==="update")&&s===r(e)&&(c.value=e),t==="delete"&&s===e&&(c.value=null)}}function h(c,r,n,t){const e=c.value,s=n(r),a=e.findIndex(o=>n(o)===s),u=t(r);a==-1&&u?e.push(r):a==-1&&!u||(a!=-1&&!u?e.splice(a,1):e.splice(a,1,r))}function p(c,r,n,t){const e=c.value,s=n(r),a=e.findIndex(o=>n(o)===s),u=t(r);a!=-1&&u?e.splice(a,1,r):a!=-1&&!u?e.splice(a,1):a==-1&&u&&e.push(r)}function y(c,r,n){const t=c.value,e=t.findIndex(s=>n(s)===r);e!=-1&&t.splice(e,1)}class m{static create(r){return t=>{for(const e in r)if(t[e]!==r[e])return!1;return!0}}}class E{static get(r){return()=>{const n=r();let t=[];i(()=>{t.forEach(u=>n.unsubscribe(u)),t=[]});const e=l(!1),s=l(null);return{getting:e,get:async u=>{e.value=!0;try{s.value=await n.get(u)}finally{e.value=!1}return t.push(n.subscribe("all",d(s))),s},entity:s}}}static getMany(r){return()=>{const n=r();let t=[];i(()=>{t.forEach(u=>n.unsubscribe(u)),t=[]});const e=l(!1),s=l([]);return{fetching:e,getMany:async(u,o)=>{e.value=!0;try{s.value=await n.getMany(u)}finally{e.value=!1}const v=o||(u?m.create(u):w=>!0);return t.push(n.subscribe("all",g(s,v))),s},entities:s}}}static create(r){return()=>{const n=r();let t=[];i(()=>{t.forEach(u=>n.unsubscribe(u)),t=[]});const e=l(!1),s=l(null);return{creating:e,create:async u=>{e.value=!0;try{s.value=await n.create(u)}finally{e.value=!1}return t.push(n.subscribe("all",d(s))),s},created:s}}}static update(r){return()=>{const n=r();let t=[];i(()=>{t.forEach(u=>n.unsubscribe(u)),t=[]});const e=l(!1),s=l(null);return{updating:e,update:async(u,o)=>{e.value=!0;try{s.value=await n.update(u,o)}finally{e.value=!1}return t.push(n.subscribe("all",d(s))),s.value},updated:s}}}static remove(r){return()=>{const n=r(),t=l(!1);return{removing:t,remove:async s=>{t.value=!0;try{await n.remove(s)}finally{t.value=!1}}}}}}const{organisationId:f}=b();function I(c){return()=>{if(!f.value)throw new Error("OrganisationId is not set");return c(f.value)}}const M=I(c=>`/api/core/v1/organisations/${encodeURIComponent(c)}`);export{M as C,E as a};
