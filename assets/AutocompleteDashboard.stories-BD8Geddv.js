import{a as L,b as z}from"./properties-Qw-O9fbT.js";import{F as C}from"./FSAutocompleteField-_Z_9uP8b.js";import{d as P,c as u,z as S,C as l,m as G,G as V,H as O,R as c,D as H,B as J,E as R,I as K,J as Q}from"./vue.esm-bundler-DtArtqdn.js";import{F as w}from"./FSButton-q8xhuZjd.js";import{F as W}from"./FSChip-BhYAH8Ub.js";import{F as $}from"./FSIcon-DAU03b1P.js";import{u as X}from"./useDashboardOrganisationTypes-DGHvrOqH.js";import{u as Y}from"./useDashboardOrganisations-D_fBcU5u.js";import{u as Z}from"./useDashboardShallows-DI3fcNbG.js";import{d as x,a as ee}from"./dashboards-JoCij0b0.js";import{D as i}from"./dashboards-JSNI7pIu.js";import{u as ae}from"./useAutocomplete-_zZFUWHp.js";import{u as oe}from"./useTranslations-CEyRES9c.js";import{_ as te}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as re}from"./VAutocomplete-lzaE5HQM.js";import"./FSSearchField-BUH-dwrD.js";import"./FSTextField-Dwg3bGtr.js";import"./FSBaseField-COfiqIR8.js";import"./FSSpan-Btkwe66a.js";import"./useBreakpoints-DjafNA1e.js";import"./useSlots-DbyfVVj5.js";import"./FSCol-D6yYDi9X.js";import"./css-Byt5yd9p.js";import"./FSRow-C-mN1bTt.js";import"./useColors-P6sW9vWR.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DfSX31J9.js";import"./theme-BTycGIF1.js";import"./useRules-eDN7Chft.js";import"./VField-OtS-Js_u.js";import"./index-YdMT2sR1.js";import"./color-DKVd81aj.js";import"./transition-POm6u0ds.js";import"./VLabel-D5MHSYH0.js";import"./VInput-Dw4F_0vm.js";import"./locale-EnvrzLNX.js";import"./VIcon-_X0ionFS.js";import"./density-96HGjcby.js";import"./dimensions-Dt4h5jdR.js";import"./proxiedModel-DNPVb8sx.js";import"./loader-CJlqftns.js";import"./VProgressCircular-vkSDrwPD.js";import"./resizeObserver-Bx252tqU.js";import"./anchor-CbVlxldO.js";import"./rounded-B9giz-GX.js";import"./VDefaultsProvider-ChCmi1O1.js";import"./forwardRefs-DWGaNmQL.js";import"./index-ShtRROw2.js";import"./VList-BvtMNBCq.js";import"./FSCard-oEcmHswj.js";import"./VDialog-BTHijwvN.js";import"./VOverlay-Bjkk9AiY.js";import"./display-H53nrFTM.js";import"./scopeId-DRx9AlMK.js";import"./router-DPM6bvc5.js";import"./ssrBoot-BOTKrwq8.js";import"./border--9_J8r4E.js";import"./elevation-DuPJjm1T.js";import"./index-DWcj--5B.js";import"./VImg-DB10nKT8.js";import"./FSSlideGroup-DaeYUKJp.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-Bvnrx82W.js";import"./VSlideGroupItem-XSA54cuy.js";import"./group-B-yFvi8t.js";import"./FSToggleSet-CojuCZxM.js";import"./FSWrapGroup-BBSbZNqu.js";import"./FSCheckbox-D615kJWP.js";import"./VSelectionControl-D_AGLwLV.js";import"./FSFadeOut-okmKwNuP.js";import"./FSLoader-C5CmIvK9.js";import"./FSRadio-K1Efb9Rj.js";import"./VSelect-c638diSh.js";import"./VMenu-Bm-EzALO.js";import"./filter-C3p-TgWl.js";import"./FSRouterLink-BnjgQQHT.js";import"./vue-router-D25_MSGh.js";import"./FSClickable-Lp9mb8CD.js";import"./dashboardTranslation-B8McJAJF.js";import"./useAppLanguageCode-xqeUHdoL.js";import"./lodash-BrWYvtk2.js";import"./base-BeFRilZr.js";import"./useAppOrganisationId-DlPw95JR.js";import"./composableFactory-D6jnN1uy.js";import"./serviceFactory-B3o6Bvwt.js";import"./pathCrumb-Db-cq5HI.js";import"./index-C4LTgncc.js";import"./theme-D430tkul.js";import"./proxiedModel-AkQdauAA.js";import"./color-CPMAIvbI.js";import"./icons-PLoiZDf2.js";import"./VMenu-DNbLy4UA.js";import"./display-EeTnYMZO.js";import"./lazy-BZRYL_Ny.js";import"./goto-C86Q8cpS.js";import"./VDivider-CsMvCpx9.js";const v=P({name:"FSAutocompleteDashboard",components:{FSAutocompleteField:C,FSButton:w,FSChip:W,FSIcon:$},props:{dashboardOrganisationTypeFilters:{type:Object,required:!1,default:null},dashboardOrganisationFilters:{type:Object,required:!1,default:null},dashboardShallowFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:i.None},ignoreDashboardOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreDashboardOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(a,{emit:t}){const{getMany:f,fetching:b,entities:g}=X(),{getMany:h,fetching:n,entities:d}=Y(),{getMany:o,fetching:y,entities:N}=Z(),{$tr:B}=oe(),D=u(()=>g.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.OrganisationType})).concat(d.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.Organisation}))).concat(N.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.Shallow})))),k=u(()=>j.value&&(b.value||n.value||y.value)),M=u(()=>a.multiple&&a.modelValue?B("autocomplete.dashboard.placeholder","{0} dashboard(s) selected",a.modelValue.length):null),I=e=>{if(Array.isArray(e)){const r=e.map(m=>m.id),F=e.map(m=>m.type);t("update:modelValue",r),t("update:type",F),t("update",{modelValue:r,type:F})}else t("update:modelValue",e==null?void 0:e.id),t("update:type",e==null?void 0:e.type),t("update",{modelValue:e==null?void 0:e.id,type:e==null?void 0:e.type})},_=e=>{const r=[];return a.ignoreDashboardOrganisationTypes||r.push(f({...a.dashboardOrganisationTypeFilters,search:e??void 0})),a.ignoreDashboardOrganisations||(r.push(h({...a.dashboardOrganisationFilters,search:e??void 0})),r.push(o({...a.dashboardShallowFilters,search:e??void 0}))),Promise.all(r)},{toggleSet:U,init:j,onUpdate:E}=ae(D,[()=>a.dashboardOrganisationTypeFilters,()=>a.dashboardOrganisationFilters,()=>a.dashboardShallowFilters],t,_,I);return{placeholder:M,dashboards:D,toggleSet:U,loading:k,dashboardTypeColor:ee,dashboardTypeLabel:x,onUpdate:E}}});function le(a,t,f,b,g,h){const n=V("FSChip"),d=V("FSAutocompleteField");return O(),S(d,G({label:a.$props.label??a.$tr("ui.common.dashboard","Dashboard"),toggleSet:!a.$props.toggleSetDisabled&&a.toggleSet,multiple:a.$props.multiple,placeholder:a.placeholder,items:a.dashboards,loading:a.loading,modelValue:a.$props.modelValue,"onUpdate:modelValue":a.onUpdate},a.$attrs),{"item-prepend":l(({item:o})=>[o.icon?(O(),S($,{key:0},{default:l(()=>[K(Q(o.icon),1)]),_:2},1024)):R("",!0)]),"item-append":l(({item:o})=>[c(n,{color:a.dashboardTypeColor(o.type),label:a.dashboardTypeLabel(o.type)},null,8,["color","label"])]),"toggle-set-item":l(o=>[c(w,{prependIcon:o.item.icon,variant:o.getVariant(o.item),color:o.getColor(o.item),class:H(o.getClass(o.item)),label:o.item.label,onClick:y=>o.toggle(o.item)},J({_:2},[o.item.type?{name:"append",fn:l(()=>[c(n,{color:a.dashboardTypeColor(o.item.type),label:a.dashboardTypeLabel(o.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","items","loading","modelValue","onUpdate:modelValue"])}const p=te(v,[["render",le]]);v.__docgenInfo={displayName:"FSAutocompleteDashboard",exportName:"default",description:"",tags:{},props:[{name:"dashboardOrganisationTypeFilters",type:{name:"DashboardOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardOrganisationFilters",type:{name:"DashboardOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardShallowFilters",type:{name:"DashboardShallowFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"DashboardType[] | DashboardType"},required:!1,defaultValue:{func:!1,value:"DashboardType.None"}},{name:"ignoreDashboardOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreDashboardOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteDashboard.vue"]};const Qa={title:"Foundation/Core/Autocompletes/AutocompleteDashboard",component:p,tags:["autodocs"],argTypes:{...z([C,re],p),...L(p)}},s={render:a=>({components:{FSAutocompleteDashboard:p},setup(){return{args:a}},template:`
    <FSAutocompleteDashboard
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:i.None}};var T,q,A;s.parameters={...s.parameters,docs:{...(T=s.parameters)==null?void 0:T.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteDashboard
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteDashboard
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: DashboardType.None
  }
}`,...(A=(q=s.parameters)==null?void 0:q.docs)==null?void 0:A.source}}};const Wa=["Default"];export{s as Default,Wa as __namedExportsOrder,Qa as default};
