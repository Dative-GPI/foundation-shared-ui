import{a as _,b as w}from"./properties-Qw-O9fbT.js";import{F as h}from"./FSDataTable-C5N8RCMy.js";import{F as D}from"./FSDataTableUI-CEIYOOoR.js";import{d as E,c as U,w as R,B as C,D as N,S as P,E as r,m as k,I as p,J as O,O as A,P as G,Q as M,z as i,A as f,K as V,H as z}from"./vue.esm-bundler-CqZ6aK3I.js";import{_ as j}from"./lodash-Zo30T2Bj.js";import{F as H}from"./FSChartTileUI-CfbXItHf.js";import{F as J}from"./FSTagGroup-eHMwstub.js";import{F as K}from"./FSImage-DRd0-U7U.js";import{F as Q}from"./FSText-C92q1_nI.js";import{F as d}from"./FSIcon-I_C15xQX.js";import{_ as B}from"./FSRow-udQVJR1p.js";import{c as W,e as v,C as X}from"./chartsTools-BCNkwpFT.js";import{u as Y}from"./useChartOrganisationTypes-D_qeEhju.js";import{C as Z}from"./useColors-BIkRBR7C.js";import{g as x}from"./enumTools-BEsapygt.js";import{_ as ee}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSLoader-Vyt-Eyzm.js";import"./useBreakpoints-DMrtgY61.js";import"./css-BZjDzSZ1.js";import"./color-6mal3hP4.js";import"./theme-CCooKRqg.js";import"./dimensions-CuS7VcMO.js";import"./elevation-DCJceMeT.js";import"./locale-BJmdjC_5.js";import"./FSCol-DIPgj7wU.js";import"./base-B6WxqUqv.js";import"./useAppOrganisationId-oxTtWVij.js";import"./composableFactory-BJClBu0g.js";import"./serviceFactory-aQiBqOvf.js";import"./_commonjsHelpers-BosuxZz1.js";import"./uuid-DTaye2KM.js";import"./FSFadeOut-B817LR1t.js";import"./vue-router-RJKW7Wfw.js";import"./FSTile-Brz7aCRY.js";import"./FSClickable-Lz1AMzcf.js";import"./FSRouterLink-CyH3F3Zz.js";import"./FSCard-BH9I8ruU.js";import"./VProgressCircular-DDVR-EZI.js";import"./resizeObserver-C7qOORSR.js";import"./VIcon-beNtbbqt.js";import"./FSCheckbox-BY3-VJRx.js";import"./FSSpan-B7HDTlg9.js";import"./useSlots-BgbXyH5p.js";import"./useRules-Cutg_0Yh.js";import"./VSelectionControl-asaj2cFo.js";import"./density-B3EUR5Bv.js";import"./proxiedModel-BirLikdP.js";import"./index-BSoBU6Pm.js";import"./VLabel-BhsUugfE.js";import"./VInput-XpqL7_rK.js";import"./index-BNfVP6r5.js";import"./transition-C13qRIR1.js";import"./FSSearchField-Cs8evTDQ.js";import"./FSTextField-4RgpTJ2W.js";import"./FSBaseField-eUR0iGRU.js";import"./FSButton-dobeAM7X.js";import"./VField-CIUPtZ0k.js";import"./loader-zbNw4pum.js";import"./anchor-DiyvyHyx.js";import"./rounded-T_eKj2ZY.js";import"./VDefaultsProvider-oq6rnkoo.js";import"./forwardRefs-DWGaNmQL.js";import"./index-0XvVa1kA.js";import"./useTranslations-D4m4SVfo.js";import"./FSSelectField-BOH8-gmk.js";import"./VList-DEf1a9yq.js";import"./VDialog-CJ2sxo0Y.js";import"./VOverlay-CHXjpHsK.js";import"./display-Cs3Y1ygD.js";import"./scopeId-BQSHBqq_.js";import"./router-C0dK7NvB.js";import"./ssrBoot-B76fNmmB.js";import"./border-CsMm3Uu5.js";import"./VImg-BLvS348m.js";import"./FSSlideGroup-CD-roNbR.js";import"./FSButtonNextIcon-CWa-blL8.js";import"./VSlideGroupItem-BXZ5gf7q.js";import"./group-1sntWZNj.js";import"./FSToggleSet-CLEmUotz.js";import"./FSWrapGroup-doTNURkF.js";import"./FSRadio-B7ZlHycV.js";import"./VSelect-CiPDTZ1A.js";import"./VMenu-C6lRy5En.js";import"./FSDivider-D2fK97AG.js";import"./FSChip-CPgC0pRG.js";import"./FSMenu-Rp1ILhng.js";import"./FSOptionGroup-CklSxY8R.js";import"./filter-C1K_d8Vd.js";import"./VBtn-BKAXKLVk.js";import"./filter-DhzaDDBp.js";import"./FSIconCard-CnZfOJKt.js";import"./applications-pqrfQrBX.js";import"./FSTag-1DRrFkb-.js";import"./FSImageUI-BiWZkhEx.js";import"./useImages-DKhIXvlG.js";import"./base-CmdGny12.js";import"./useAppAuthToken-nTw6pyPT.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./index-DfSX31J9.js";const q=E({name:"FSBaseChartOrganisationTypesList",components:{FSChartTileUI:H,FSDataTable:h,FSTagGroup:J,FSImage:K,FSIcon:d,FSText:Q,FSRow:B},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},itemTo:{type:Function,required:!1},modelValue:{type:Array,default:()=>[],required:!1},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{entities:l,fetching:y,getMany:T}=Y(),b=U(()=>({modelsLabels:{fixedFilters:l.value.map(t=>t.modelsLabels).reduce((t,o)=>{for(const s of o)t.map(g=>g.id).includes(s.id)||t.push(s);return t},[]).map(t=>({value:t.id,text:t.label})).concat({value:"",text:"--"}),methodFilter:(t,o)=>o.length==0&&t==""||o.length>0&&o.some(s=>s.id==t)},chartType:{fixedFilters:x(X).map(t=>({value:t.value,text:v(t.value)})),methodFilter:(t,o)=>t==o}})),F=t=>e.modelValue.includes(t),c=()=>{T(e.chartOrganisationTypeFilters)};return R(()=>[e.chartOrganisationTypeFilters],(t,o)=>{(!t&&!o||!j.isEqual(t,o))&&c()},{immediate:!0}),{fetchingChartOrganisationTypes:y,chartOrganisationTypes:l,headersOptions:b,ColorEnum:Z,chartTypeLabel:v,isSelected:F,chartIcon:W}}});function te(e,l,y,T,b,F){const c=p("FSImage"),t=p("FSTagGroup"),o=p("FSText"),s=p("FSChartTileUI"),g=p("FSDataTable");return O(),C(g,k({defaultMode:"iterator",items:e.chartOrganisationTypes,itemTo:e.$props.itemTo,loading:e.fetchingChartOrganisationTypes,headersOptions:e.headersOptions,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,"onUpdate:modelValue":l[0]||(l[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),N({"header.imageId-title":r(()=>[i(d,null,{default:r(()=>[f(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[i(d,null,{default:r(()=>[f(V(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(O(),C(c,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):z("",!0)]),"item.tags":r(({item:a})=>[i(t,{variant:"slide",tags:a.tags,showRemove:!1},null,8,["tags"])]),"item.chartType":r(({item:a})=>[i(B,{wrap:!1},{default:r(()=>[i(d,{icon:e.chartIcon(a.chartType)},null,8,["icon"]),i(o,null,{default:r(()=>[f(V(e.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.modelsLabels":r(({item:a})=>[i(t,{variant:"slide",tags:a.modelsLabels.map(n=>n.label),showRemove:!1},null,8,["tags"])]),"item.tile":r(({item:a,toggleSelect:n})=>[i(s,{label:a.label,"category-label":a.chartCategoryLabel,singleSelect:e.$props.singleSelect,selectable:e.$props.selectable,icon:a.icon,scope:a.scope,imageId:a.imageId,type:a.chartType,modelValue:e.isSelected(a.id),"onUpdate:modelValue":S=>n(a),to:e.$props.itemTo&&e.$props.itemTo(a)},null,8,["label","category-label","singleSelect","selectable","icon","scope","imageId","type","modelValue","onUpdate:modelValue","to"])]),_:2},[P(e.$slots,(a,n)=>({name:n,fn:r(S=>[A(e.$slots,n,G(M(S)))])}))]),1040,["items","itemTo","loading","headersOptions","tableCode","modelValue","selectable","singleSelect"])}const u=ee(q,[["render",te]]);q.__docgenInfo={displayName:"FSBaseChartOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"itemTo",type:{name:"(item: ChartOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/chartOrganisationTypes/FSBaseChartOrganisationTypesList.vue"]};const Qt={title:"Foundation/Core/Lists/Base Lists/BaseChartOrganisationTypesList",component:u,subcomponents:{FSDataTable:h},tags:["autodocs"],argTypes:{...w([h,D],u),..._(u),tableCode:{control:"select",options:["chartOrganisationTypes1"]}}},m={render:e=>({components:{FSBaseChartOrganisationTypesList:u},setup(){return{args:e}},template:`
      <FSBaseChartOrganisationTypesList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    `}),args:{tableCode:"chartOrganisationTypes1",modelValue:[]}};var I,L,$;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartOrganisationTypesList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    \`
  }),
  args: {
    tableCode: 'chartOrganisationTypes1',
    modelValue: []
  }
}`,...($=(L=m.parameters)==null?void 0:L.docs)==null?void 0:$.source}}};const Wt=["Default"];export{m as Default,Wt as __namedExportsOrder,Qt as default};
