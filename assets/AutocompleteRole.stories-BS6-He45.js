import{a as U,b as L}from"./properties-DwZ_iDct.js";import{F as N}from"./FSAutocompleteField-Bhc8WovN.js";import{d as j,c,z as T,C as n,m as z,G as h,H as R,P as f,D as G,B as H,E as J,I as W,J as K}from"./vue.esm-bundler-CM4TIH-Q.js";import{F as $}from"./FSButton-DatX9tV0.js";import{F as Q}from"./FSChip-BQxZ7VK4.js";import{F as v}from"./FSIcon-LkE5-ra7.js";import{u as X}from"./useRoleOrganisationTypes-HA4IYaO6.js";import{u as Y}from"./useRoleOrganisations-qhnbL2p6.js";import{u as B}from"./useTranslations-CLqRehXT.js";import{C as g}from"./useColors-CjA2D2xA.js";import{u as Z}from"./useAutocomplete-Bch9dv1c.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as ee}from"./VAutocomplete-ChZxRvKw.js";import"./FSSearchField-BNfMDrZK.js";import"./FSTextField-C7rYmEAT.js";import"./FSBaseField-B4CV_xuh.js";import"./FSSpan-y1Ex52-c.js";import"./useBreakpoints-C6JPO-aN.js";import"./useSlots-c6yg-hhg.js";import"./FSCol-BR6T1l1C.js";import"./css-BgLnvP7H.js";import"./FSRow-oDTnIAxc.js";import"./useRules-B12Yr5ve.js";import"./VField-D97ztcGG.js";import"./index-BJH4L2FX.js";import"./color-Bo6l13w9.js";import"./theme-d3-Spt7o.js";import"./transition-DMoMR0kB.js";import"./VLabel-Ca5QW7tf.js";import"./VInput-DXPqvHKO.js";import"./locale-BqFH1fBg.js";import"./VIcon-GfKFLOEw.js";import"./density-Dl4v3sM7.js";import"./dimensions-DW-k5kP_.js";import"./proxiedModel-DKx29MO-.js";import"./loader-CQB_6PPx.js";import"./VProgressCircular-C-4f-PXJ.js";import"./resizeObserver-Cb3oz2nO.js";import"./anchor-DCFmATqq.js";import"./rounded-CDCr0BOq.js";import"./VDefaultsProvider-DYp4Zk7-.js";import"./forwardRefs-DWGaNmQL.js";import"./index-DWgrY6Dg.js";import"./VList-Cd1xaDQJ.js";import"./FSCard-BedrH_cK.js";import"./VDialog-CgsoTmCe.js";import"./VOverlay-DtEUynQC.js";import"./display-CUGteI3_.js";import"./scopeId-COl1Iexy.js";import"./router-BXF-7Xxx.js";import"./ssrBoot-BDHgcVA9.js";import"./border-CvDIZQGy.js";import"./elevation-DgpWsjTu.js";import"./index-BkfcJ8bv.js";import"./VImg-D7XF-hIS.js";import"./FSSlideGroup-DuKHMc7B.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-CuTZlUtI.js";import"./VSlideGroupItem-41bDxGuE.js";import"./group-3MU8bQUc.js";import"./FSToggleSet-lwjzcNyZ.js";import"./FSWrapGroup-DldQIiCW.js";import"./FSCheckbox-DdLfY5jd.js";import"./VSelectionControl-MVg9W9ha.js";import"./FSFadeOut-CmtPc-zJ.js";import"./FSLoader-CRKSvpTi.js";import"./FSRadio-Di2X4_xD.js";import"./VSelect-IZDtUERE.js";import"./VMenu-sKuqJ8jm.js";import"./filter-DHa7wap7.js";import"./FSRouterLink-CxLK3Rak.js";import"./vue-router-io_1IWnU.js";import"./FSClickable-CXLm7rHe.js";import"./permissionInfos-BPDgTHQl.js";import"./base-Be6PBkQb.js";import"./useAppOrganisationId-BtM3-JKO.js";import"./composableFactory-B6T2dm2_.js";import"./serviceFactory-B3o6Bvwt.js";import"./_commonjsHelpers-BosuxZz1.js";import"./lodash-BrWYvtk2.js";import"./index-DfSX31J9.js";import"./theme-DXeyMPXT.js";import"./VMenu-BXLqflw9.js";import"./display-3DMk9Rra.js";import"./color-CNG8pFwQ.js";import"./goto-BwWWZoRA.js";import"./VDivider-zRdWWS9b.js";var a=(e=>(e[e.None=0]="None",e[e.Organisation=1]="Organisation",e[e.OrganisationType=2]="OrganisationType",e))(a||{});const{$tr:y}=B(),oe=e=>{switch(e){case a.None:return y("ui.common.none","None");case a.Organisation:return y("ui.common.custom","Custom");case a.OrganisationType:return y("ui.common.shared","Shared")}},te=e=>{switch(e){case a.None:return g.Error;case a.Organisation:return g.Primary;case a.OrganisationType:return g.Warning}},k=j({name:"FSAutocompleteRole",components:{FSAutocompleteField:N,FSButton:$,FSChip:Q,FSIcon:v},props:{roleOrganisationTypeFilters:{type:Object,required:!1,default:null},roleOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:a.None},ignoreRoleOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreRoleOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(e,{emit:r}){const{getMany:O,fetching:V,entities:F}=X(),{getMany:b,fetching:i,entities:p}=Y(),{$tr:t}=B(),u=c(()=>F.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:a.OrganisationType})).concat(p.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:a.Organisation})))),D=c(()=>_.value&&(V.value||i.value)),w=c(()=>e.multiple&&e.modelValue?t("autocomplete.role.placeholder","{0} role(s) selected",e.modelValue.length):null),E=o=>{if(Array.isArray(o)){const l=o.map(d=>d.id),S=o.map(d=>d.type);r("update:modelValue",l),r("update:type",S),r("update",{modelValue:l,type:S})}else r("update:modelValue",o==null?void 0:o.id),r("update:type",o==null?void 0:o.type),r("update",{modelValue:o==null?void 0:o.id,type:o==null?void 0:o.type})},I=o=>{const l=[];return e.ignoreRoleOrganisations||l.push(b({...e.roleOrganisationFilters,search:o??void 0})),e.ignoreRoleOrganisationTypes||l.push(O({...e.roleOrganisationTypeFilters,search:o??void 0})),Promise.all(l)},{toggleSet:M,init:_,onUpdate:P}=Z(u,[()=>e.roleOrganisationTypeFilters,()=>e.roleOrganisationFilters],r,I,E);return{placeholder:w,toggleSet:M,RoleType:a,loading:D,roles:u,roleTypeColor:te,roleTypeLabel:oe,onUpdate:P}}});function ae(e,r,O,V,F,b){const i=h("FSChip"),p=h("FSAutocompleteField");return R(),T(p,z({label:e.$props.label??e.$tr("ui.common.role","Role"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.roles,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":n(({item:t})=>[t.icon?(R(),T(v,{key:0},{default:n(()=>[W(K(t.icon),1)]),_:2},1024)):J("",!0)]),"item-append":n(({item:t})=>[f(i,{color:e.roleTypeColor(t.type),label:e.roleTypeLabel(t.type)},null,8,["color","label"])]),"toggle-set-item":n(t=>[f($,{prependIcon:t.item.icon,variant:t.getVariant(t.item),color:t.getColor(t.item),class:G(t.getClass(t.item)),label:t.item.label,onClick:u=>t.toggle(t.item)},H({_:2},[t.item.type?{name:"append",fn:n(()=>[f(i,{color:e.roleTypeColor(t.item.type),label:e.roleTypeLabel(t.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const m=x(k,[["render",ae]]);k.__docgenInfo={displayName:"FSAutocompleteRole",exportName:"default",description:"",tags:{},props:[{name:"roleOrganisationTypeFilters",type:{name:"RoleOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"roleOrganisationFilters",type:{name:"RoleOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"RoleType[] | RoleType"},required:!1,defaultValue:{func:!1,value:"RoleType.None"}},{name:"ignoreRoleOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreRoleOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteRole.vue"]};const _o={title:"Foundation/Core/Autocompletes/AutocompleteRole",component:m,tags:["autodocs"],argTypes:{...L([N,ee],m),...U(m)}},s={render:e=>({components:{FSAutocompleteRole:m},setup(){return{args:e}},template:`
    <FSAutocompleteRole
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:a.None}};var C,A,q;s.parameters={...s.parameters,docs:{...(C=s.parameters)==null?void 0:C.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteRole
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteRole
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: RoleType.None
  }
}`,...(q=(A=s.parameters)==null?void 0:A.docs)==null?void 0:q.source}}};const Po=["Default"];export{s as Default,Po as __namedExportsOrder,_o as default};
