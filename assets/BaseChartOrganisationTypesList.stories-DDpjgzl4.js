import{d as _,c as w,w as D,z as S,B as E,R as N,C as r,m as U,G as p,H as F,K as R,M as k,N as G,Q as i,I as g,J as C,E as M}from"./vue.esm-bundler-CUSnV4DE.js";import{_ as P}from"./lodash-BrWYvtk2.js";import{F as z}from"./FSChartTileUI-DMD578_s.js";import{F as j}from"./FSTagGroup-M1ubsx4V.js";import{F as A}from"./FSImage-DejQHEUL.js";import{F as H}from"./FSText-CUkc4ADt.js";import{F as d}from"./FSIcon-Cp7BQBW6.js";import{_ as L}from"./FSRow-hpHYWcoJ.js";import{F as $}from"./FSDataTable-B4jY-IsZ.js";import{c as J,e as O,C as K}from"./chartsTools-DOk0Z_eo.js";import{u as Q}from"./useChartOrganisationTypes-CioXsEEK.js";import{C as W}from"./useColors-CQZIO9RQ.js";import{g as X}from"./enumTools-BEsapygt.js";import{_ as Y}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSTile-D67iqGNu.js";import"./FSClickable-Bn4xIsxH.js";import"./FSRouterLink-CNYlwNDi.js";import"./vue-router-KxYGmK2X.js";import"./FSCard-BnVyMFnh.js";import"./FSCol-BQiFrdcO.js";import"./css-BnRE2gle.js";import"./useBreakpoints-CQzBW1Q0.js";import"./VProgressCircular-BbyuaGSs.js";import"./color-CgsoZSKd.js";import"./theme-DGuAngmo.js";import"./resizeObserver-Hv1_IiVG.js";import"./VIcon-DeLOaNVc.js";import"./FSCheckbox-DT2R4my4.js";import"./FSSpan-M9GEX7v6.js";import"./useSlots-CY84M1fx.js";import"./useRules-CYZMRvpC.js";import"./VSelectionControl-BrUoGkRx.js";import"./density-DAqBVexQ.js";import"./proxiedModel-DaBGAliH.js";import"./index-BdaiM53K.js";import"./VLabel-DSsJm0B6.js";import"./VInput-C8lN0V_S.js";import"./locale-DYN4KMd8.js";import"./index-DDQZ-RJM.js";import"./transition-C81aHyit.js";import"./dimensions-BI5CQRk1.js";import"./FSWrapGroup-DswCzfON.js";import"./uuid-DTaye2KM.js";import"./VSlideGroupItem-G437Dc1S.js";import"./group-CrKBhSLQ.js";import"./display-DbvBihXn.js";import"./FSTag-Cwjpfn0r.js";import"./VBtn-Rjy2Sxim.js";import"./border-CdoaLNWv.js";import"./elevation-C08MHLji.js";import"./rounded-DQzQH8wE.js";import"./loader-BjfLeESU.js";import"./anchor-MMgLgK3d.js";import"./router-C6XMMO7F.js";import"./VDefaultsProvider-BV2n7M0f.js";import"./FSSlideGroup-BKtLKoi-.js";import"./FSButtonNextIcon-DC1JdNxL.js";import"./FSButton-BTpAdEE5.js";import"./FSImageUI-C65sLZ4Z.js";import"./FSLoader-BxWH0Nmg.js";import"./VImg-DinzZLZB.js";import"./index-CeZa2hiu.js";import"./useImages-B9Gap5IC.js";import"./base-CmdGny12.js";import"./composableFactory-DWA25NsU.js";import"./serviceFactory-B3o6Bvwt.js";import"./useAppAuthToken-BM6m0Bni.js";import"./FSDataTableUI-DQ0FXpmN.js";import"./FSSearchField-eXvJVmGa.js";import"./FSTextField-MbUkXGoG.js";import"./FSBaseField-DwmVeNEG.js";import"./VField-B_GuA4vu.js";import"./forwardRefs-DWGaNmQL.js";import"./useTranslations-D0SM0QeA.js";import"./FSSelectField-GcoemPSS.js";import"./VList-0zKlnGxf.js";import"./VDialog-Co_Esry_.js";import"./VOverlay-BKGgaXLT.js";import"./scopeId-DP5cc-6o.js";import"./ssrBoot-Cb1Ys1Hl.js";import"./FSToggleSet-gSDjdstT.js";import"./FSFadeOut-BguakrVC.js";import"./FSRadio-BICP5Dmr.js";import"./VSelect-CO7kggYd.js";import"./VMenu-BYRtZ3M5.js";import"./FSDivider-DoNtNYap.js";import"./FSChip-B4fQRAFB.js";import"./FSOptionGroup-aSUFDdlH.js";import"./filter-C1K_d8Vd.js";import"./filter-BDc_Ne3E.js";import"./base-DyefFz5t.js";import"./useAppOrganisationId-D-BntkEj.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./index-DfSX31J9.js";const B=_({name:"FSBaseChartOrganisationTypesList",components:{FSChartTileUI:z,FSDataTable:$,FSTagGroup:j,FSImage:A,FSIcon:d,FSText:H,FSRow:L},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},itemTo:{type:Function,required:!1},modelValue:{type:Array,default:()=>[],required:!1},editable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{entities:l,fetching:f,getMany:h}=Q(),y=w(()=>({modelsLabels:{fixedFilters:l.value.map(t=>t.modelsLabels).reduce((t,o)=>{for(const s of o)t.map(c=>c.id).includes(s.id)||t.push(s);return t},[]).map(t=>({value:t.id,text:t.label})).concat({value:"",text:"--"}),methodFilter:(t,o)=>o.length==0&&t==""||o.length>0&&o.some(s=>s.id==t)},chartType:{fixedFilters:X(K).map(t=>({value:t.value,text:O(t.value)})),methodFilter:(t,o)=>t==o}})),T=t=>e.modelValue.includes(t),u=()=>{h(e.chartOrganisationTypeFilters)};return D(()=>[e.chartOrganisationTypeFilters],(t,o)=>{(!t&&!o||!P.isEqual(t,o))&&u()},{immediate:!0}),{fetchingChartOrganisationTypes:f,chartOrganisationTypes:l,headersOptions:y,ColorEnum:W,chartTypeLabel:O,isSelected:T,chartIcon:J}}});function Z(e,l,f,h,y,T){const u=p("FSImage"),t=p("FSTagGroup"),o=p("FSText"),s=p("FSChartTileUI"),c=p("FSDataTable");return F(),S(c,U({defaultMode:"iterator",items:e.chartOrganisationTypes,itemTo:e.$props.itemTo,loading:e.fetchingChartOrganisationTypes,headersOptions:e.headersOptions,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,showSelect:e.$props.editable,singleSelect:e.$props.singleSelect,"onUpdate:modelValue":l[0]||(l[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),E({"header.imageId-title":r(()=>[i(d,null,{default:r(()=>[g(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[i(d,null,{default:r(()=>[g(C(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(F(),S(u,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):M("",!0)]),"item.tags":r(({item:a})=>[i(t,{variant:"slide",editable:!1,tags:a.tags},null,8,["tags"])]),"item.chartType":r(({item:a})=>[i(L,{wrap:!1},{default:r(()=>[i(d,{icon:e.chartIcon(a.chartType)},null,8,["icon"]),i(o,null,{default:r(()=>[g(C(e.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.modelsLabels":r(({item:a})=>[i(t,{editable:!1,tags:a.modelsLabels.map(n=>n.label)},null,8,["tags"])]),"item.tile":r(({item:a,toggleSelect:n})=>[i(s,{label:a.label,"category-label":a.chartCategoryLabel,singleSelect:e.$props.singleSelect,editable:e.$props.editable,icon:a.icon,imageId:a.imageId,type:a.chartType,modelValue:e.isSelected(a.id),"onUpdate:modelValue":b=>n(a),to:e.$props.itemTo&&e.$props.itemTo(a)},null,8,["label","category-label","singleSelect","editable","icon","imageId","type","modelValue","onUpdate:modelValue","to"])]),_:2},[N(e.$slots,(a,n)=>({name:n,fn:r(b=>[R(e.$slots,n,k(G(b)))])}))]),1040,["items","itemTo","loading","headersOptions","tableCode","modelValue","showSelect","singleSelect"])}const q=Y(B,[["render",Z]]);B.__docgenInfo={displayName:"FSBaseChartOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"itemTo",type:{name:"(item: ChartOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/chartOrganisationTypes/FSBaseChartOrganisationTypesList.vue"]};const Pt={title:"Foundation/Core/Lists/Base Lists/BaseChartOrganisationTypesList",component:q,subcomponents:{FSDataTable:$},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["chartOrganisationTypes1"]}}},m={render:e=>({components:{FSBaseChartOrganisationTypesList:q},setup(){return{args:e}},template:`
      <FSBaseChartOrganisationTypesList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    `}),args:{tableCode:"chartOrganisationTypes1",modelValue:[],singleSelect:!1,editable:!0}};var V,I,v;m.parameters={...m.parameters,docs:{...(V=m.parameters)==null?void 0:V.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartOrganisationTypesList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    \`
  }),
  args: {
    tableCode: 'chartOrganisationTypes1',
    modelValue: [],
    singleSelect: false,
    editable: true
  }
}`,...(v=(I=m.parameters)==null?void 0:I.docs)==null?void 0:v.source}}};const zt=["Default"];export{m as Default,zt as __namedExportsOrder,Pt as default};
