var we=Object.defineProperty;var ye=(o,e,t)=>e in o?we(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var a=(o,e,t)=>ye(o,typeof e!="symbol"?e+"":e,t);import{b as M,c as ve,w as le,V as Se,d as Ce,o as Ie,y as J,z as Y,A as Q,m as ke,D as Te}from"./vue.esm-bundler-DeSao-KJ.js";import{F as Ee}from"./FSDeviceOrganisationTileUI-crmVs2dB.js";import{F as De}from"./FSLoadTile-BVjKTt5L.js";import{b as S}from"./useAppTimeZone-B8cBFYr8.js";import{C as Pe,H as he}from"./base-Db9bJp6t.js";import{S as P}from"./serviceFactory-Bd5jifNi.js";import{C as A}from"./composableFactory-rrf4GM2L.js";import{P as Re}from"./pathCrumb-Db-cq5HI.js";import{_ as $e}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSStatusesCarousel-BxH2c-1s.js";import"./FSButton-CUXN7UlR.js";import"./FSClickable-7AMX5jTq.js";import"./FSCard-B1Oet1YO.js";import"./FSCol-CA6NzDpV.js";import"./css-BnhLLynS.js";import"./FSRow-JJutUvlP.js";import"./useColors-DL92kHTE.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-RQK62Xub.js";import"./VProgressCircular-DA_NN_fl.js";import"./color-XZPyE2lN.js";import"./useRender-CIdmfI-I.js";import"./resizeObserver-euslJwVY.js";import"./VIcon-B0BI55vc.js";import"./tag-BL1d6r1f.js";import"./FSSpan-t6bMdSRn.js";import"./useSlots-DPxV8yUU.js";import"./FSIcon-DuYoAbGq.js";import"./FSWindow-BnRDJSe1.js";import"./group-BqOqgFvy.js";import"./proxiedModel-B9H_VIYa.js";import"./locale-BTkT-VzI.js";import"./VBtn-D2I7zlII.js";import"./border-IVtV0L-L.js";import"./density-4sjlTnVP.js";import"./elevation-BBJMtRPf.js";import"./rounded-BOBir3aK.js";import"./dimensions-aXABR5Zz.js";import"./loader-CnGjHJ-m.js";import"./anchor-LC_hEQAj.js";import"./router-Cr7df_Je.js";import"./index-BWi4ltEp.js";import"./VDefaultsProvider-DHsFAklf.js";import"./lazy-B9cZ4h7g.js";import"./ssrBoot-BXIJ_jLM.js";import"./transition-CTQG5_JK.js";import"./FSChip-DCQwqweB.js";import"./FSText-DFdak8tp.js";import"./FSColor-DAx6b_VX.js";import"./VMenu-CbRbHjmn.js";import"./VOverlay-Dh7x6Oij.js";import"./forwardRefs-DWGaNmQL.js";import"./display-CUoCREED.js";import"./useTranslations-DAApg7Ob.js";import"./FSDivider-BkRq60Hq.js";import"./FSImage-BUA3-t2R.js";import"./FSLoader-D-GHyjSx.js";import"./base-BNnJ_ndD.js";import"./VImg-BljrNAqA.js";import"./index-CrTEBV4I.js";import"./FSTile-BoBPsz0g.js";import"./FSCheckbox-BfU8RDs1.js";import"./useRules-DQ31e--d.js";import"./VSelectionControl-DWVZmIhS.js";import"./VLabel-CWiDHCZM.js";import"./VInput-DX4N6NPh.js";import"./index-BIb3aONP.js";import"./useAppOrganisationId-JzV73dfQ.js";import"./lodash-BiW_TGGX.js";class Ae{constructor(e){a(this,"id");a(this,"sourceTimestamp");a(this,"enqueuedTimestamp");a(this,"processedTimestamp");a(this,"status");a(this,"icon");a(this,"color");this.id=e.id,this.sourceTimestamp=e.sourceTimestamp?S(e.sourceTimestamp):null,this.enqueuedTimestamp=e.enqueuedTimestamp?S(e.enqueuedTimestamp):null,this.processedTimestamp=e.processedTimestamp?S(e.processedTimestamp):null,this.status=e.status,this.icon=e.icon,this.color=e.color}}class F extends Ae{constructor(e){super(e)}}class Z{constructor(e){a(this,"id");a(this,"label");a(this,"status");a(this,"criticity");a(this,"sourceTimestamp");a(this,"enqueuedTimestamp");this.id=e.id,this.label=e.label,this.status=e.status,this.criticity=e.criticity,this.sourceTimestamp=e.sourceTimestamp?S(e.sourceTimestamp):void 0,this.enqueuedTimestamp=e.enqueuedTimestamp?S(e.enqueuedTimestamp):void 0}}class Le{constructor(e){a(this,"id");a(this,"key");a(this,"value");a(this,"keyLabel");a(this,"valueLabel");this.id=e.id,this.key=e.key,this.value=e.value,this.keyLabel=e.keyLabel,this.valueLabel=e.valueLabel}}class xe{constructor(e){a(this,"id");a(this,"statuses");this.id=e.id,this.statuses=e.statuses.map(t=>new Oe(t))}}class Oe{constructor(e){a(this,"modelStatusId");a(this,"statusGroups");this.modelStatusId=e.modelStatusId,this.statusGroups=e.statusGroups.map(t=>new Ne(t))}}class Ne{constructor(e){a(this,"sourceTimestamp");a(this,"enqueuedTimestamp");a(this,"processedTimestamp");a(this,"groupByValue");a(this,"value");a(this,"unit");a(this,"label");a(this,"icon");a(this,"color");this.sourceTimestamp=e.sourceTimestamp?S(e.sourceTimestamp):null,this.enqueuedTimestamp=e.enqueuedTimestamp?S(e.enqueuedTimestamp):null,this.processedTimestamp=e.processedTimestamp?S(e.processedTimestamp):null,this.groupByValue=e.groupByValue,this.value=e.value,this.unit=e.unit,this.label=e.label,this.icon=e.icon,this.color=e.color}}class j extends xe{constructor(e){super(e)}}class Ue{constructor(e){a(this,"id");a(this,"modelId");a(this,"dataCategoryId");a(this,"dataCategoryLabel");a(this,"dataDefinitionId");a(this,"dataDefinitionLabel");a(this,"groupById");a(this,"groupByLabel");a(this,"label");a(this,"index");a(this,"lifetime");a(this,"timeToLive");a(this,"showDefault");a(this,"iconDefault");a(this,"colorDefault");this.id=e.id,this.modelId=e.modelId,this.dataCategoryId=e.dataCategoryId,this.dataCategoryLabel=e.dataCategoryLabel,this.dataDefinitionId=e.dataDefinitionId,this.dataDefinitionLabel=e.dataDefinitionLabel,this.groupById=e.groupById,this.groupByLabel=e.groupByLabel,this.label=e.label,this.index=e.index,this.lifetime=e.lifetime,this.timeToLive=e.timeToLive,this.showDefault=e.showDefault,this.iconDefault=e.iconDefault,this.colorDefault=e.colorDefault}}class ue{constructor(e){a(this,"id");a(this,"deviceId");a(this,"manufacturerId");a(this,"manufacturerLabel");a(this,"articleId");a(this,"articleLabel");a(this,"modelId");a(this,"modelLabel");a(this,"ownerId");a(this,"ownerLabel");a(this,"organisationId");a(this,"managerId");a(this,"managerName");a(this,"locationId");a(this,"locationLabel");a(this,"locationAddress");a(this,"groupId");a(this,"groupLabel");a(this,"groupIcon");a(this,"label");a(this,"code");a(this,"imageId");a(this,"tags");a(this,"unrestricted");a(this,"online");a(this,"meta");a(this,"modelStatuses");a(this,"status");a(this,"connectivity");a(this,"alerts");a(this,"worstAlert");this.id=e.id,this.deviceId=e.deviceId,this.manufacturerId=e.manufacturerId,this.manufacturerLabel=e.manufacturerLabel,this.articleId=e.articleId,this.articleLabel=e.articleLabel,this.modelId=e.modelId,this.modelLabel=e.modelLabel,this.ownerId=e.ownerId,this.ownerLabel=e.ownerLabel,this.organisationId=e.organisationId,this.managerId=e.managerId,this.managerName=e.managerName,this.locationId=e.locationId,this.locationLabel=e.locationLabel,this.locationAddress=e.locationAddress,this.groupId=e.groupId,this.groupLabel=e.groupLabel,this.groupIcon=e.groupIcon,this.label=e.label,this.code=e.code,this.imageId=e.imageId,this.tags=e.tags.slice(),this.unrestricted=e.unrestricted,this.online=e.online,this.meta={...e.meta},this.modelStatuses=e.modelStatuses.map(t=>new Ue(t)),this.status=new j(e.status),this.connectivity=new F(e.connectivity),this.alerts=e.alerts.map(t=>new Z(t)),this.worstAlert=e.worstAlert!=null?new Z(e.worstAlert):null}get connectable(){return this.connectivity}}class W extends ue{constructor(t){super(t);a(this,"articleCode");a(this,"familyId");a(this,"familyLabel");a(this,"description");a(this,"options");a(this,"path");this.articleCode=t.articleCode,this.familyId=t.familyId,this.familyLabel=t.familyLabel,this.description=t.description,this.options=t.options.map(n=>new Le({...n})),this.path=t.path.map(n=>new Re({...n})).sort((n,s)=>s.index-n.index)}}const B=()=>`${Pe()}/device-organisations`,I=o=>`${B()}/${encodeURIComponent(o)}`,He=o=>`${I(o)}/group`,Me=o=>`${I(o)}/location`,We=o=>`${I(o)}/connectivity`,Be=()=>`${he()}/connectivities`,Fe=o=>`${I(o)}/status`,je=()=>`${he()}/statuses`;class k extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class V extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class y extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class Ve extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class qe extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class ze extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class ee extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class Ge extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}class de{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class N{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}var r;(function(o){o[o.Trace=0]="Trace",o[o.Debug=1]="Debug",o[o.Information=2]="Information",o[o.Warning=3]="Warning",o[o.Error=4]="Error",o[o.Critical=5]="Critical",o[o.None=6]="None"})(r||(r={}));class R{constructor(){}log(e,t){}}R.instance=new R;const Xe="8.0.0";class _{static isRequired(e,t){if(e==null)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class p{static get isBrowser(){return!p.isNode&&typeof window=="object"&&typeof window.document=="object"}static get isWebWorker(){return!p.isNode&&typeof self=="object"&&"importScripts"in self}static get isReactNative(){return!p.isNode&&typeof window=="object"&&typeof window.document>"u"}static get isNode(){return typeof process<"u"&&process.release&&process.release.name==="node"}}function $(o,e){let t="";return E(o)?(t=`Binary data of length ${o.byteLength}`,e&&(t+=`. Content: '${Ke(o)}'`)):typeof o=="string"&&(t=`String data of length ${o.length}`,e&&(t+=`. Content: '${o}'`)),t}function Ke(o){const e=new Uint8Array(o);let t="";return e.forEach(n=>{const s=n<16?"0":"";t+=`0x${s}${n.toString(16)} `}),t.substr(0,t.length-1)}function E(o){return o&&typeof ArrayBuffer<"u"&&(o instanceof ArrayBuffer||o.constructor&&o.constructor.name==="ArrayBuffer")}async function ge(o,e,t,n,s,i){const c={},[l,h]=D();c[l]=h,o.log(r.Trace,`(${e} transport) sending data. ${$(s,i.logMessageContent)}.`);const u=E(s)?"arraybuffer":"text",g=await t.post(n,{content:s,headers:{...c,...i.headers},responseType:u,timeout:i.timeout,withCredentials:i.withCredentials});o.log(r.Trace,`(${e} transport) request complete. Response status: ${g.statusCode}.`)}function Je(o){return o===void 0?new O(r.Information):o===null?R.instance:o.log!==void 0?o:new O(o)}class Ye{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),this._subject.observers.length===0&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class O{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${new Date().toISOString()}] ${r[e]}: ${t}`;switch(e){case r.Critical:case r.Error:this.out.error(n);break;case r.Warning:this.out.warn(n);break;case r.Information:this.out.info(n);break;default:this.out.log(n);break}}}}function D(){let o="X-SignalR-User-Agent";return p.isNode&&(o="User-Agent"),[o,Qe(Xe,Ze(),tt(),et())]}function Qe(o,e,t,n){let s="Microsoft SignalR/";const i=o.split(".");return s+=`${i[0]}.${i[1]}`,s+=` (${o}; `,e&&e!==""?s+=`${e}; `:s+="Unknown OS; ",s+=`${t}`,n?s+=`; ${n}`:s+="; Unknown Runtime Version",s+=")",s}function Ze(){if(p.isNode)switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}else return""}function et(){if(p.isNode)return process.versions.node}function tt(){return p.isNode?"NodeJS":"Browser"}function te(o){return o.stack?o.stack:o.message?o.message:`${o}`}function nt(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("could not find global")}function ot(o){return typeof fetch>"u"||p.isNode?(o._jar=new(require("tough-cookie")).CookieJar,typeof fetch>"u"?o._fetchType=require("node-fetch"):o._fetchType=fetch,o._fetchType=require("fetch-cookie")(o._fetchType,o._jar),!0):!1}function st(o){return typeof AbortController>"u"?(o._abortControllerType=require("abort-controller"),!0):!1}function it(){return require("ws")}function rt(){return require("eventsource")}class ct extends N{constructor(e){super(),this._logger=e;const t={_fetchType:void 0,_jar:void 0};ot(t)?(this._fetchType=t._fetchType,this._jar=t._jar):this._fetchType=fetch.bind(nt()),this._abortControllerType=AbortController;const n={_abortControllerType:this._abortControllerType};st(n)&&(this._abortControllerType=n._abortControllerType)}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new y;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let n;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),n=new y});let s=null;if(e.timeout){const h=e.timeout;s=setTimeout(()=>{t.abort(),this._logger.log(r.Warning,"Timeout from HTTP request."),n=new V},h)}e.content===""&&(e.content=void 0),e.content&&(e.headers=e.headers||{},E(e.content)?e.headers["Content-Type"]="application/octet-stream":e.headers["Content-Type"]="text/plain;charset=UTF-8");let i;try{i=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:e.withCredentials===!0?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(h){throw n||(this._logger.log(r.Warning,`Error from HTTP request. ${h}.`),h)}finally{s&&clearTimeout(s),e.abortSignal&&(e.abortSignal.onabort=null)}if(!i.ok){const h=await ne(i,"text");throw new k(h||i.statusText,i.status)}const l=await ne(i,e.responseType);return new de(i.status,i.statusText,l)}getCookieString(e){let t="";return p.isNode&&this._jar&&this._jar.getCookies(e,(n,s)=>t=s.join("; ")),t}}function ne(o,e){let t;switch(e){case"arraybuffer":t=o.arrayBuffer();break;case"text":t=o.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:t=o.text();break}return t}class at extends N{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new y):e.method?e.url?new Promise((t,n)=>{const s=new XMLHttpRequest;s.open(e.method,e.url,!0),s.withCredentials=e.withCredentials===void 0?!0:e.withCredentials,s.setRequestHeader("X-Requested-With","XMLHttpRequest"),e.content===""&&(e.content=void 0),e.content&&(E(e.content)?s.setRequestHeader("Content-Type","application/octet-stream"):s.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const i=e.headers;i&&Object.keys(i).forEach(c=>{s.setRequestHeader(c,i[c])}),e.responseType&&(s.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{s.abort(),n(new y)}),e.timeout&&(s.timeout=e.timeout),s.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),s.status>=200&&s.status<300?t(new de(s.status,s.statusText,s.response||s.responseText)):n(new k(s.response||s.responseText||s.statusText,s.status))},s.onerror=()=>{this._logger.log(r.Warning,`Error from HTTP request. ${s.status}: ${s.statusText}.`),n(new k(s.statusText,s.status))},s.ontimeout=()=>{this._logger.log(r.Warning,"Timeout from HTTP request."),n(new V)},s.send(e.content)}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class lt extends N{constructor(e){if(super(),typeof fetch<"u"||p.isNode)this._httpClient=new ct(e);else if(typeof XMLHttpRequest<"u")this._httpClient=new at(e);else throw new Error("No usable HttpClient found.")}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new y):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}class w{static write(e){return`${e}${w.RecordSeparator}`}static parse(e){if(e[e.length-1]!==w.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(w.RecordSeparator);return t.pop(),t}}w.RecordSeparatorCode=30;w.RecordSeparator=String.fromCharCode(w.RecordSeparatorCode);class ht{writeHandshakeRequest(e){return w.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(E(e)){const l=new Uint8Array(e),h=l.indexOf(w.RecordSeparatorCode);if(h===-1)throw new Error("Message is incomplete.");const u=h+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(l.slice(0,u))),n=l.byteLength>u?l.slice(u).buffer:null}else{const l=e,h=l.indexOf(w.RecordSeparator);if(h===-1)throw new Error("Message is incomplete.");const u=h+1;t=l.substring(0,u),n=l.length>u?l.substring(u):null}const s=w.parse(t),i=JSON.parse(s[0]);if(i.type)throw new Error("Expected a handshake response from the server.");return[n,i]}}var d;(function(o){o[o.Invocation=1]="Invocation",o[o.StreamItem=2]="StreamItem",o[o.Completion=3]="Completion",o[o.StreamInvocation=4]="StreamInvocation",o[o.CancelInvocation=5]="CancelInvocation",o[o.Ping=6]="Ping",o[o.Close=7]="Close",o[o.Ack=8]="Ack",o[o.Sequence=9]="Sequence"})(d||(d={}));class ut{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new Ye(this,e)}}class dt{constructor(e,t,n){this._bufferSize=1e5,this._messages=[],this._totalMessageCount=0,this._waitForSequenceMessage=!1,this._nextReceivingSequenceId=1,this._latestReceivedSequenceId=0,this._bufferedByteCount=0,this._reconnectInProgress=!1,this._protocol=e,this._connection=t,this._bufferSize=n}async _send(e){const t=this._protocol.writeMessage(e);let n=Promise.resolve();if(this._isInvocationMessage(e)){this._totalMessageCount++;let s=()=>{},i=()=>{};E(t)?this._bufferedByteCount+=t.byteLength:this._bufferedByteCount+=t.length,this._bufferedByteCount>=this._bufferSize&&(n=new Promise((c,l)=>{s=c,i=l})),this._messages.push(new gt(t,this._totalMessageCount,s,i))}try{this._reconnectInProgress||await this._connection.send(t)}catch{this._disconnected()}await n}_ack(e){let t=-1;for(let n=0;n<this._messages.length;n++){const s=this._messages[n];if(s._id<=e.sequenceId)t=n,E(s._message)?this._bufferedByteCount-=s._message.byteLength:this._bufferedByteCount-=s._message.length,s._resolver();else if(this._bufferedByteCount<this._bufferSize)s._resolver();else break}t!==-1&&(this._messages=this._messages.slice(t+1))}_shouldProcessMessage(e){if(this._waitForSequenceMessage)return e.type!==d.Sequence?!1:(this._waitForSequenceMessage=!1,!0);if(!this._isInvocationMessage(e))return!0;const t=this._nextReceivingSequenceId;return this._nextReceivingSequenceId++,t<=this._latestReceivedSequenceId?(t===this._latestReceivedSequenceId&&this._ackTimer(),!1):(this._latestReceivedSequenceId=t,this._ackTimer(),!0)}_resetSequence(e){if(e.sequenceId>this._nextReceivingSequenceId){this._connection.stop(new Error("Sequence ID greater than amount of messages we've received."));return}this._nextReceivingSequenceId=e.sequenceId}_disconnected(){this._reconnectInProgress=!0,this._waitForSequenceMessage=!0}async _resend(){const e=this._messages.length!==0?this._messages[0]._id:this._totalMessageCount+1;await this._connection.send(this._protocol.writeMessage({type:d.Sequence,sequenceId:e}));const t=this._messages;for(const n of t)await this._connection.send(n._message);this._reconnectInProgress=!1}_dispose(e){e??(e=new Error("Unable to reconnect to server."));for(const t of this._messages)t._rejector(e)}_isInvocationMessage(e){switch(e.type){case d.Invocation:case d.StreamItem:case d.Completion:case d.StreamInvocation:case d.CancelInvocation:return!0;case d.Close:case d.Sequence:case d.Ping:case d.Ack:return!1}}_ackTimer(){this._ackTimerHandle===void 0&&(this._ackTimerHandle=setTimeout(async()=>{try{this._reconnectInProgress||await this._connection.send(this._protocol.writeMessage({type:d.Ack,sequenceId:this._latestReceivedSequenceId}))}catch{}clearTimeout(this._ackTimerHandle),this._ackTimerHandle=void 0},1e3))}}class gt{constructor(e,t,n,s){this._message=e,this._id=t,this._resolver=n,this._rejector=s}}const ft=30*1e3,pt=15*1e3,_t=1e5;var f;(function(o){o.Disconnected="Disconnected",o.Connecting="Connecting",o.Connected="Connected",o.Disconnecting="Disconnecting",o.Reconnecting="Reconnecting"})(f||(f={}));class q{static create(e,t,n,s,i,c,l){return new q(e,t,n,s,i,c,l)}constructor(e,t,n,s,i,c,l){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(r.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},_.isRequired(e,"connection"),_.isRequired(t,"logger"),_.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=i??ft,this.keepAliveIntervalInMilliseconds=c??pt,this._statefulReconnectBufferSize=l??_t,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=s,this._handshakeProtocol=new ht,this.connection.onreceive=h=>this._processIncomingData(h),this.connection.onclose=h=>this._connectionClosed(h),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=f.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:d.Ping})}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==f.Disconnected&&this._connectionState!==f.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==f.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=f.Connecting,this._logger.log(r.Debug,"Starting HubConnection.");try{await this._startInternal(),p.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=f.Connected,this._connectionStarted=!0,this._logger.log(r.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=f.Disconnected,this._logger.log(r.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise((t,n)=>{this._handshakeResolver=t,this._handshakeRejecter=n});await this.connection.start(this._protocol.transferFormat);try{let t=this._protocol.version;this.connection.features.reconnect||(t=1);const n={protocol:this._protocol.name,version:t};if(this._logger.log(r.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(n)),this._logger.log(r.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError;(this.connection.features.reconnect||!1)&&(this._messageBuffer=new dt(this._protocol,this.connection,this._statefulReconnectBufferSize),this.connection.features.disconnected=this._messageBuffer._disconnected.bind(this._messageBuffer),this.connection.features.resend=()=>{if(this._messageBuffer)return this._messageBuffer._resend()}),this.connection.features.inherentKeepAlive||await this._sendMessage(this._cachedPingMessage)}catch(t){throw this._logger.log(r.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(t),t}}async stop(){const e=this._startPromise;this.connection.features.reconnect=!1,this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch{}}_stopInternal(e){if(this._connectionState===f.Disconnected)return this._logger.log(r.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve();if(this._connectionState===f.Disconnecting)return this._logger.log(r.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;const t=this._connectionState;return this._connectionState=f.Disconnecting,this._logger.log(r.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(r.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(t===f.Connected&&this._sendCloseMessage(),this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new y("The connection was stopped before the hub handshake could complete."),this.connection.stop(e))}async _sendCloseMessage(){try{await this._sendWithProtocol(this._createCloseMessage())}catch{}}stream(e,...t){const[n,s]=this._replaceStreamingParams(t),i=this._createStreamInvocation(e,t,s);let c;const l=new ut;return l.cancelCallback=()=>{const h=this._createCancelInvocation(i.invocationId);return delete this._callbacks[i.invocationId],c.then(()=>this._sendWithProtocol(h))},this._callbacks[i.invocationId]=(h,u)=>{if(u){l.error(u);return}else h&&(h.type===d.Completion?h.error?l.error(new Error(h.error)):l.complete():l.next(h.item))},c=this._sendWithProtocol(i).catch(h=>{l.error(h),delete this._callbacks[i.invocationId]}),this._launchStreams(n,c),l}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._messageBuffer?this._messageBuffer._send(e):this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,s]=this._replaceStreamingParams(t),i=this._sendWithProtocol(this._createInvocation(e,t,!0,s));return this._launchStreams(n,i),i}invoke(e,...t){const[n,s]=this._replaceStreamingParams(t),i=this._createInvocation(e,t,!1,s);return new Promise((l,h)=>{this._callbacks[i.invocationId]=(g,v)=>{if(v){h(v);return}else g&&(g.type===d.Completion?g.error?h(new Error(g.error)):l(g.result):h(new Error(`Unexpected message type: ${g.type}`)))};const u=this._sendWithProtocol(i).catch(g=>{h(g),delete this._callbacks[i.invocationId]});this._launchStreams(n,u)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),this._methods[e].indexOf(t)===-1&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const s=n.indexOf(t);s!==-1&&(n.splice(s,1),n.length===0&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)if(!(this._messageBuffer&&!this._messageBuffer._shouldProcessMessage(n)))switch(n.type){case d.Invocation:this._invokeClientMethod(n);break;case d.StreamItem:case d.Completion:{const s=this._callbacks[n.invocationId];if(s){n.type===d.Completion&&delete this._callbacks[n.invocationId];try{s(n)}catch(i){this._logger.log(r.Error,`Stream callback threw error: ${te(i)}`)}}break}case d.Ping:break;case d.Close:{this._logger.log(r.Information,"Close message received from server.");const s=n.error?new Error("Server returned an error on close: "+n.error):void 0;n.allowReconnect===!0?this.connection.stop(s):this._stopPromise=this._stopInternal(s);break}case d.Ack:this._messageBuffer&&this._messageBuffer._ack(n);break;case d.Sequence:this._messageBuffer&&this._messageBuffer._resetSequence(n);break;default:this._logger.log(r.Warning,`Invalid message type: ${n.type}.`);break}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(s){const i="Error parsing handshake response: "+s;this._logger.log(r.Error,i);const c=new Error(i);throw this._handshakeRejecter(c),c}if(t.error){const s="Server returned handshake error: "+t.error;this._logger.log(r.Error,s);const i=new Error(s);throw this._handshakeRejecter(i),i}else this._logger.log(r.Debug,"Server handshake complete.");return this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),this._pingServerHandle===void 0)){let e=this._nextKeepAlive-new Date().getTime();e<0&&(e=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===f.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}async _invokeClientMethod(e){const t=e.target.toLowerCase(),n=this._methods[t];if(!n){this._logger.log(r.Warning,`No client method with the name '${t}' found.`),e.invocationId&&(this._logger.log(r.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),await this._sendWithProtocol(this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)));return}const s=n.slice(),i=!!e.invocationId;let c,l,h;for(const u of s)try{const g=c;c=await u.apply(this,e.arguments),i&&c&&g&&(this._logger.log(r.Error,`Multiple results provided for '${t}'. Sending error to server.`),h=this._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),l=void 0}catch(g){l=g,this._logger.log(r.Error,`A callback for the method '${t}' threw error '${g}'.`)}h?await this._sendWithProtocol(h):i?(l?h=this._createCompletionMessage(e.invocationId,`${l}`,null):c!==void 0?h=this._createCompletionMessage(e.invocationId,null,c):(this._logger.log(r.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),h=this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),await this._sendWithProtocol(h)):c&&this._logger.log(r.Error,`Result given for '${t}' method but server is not expecting a result.`)}_connectionClosed(e){this._logger.log(r.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new y("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===f.Disconnecting?this._completeClose(e):this._connectionState===f.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===f.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=f.Disconnected,this._connectionStarted=!1,this._messageBuffer&&(this._messageBuffer._dispose(e??new Error("Connection closed.")),this._messageBuffer=void 0),p.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(r.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let n=0,s=e!==void 0?e:new Error("Attempting to reconnect due to a unknown error."),i=this._getNextRetryDelay(n++,0,s);if(i===null){this._logger.log(r.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(e);return}if(this._connectionState=f.Reconnecting,e?this._logger.log(r.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(r.Information,"Connection reconnecting."),this._reconnectingCallbacks.length!==0){try{this._reconnectingCallbacks.forEach(c=>c.apply(this,[e]))}catch(c){this._logger.log(r.Error,`An onreconnecting callback called with error '${e}' threw error '${c}'.`)}if(this._connectionState!==f.Reconnecting){this._logger.log(r.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;i!==null;){if(this._logger.log(r.Information,`Reconnect attempt number ${n} will start in ${i} ms.`),await new Promise(c=>{this._reconnectDelayHandle=setTimeout(c,i)}),this._reconnectDelayHandle=void 0,this._connectionState!==f.Reconnecting){this._logger.log(r.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(await this._startInternal(),this._connectionState=f.Connected,this._logger.log(r.Information,"HubConnection reconnected successfully."),this._reconnectedCallbacks.length!==0)try{this._reconnectedCallbacks.forEach(c=>c.apply(this,[this.connection.connectionId]))}catch(c){this._logger.log(r.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${c}'.`)}return}catch(c){if(this._logger.log(r.Information,`Reconnect attempt failed because of error '${c}'.`),this._connectionState!==f.Reconnecting){this._logger.log(r.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===f.Disconnecting&&this._completeClose();return}s=c instanceof Error?c:new Error(c.toString()),i=this._getNextRetryDelay(n++,Date.now()-t,s)}}this._logger.log(r.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${n} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(s){return this._logger.log(r.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${s}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const s=t[n];try{s(null,e)}catch(i){this._logger.log(r.Error,`Stream 'error' callback called with '${e}' threw error: ${te(i)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,s){if(n)return s.length!==0?{arguments:t,streamIds:s,target:e,type:d.Invocation}:{arguments:t,target:e,type:d.Invocation};{const i=this._invocationId;return this._invocationId++,s.length!==0?{arguments:t,invocationId:i.toString(),streamIds:s,target:e,type:d.Invocation}:{arguments:t,invocationId:i.toString(),target:e,type:d.Invocation}}}_launchStreams(e,t){if(e.length!==0){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:s=>{let i;s instanceof Error?i=s.message:s&&s.toString?i=s.toString():i="Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,i)))},next:s=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,s)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let s=0;s<e.length;s++){const i=e[s];if(this._isObservable(i)){const c=this._invocationId;this._invocationId++,t[c]=i,n.push(c.toString()),e.splice(s,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&typeof e.subscribe=="function"}_createStreamInvocation(e,t,n){const s=this._invocationId;return this._invocationId++,n.length!==0?{arguments:t,invocationId:s.toString(),streamIds:n,target:e,type:d.StreamInvocation}:{arguments:t,invocationId:s.toString(),target:e,type:d.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:d.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:d.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:d.Completion}:{invocationId:e,result:n,type:d.Completion}}_createCloseMessage(){return{type:d.Close}}}const mt=[0,2e3,1e4,3e4,null];class oe{constructor(e){this._retryDelays=e!==void 0?[...e,null]:mt}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}class T{}T.Authorization="Authorization";T.Cookie="Cookie";class bt extends N{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}async send(e){let t=!0;this._accessTokenFactory&&(!this._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(t=!1,this._accessToken=await this._accessTokenFactory()),this._setAuthorizationHeader(e);const n=await this._innerClient.send(e);return t&&n.statusCode===401&&this._accessTokenFactory?(this._accessToken=await this._accessTokenFactory(),this._setAuthorizationHeader(e),await this._innerClient.send(e)):n}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[T.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[T.Authorization]&&delete e.headers[T.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}var m;(function(o){o[o.None=0]="None",o[o.WebSockets=1]="WebSockets",o[o.ServerSentEvents=2]="ServerSentEvents",o[o.LongPolling=4]="LongPolling"})(m||(m={}));var b;(function(o){o[o.Text=1]="Text",o[o.Binary=2]="Binary"})(b||(b={}));let wt=class{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}};class se{get pollAborted(){return this._pollAbort.aborted}constructor(e,t,n){this._httpClient=e,this._logger=t,this._pollAbort=new wt,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}async connect(e,t){if(_.isRequired(e,"url"),_.isRequired(t,"transferFormat"),_.isIn(t,b,"transferFormat"),this._url=e,this._logger.log(r.Trace,"(LongPolling transport) Connecting."),t===b.Binary&&typeof XMLHttpRequest<"u"&&typeof new XMLHttpRequest().responseType!="string")throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[n,s]=D(),i={[n]:s,...this._options.headers},c={abortSignal:this._pollAbort.signal,headers:i,timeout:1e5,withCredentials:this._options.withCredentials};t===b.Binary&&(c.responseType="arraybuffer");const l=`${e}&_=${Date.now()}`;this._logger.log(r.Trace,`(LongPolling transport) polling: ${l}.`);const h=await this._httpClient.get(l,c);h.statusCode!==200?(this._logger.log(r.Error,`(LongPolling transport) Unexpected response code: ${h.statusCode}.`),this._closeError=new k(h.statusText||"",h.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,c)}async _poll(e,t){try{for(;this._running;)try{const n=`${e}&_=${Date.now()}`;this._logger.log(r.Trace,`(LongPolling transport) polling: ${n}.`);const s=await this._httpClient.get(n,t);s.statusCode===204?(this._logger.log(r.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):s.statusCode!==200?(this._logger.log(r.Error,`(LongPolling transport) Unexpected response code: ${s.statusCode}.`),this._closeError=new k(s.statusText||"",s.statusCode),this._running=!1):s.content?(this._logger.log(r.Trace,`(LongPolling transport) data received. ${$(s.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(s.content)):this._logger.log(r.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(n){this._running?n instanceof V?this._logger.log(r.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=n,this._running=!1):this._logger.log(r.Trace,`(LongPolling transport) Poll errored after shutdown: ${n.message}`)}}finally{this._logger.log(r.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?ge(this._logger,"LongPolling",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(r.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(r.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,n]=D();e[t]=n;const s={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials};let i;try{await this._httpClient.delete(this._url,s)}catch(c){i=c}i?i instanceof k&&(i.statusCode===404?this._logger.log(r.Trace,"(LongPolling transport) A 404 response was returned from sending a DELETE request."):this._logger.log(r.Trace,`(LongPolling transport) Error sending a DELETE request: ${i}`)):this._logger.log(r.Trace,"(LongPolling transport) DELETE request accepted.")}finally{this._logger.log(r.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(r.Trace,e),this.onclose(this._closeError)}}}class yt{constructor(e,t,n,s){this._httpClient=e,this._accessToken=t,this._logger=n,this._options=s,this.onreceive=null,this.onclose=null}async connect(e,t){return _.isRequired(e,"url"),_.isRequired(t,"transferFormat"),_.isIn(t,b,"transferFormat"),this._logger.log(r.Trace,"(SSE transport) Connecting."),this._url=e,this._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(this._accessToken)}`),new Promise((n,s)=>{let i=!1;if(t!==b.Text){s(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}let c;if(p.isBrowser||p.isWebWorker)c=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const l=this._httpClient.getCookieString(e),h={};h.Cookie=l;const[u,g]=D();h[u]=g,c=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...h,...this._options.headers}})}try{c.onmessage=l=>{if(this.onreceive)try{this._logger.log(r.Trace,`(SSE transport) data received. ${$(l.data,this._options.logMessageContent)}.`),this.onreceive(l.data)}catch(h){this._close(h);return}},c.onerror=l=>{i?this._close():s(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},c.onopen=()=>{this._logger.log(r.Information,`SSE connected to ${this._url}`),this._eventSource=c,i=!0,n()}}catch(l){s(l);return}})}async send(e){return this._eventSource?ge(this._logger,"SSE",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class vt{constructor(e,t,n,s,i,c){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=s,this._webSocketConstructor=i,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=c}async connect(e,t){_.isRequired(e,"url"),_.isRequired(t,"transferFormat"),_.isIn(t,b,"transferFormat"),this._logger.log(r.Trace,"(WebSockets transport) Connecting.");let n;return this._accessTokenFactory&&(n=await this._accessTokenFactory()),new Promise((s,i)=>{e=e.replace(/^http/,"ws");let c;const l=this._httpClient.getCookieString(e);let h=!1;if(p.isNode||p.isReactNative){const u={},[g,v]=D();u[g]=v,n&&(u[T.Authorization]=`Bearer ${n}`),l&&(u[T.Cookie]=l),c=new this._webSocketConstructor(e,void 0,{headers:{...u,...this._headers}})}else n&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n)}`);c||(c=new this._webSocketConstructor(e)),t===b.Binary&&(c.binaryType="arraybuffer"),c.onopen=u=>{this._logger.log(r.Information,`WebSocket connected to ${e}.`),this._webSocket=c,h=!0,s()},c.onerror=u=>{let g=null;typeof ErrorEvent<"u"&&u instanceof ErrorEvent?g=u.error:g="There was an error with the transport",this._logger.log(r.Information,`(WebSockets transport) ${g}.`)},c.onmessage=u=>{if(this._logger.log(r.Trace,`(WebSockets transport) data received. ${$(u.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(u.data)}catch(g){this._close(g);return}},c.onclose=u=>{if(h)this._close(u);else{let g=null;typeof ErrorEvent<"u"&&u instanceof ErrorEvent?g=u.error:g="WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",i(new Error(g))}}})}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(r.Trace,`(WebSockets transport) sending data. ${$(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(r.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(e)&&(e.wasClean===!1||e.code!==1e3)?this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)):e instanceof Error?this.onclose(e):this.onclose())}_isCloseEvent(e){return e&&typeof e.wasClean=="boolean"&&typeof e.code=="number"}}const ie=100;class St{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,_.isRequired(e,"url"),this._logger=Je(t.logger),this.baseUrl=this._resolveUrl(e),t=t||{},t.logMessageContent=t.logMessageContent===void 0?!1:t.logMessageContent,typeof t.withCredentials=="boolean"||t.withCredentials===void 0)t.withCredentials=t.withCredentials===void 0?!0:t.withCredentials;else throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.timeout=t.timeout===void 0?100*1e3:t.timeout;let n=null,s=null;p.isNode&&typeof require<"u"&&(n=it(),s=rt()),!p.isNode&&typeof WebSocket<"u"&&!t.WebSocket?t.WebSocket=WebSocket:p.isNode&&!t.WebSocket&&n&&(t.WebSocket=n),!p.isNode&&typeof EventSource<"u"&&!t.EventSource?t.EventSource=EventSource:p.isNode&&!t.EventSource&&typeof s<"u"&&(t.EventSource=s),this._httpClient=new bt(t.httpClient||new lt(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||b.Binary,_.isIn(e,b,"transferFormat"),this._logger.log(r.Debug,`Starting connection with transfer format '${b[e]}'.`),this._connectionState!=="Disconnected")return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,this._connectionState==="Disconnecting"){const t="Failed to start the HttpConnection before stop() was called.";return this._logger.log(r.Error,t),await this._stopPromise,Promise.reject(new y(t))}else if(this._connectionState!=="Connected"){const t="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(r.Error,t),Promise.reject(new y(t))}this._connectionStarted=!0}send(e){return this._connectionState!=="Connected"?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new z(this.transport)),this._sendQueue.send(e))}async stop(e){if(this._connectionState==="Disconnected")return this._logger.log(r.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve();if(this._connectionState==="Disconnecting")return this._logger.log(r.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;this._connectionState="Disconnecting",this._stopPromise=new Promise(t=>{this._stopPromiseResolver=t}),await this._stopInternal(e),await this._stopPromise}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch{}if(this.transport){try{await this.transport.stop()}catch(t){this._logger.log(r.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(r.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory,this._httpClient._accessTokenFactory=this._accessTokenFactory;try{if(this._options.skipNegotiation)if(this._options.transport===m.WebSockets)this.transport=this._constructTransport(m.WebSockets),await this._startTransport(t,e);else throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");else{let n=null,s=0;do{if(n=await this._getNegotiationResponse(t),this._connectionState==="Disconnecting"||this._connectionState==="Disconnected")throw new y("The connection was stopped during negotiation.");if(n.error)throw new Error(n.error);if(n.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(n.url&&(t=n.url),n.accessToken){const i=n.accessToken;this._accessTokenFactory=()=>i,this._httpClient._accessToken=i,this._httpClient._accessTokenFactory=void 0}s++}while(n.url&&s<ie);if(s===ie&&n.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,n,e)}this.transport instanceof se&&(this.features.inherentKeepAlive=!0),this._connectionState==="Connecting"&&(this._logger.log(r.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(n){return this._logger.log(r.Error,"Failed to start the connection: "+n),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(n)}}async _getNegotiationResponse(e){const t={},[n,s]=D();t[n]=s;const i=this._resolveNegotiateUrl(e);this._logger.log(r.Debug,`Sending negotiation request: ${i}.`);try{const c=await this._httpClient.post(i,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(c.statusCode!==200)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${c.statusCode}'`));const l=JSON.parse(c.content);return(!l.negotiateVersion||l.negotiateVersion<1)&&(l.connectionToken=l.connectionId),l.useStatefulReconnect&&this._options._useStatefulReconnect!==!0?Promise.reject(new ee("Client didn't negotiate Stateful Reconnect but the server did.")):l}catch(c){let l="Failed to complete negotiation with the server: "+c;return c instanceof k&&c.statusCode===404&&(l=l+" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(r.Error,l),Promise.reject(new ee(l))}}_createConnectUrl(e,t){return t?e+(e.indexOf("?")===-1?"?":"&")+`id=${t}`:e}async _createTransport(e,t,n,s){let i=this._createConnectUrl(e,n.connectionToken);if(this._isITransport(t)){this._logger.log(r.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(i,s),this.connectionId=n.connectionId;return}const c=[],l=n.availableTransports||[];let h=n;for(const u of l){const g=this._resolveTransportOrError(u,t,s,(h==null?void 0:h.useStatefulReconnect)===!0);if(g instanceof Error)c.push(`${u.transport} failed:`),c.push(g);else if(this._isITransport(g)){if(this.transport=g,!h){try{h=await this._getNegotiationResponse(e)}catch(v){return Promise.reject(v)}i=this._createConnectUrl(e,h.connectionToken)}try{await this._startTransport(i,s),this.connectionId=h.connectionId;return}catch(v){if(this._logger.log(r.Error,`Failed to start the transport '${u.transport}': ${v}`),h=void 0,c.push(new ze(`${u.transport} failed: ${v}`,m[u.transport])),this._connectionState!=="Connecting"){const H="Failed to select transport before stop() was called.";return this._logger.log(r.Debug,H),Promise.reject(new y(H))}}}}return c.length>0?Promise.reject(new Ge(`Unable to connect to the server with any of the available transports. ${c.join(" ")}`,c)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case m.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new vt(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case m.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new yt(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case m.LongPolling:return new se(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.features.reconnect?this.transport.onclose=async n=>{let s=!1;if(this.features.reconnect)try{this.features.disconnected(),await this.transport.connect(e,t),await this.features.resend()}catch{s=!0}else{this._stopConnection(n);return}s&&this._stopConnection(n)}:this.transport.onclose=n=>this._stopConnection(n),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n,s){const i=m[e.transport];if(i==null)return this._logger.log(r.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(Ct(t,i))if(e.transferFormats.map(l=>b[l]).indexOf(n)>=0){if(i===m.WebSockets&&!this._options.WebSocket||i===m.ServerSentEvents&&!this._options.EventSource)return this._logger.log(r.Debug,`Skipping transport '${m[i]}' because it is not supported in your environment.'`),new Ve(`'${m[i]}' is not supported in your environment.`,i);this._logger.log(r.Debug,`Selecting transport '${m[i]}'.`);try{return this.features.reconnect=i===m.WebSockets?s:void 0,this._constructTransport(i)}catch(l){return l}}else return this._logger.log(r.Debug,`Skipping transport '${m[i]}' because it does not support the requested transfer format '${b[n]}'.`),new Error(`'${m[i]}' does not support ${b[n]}.`);else return this._logger.log(r.Debug,`Skipping transport '${m[i]}' because it was disabled by the client.`),new qe(`'${m[i]}' is disabled by the client.`,i)}_isITransport(e){return e&&typeof e=="object"&&"connect"in e}_stopConnection(e){if(this._logger.log(r.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,this._connectionState==="Disconnected"){this._logger.log(r.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`);return}if(this._connectionState==="Connecting")throw this._logger.log(r.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if(this._connectionState==="Disconnecting"&&this._stopPromiseResolver(),e?this._logger.log(r.Error,`Connection disconnected with error '${e}'.`):this._logger.log(r.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(r.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(r.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}_resolveUrl(e){if(e.lastIndexOf("https://",0)===0||e.lastIndexOf("http://",0)===0)return e;if(!p.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(r.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=new URL(e);t.pathname.endsWith("/")?t.pathname+="negotiate":t.pathname+="/negotiate";const n=new URLSearchParams(t.searchParams);return n.has("negotiateVersion")||n.append("negotiateVersion",this._negotiateVersion.toString()),n.has("useStatefulReconnect")?n.get("useStatefulReconnect")==="true"&&(this._options._useStatefulReconnect=!0):this._options._useStatefulReconnect===!0&&n.append("useStatefulReconnect","true"),t.search=n.toString(),t.toString()}}function Ct(o,e){return!o||(e&o)!==0}class z{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new L,this._transportResult=new L,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new L),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new L;const e=this._transportResult;this._transportResult=void 0;const t=typeof this._buffer[0]=="string"?this._buffer.join(""):z._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(n){e.reject(n)}}}static _concatBuffers(e){const t=e.map(i=>i.byteLength).reduce((i,c)=>i+c),n=new Uint8Array(t);let s=0;for(const i of e)n.set(new Uint8Array(i),s),s+=i.byteLength;return n.buffer}}class L{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}const It="json";class kt{constructor(){this.name=It,this.version=2,this.transferFormat=b.Text}parseMessages(e,t){if(typeof e!="string")throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];t===null&&(t=R.instance);const n=w.parse(e),s=[];for(const i of n){const c=JSON.parse(i);if(typeof c.type!="number")throw new Error("Invalid payload.");switch(c.type){case d.Invocation:this._isInvocationMessage(c);break;case d.StreamItem:this._isStreamItemMessage(c);break;case d.Completion:this._isCompletionMessage(c);break;case d.Ping:break;case d.Close:break;case d.Ack:this._isAckMessage(c);break;case d.Sequence:this._isSequenceMessage(c);break;default:t.log(r.Information,"Unknown message type '"+c.type+"' ignored.");continue}s.push(c)}return s}writeMessage(e){return w.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),e.invocationId!==void 0&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),e.item===void 0)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_isAckMessage(e){if(typeof e.sequenceId!="number")throw new Error("Invalid SequenceId for Ack message.")}_isSequenceMessage(e){if(typeof e.sequenceId!="number")throw new Error("Invalid SequenceId for Sequence message.")}_assertNotEmptyString(e,t){if(typeof e!="string"||e==="")throw new Error(t)}}const Tt={trace:r.Trace,debug:r.Debug,info:r.Information,information:r.Information,warn:r.Warning,warning:r.Warning,error:r.Error,critical:r.Critical,none:r.None};function Et(o){const e=Tt[o.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${o}`)}class Dt{configureLogging(e){if(_.isRequired(e,"logging"),Pt(e))this.logger=e;else if(typeof e=="string"){const t=Et(e);this.logger=new O(t)}else this.logger=new O(e);return this}withUrl(e,t){return _.isRequired(e,"url"),_.isNotEmpty(e,"url"),this.url=e,typeof t=="object"?this.httpConnectionOptions={...this.httpConnectionOptions,...t}:this.httpConnectionOptions={...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return _.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new oe(e):this.reconnectPolicy=e:this.reconnectPolicy=new oe,this}withServerTimeout(e){return _.isRequired(e,"milliseconds"),this._serverTimeoutInMilliseconds=e,this}withKeepAliveInterval(e){return _.isRequired(e,"milliseconds"),this._keepAliveIntervalInMilliseconds=e,this}withStatefulReconnect(e){return this.httpConnectionOptions===void 0&&(this.httpConnectionOptions={}),this.httpConnectionOptions._useStatefulReconnect=!0,this._statefulReconnectBufferSize=e==null?void 0:e.bufferSize,this}build(){const e=this.httpConnectionOptions||{};if(e.logger===void 0&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new St(this.url,e);return q.create(t,this.logger||R.instance,this.protocol||new kt,this.reconnectPolicy,this._serverTimeoutInMilliseconds,this._keepAliveIntervalInMilliseconds,this._statefulReconnectBufferSize)}}function Pt(o){return o.log!==void 0}class U{static create(e,t,n){let s=null,i=!1,c=0;const l=M([]);return()=>{const h=async()=>{s||(s=new Dt().withUrl(typeof e=="string"?e:e()).configureLogging(r.Warning).withAutomaticReconnect().build(),t(s,{isWatched:C=>l.value.includes(C),hasWatchers:()=>c>0})),s.state!==f.Connected&&await s.start(),i||(await n(s),i=!0)},u=async()=>{s&&(await s.stop(),s=null)},g=ve(()=>l.value.length>0||c>0);return le(g,async C=>{C?await h():await u()},{immediate:!0}),{subscribeToOne:C=>{l.value.push(C)},unsubscribeFromOne:C=>{const K=l.value.indexOf(C);K>-1&&(l.value=l.value.splice(K,1))},subscribeToMany:()=>{c++},unsubscribeFromMany:()=>{c--}}}}static createWatcher(e){return()=>{const{subscribeToOne:t,unsubscribeFromOne:n,subscribeToMany:s,unsubscribeFromMany:i}=e(),c=M(!1),l=M([]);return Se(()=>{c.value&&i();for(const g of l.value)n(g)}),{watchOne:g=>{t(g),l.value.push(g)},watchMany:()=>{c.value===!1&&(s(),c.value=!0)}}}}}const fe="Subscribe",Rt="UpdateDeviceStatus",$t="UpdateDeviceConnectivity",pe=new P("deviceConnectivity",F).create(o=>o.build(o.addGet(We),o.addNotify(e=>({notifyUpdate:t=>e.notify("update",t)})))),At=U.create(Be,o=>{o.on($t,e=>pe.notifyUpdate(new F(e)))},async o=>{await o.invoke(fe)}),Lt=A.track(pe),xt=U.createWatcher(At),_e=new P("deviceStatus",j).create(o=>o.build(o.addGet(Fe),o.addNotify(e=>({notifyUpdate:t=>e.notify("update",t)})))),Ot=U.create(je,o=>{o.on(Rt,e=>_e.notifyUpdate(new j(e)))},async o=>{await o.invoke(fe)}),Nt=A.track(_e),Ut=U.createWatcher(Ot),G=new P("deviceOrganisation",W).create(o=>o.build(o.addGet(I),o.addGetMany(B,ue),o.addCreate(B),o.addUpdate(I),o.addRemove(I),o.addNotify(e=>({...P.addCustom("changeGroup",(t,n,s)=>t.put(He(n),s),t=>{const n=new W(t);return e.notify("update",n),n}),...P.addCustom("changeLocation",(t,n,s)=>t.put(Me(n),s),t=>{const n=new W(t);return e.notify("update",n),n})})))),X=()=>{const{track:o}=Nt(),{track:e}=Lt(),{watchOne:t}=Ut(),{watchOne:n}=xt();return s=>{t(s.value.status.id),n(s.value.connectivity.id),o(s.value.status,i=>s.value.status=i),e(s.value.connectivity,i=>s.value.connectivity=i)}},Ht=A.get(G,X);A.custom(G.changeGroup,X);A.custom(G.changeLocation,X);const me=Ce({name:"FSDeviceOrganisationTile",components:{FSDeviceOrganisationTileUI:Ee,FSLoadTile:De},props:{deviceOrganisationId:{type:String,required:!0},modelValue:{type:Boolean,required:!1,default:!1},editable:{type:Boolean,required:!1,default:!0}},setup(o){const{get:e,getting:t,entity:n}=Ht();return Ie(()=>{e(o.deviceOrganisationId)}),le(()=>o.deviceOrganisationId,()=>{e(o.deviceOrganisationId)}),{getting:t,entity:n}}});function Mt(o,e,t,n,s,i){var h;const c=J("FSLoadTile"),l=J("FSDeviceOrganisationTileUI");return o.getting?(Y(),Q(c,{key:0,editable:o.$props.editable,modelValue:o.$props.modelValue,"onUpdate:modelValue":e[0]||(e[0]=u=>o.$emit("update:modelValue",u))},null,8,["editable","modelValue"])):o.entity?(Y(),Q(l,ke({key:1,imageId:o.entity.imageId,label:o.entity.label,code:o.entity.code,deviceConnectivity:o.entity.connectivity,deviceWorstAlert:o.entity.worstAlert,deviceAlerts:o.entity.alerts,modelStatuses:o.entity.modelStatuses,deviceStatuses:(h=o.entity.status)==null?void 0:h.statuses,editable:o.$props.editable,modelValue:o.$props.modelValue,"onUpdate:modelValue":e[1]||(e[1]=u=>o.$emit("update:modelValue",u))},o.$attrs),null,16,["imageId","label","code","deviceConnectivity","deviceWorstAlert","deviceAlerts","modelStatuses","deviceStatuses","editable","modelValue"])):Te("",!0)}const be=$e(me,[["render",Mt]]);me.__docgenInfo={displayName:"FSDeviceOrganisationTile",exportName:"default",description:"",tags:{},props:[{name:"deviceOrganisationId",type:{name:"string"},required:!0},{name:"modelValue",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/tiles/FSDeviceOrganisationTile.vue"]};const co={title:"Foundation/Core/Tiles/DeviceOrganisation",component:be,tags:["autodocs"],argTypes:{onClick:{action:"clicked"}}},x={args:{args:{values:["1","2","3"],selected:[!1,!1,!1]}},render:(o,{argTypes:e})=>({components:{FSDeviceOrganisationTile:be},props:Object.keys(e),setup(){return{...o}},template:`
    <div style="display: flex; gap: 10px; flex-wrap: wrap; width: 100vw;">
      <FSDeviceOrganisationTile
        v-for="(deviceOrganisationId, index) in args.values"
        :key="index"
        :deviceOrganisationId="deviceOrganisationId"
        @auxclick="args.values.pop()"
        v-model="args.selected[index]"
      />
    </div>`})};var re,ce,ae;x.parameters={...x.parameters,docs:{...(re=x.parameters)==null?void 0:re.docs,source:{originalSource:`{
  args: {
    args: {
      values: ["1", "2", "3"],
      selected: [false, false, false]
    }
  },
  render: (args, {
    argTypes
  }) => ({
    components: {
      FSDeviceOrganisationTile
    },
    props: Object.keys(argTypes),
    setup() {
      return {
        ...args
      };
    },
    template: \`
    <div style="display: flex; gap: 10px; flex-wrap: wrap; width: 100vw;">
      <FSDeviceOrganisationTile
        v-for="(deviceOrganisationId, index) in args.values"
        :key="index"
        :deviceOrganisationId="deviceOrganisationId"
        @auxclick="args.values.pop()"
        v-model="args.selected[index]"
      />
    </div>\`
  })
}`,...(ae=(ce=x.parameters)==null?void 0:ce.docs)==null?void 0:ae.source}}};const ao=["Variations"];export{x as Variations,ao as __namedExportsOrder,co as default};
