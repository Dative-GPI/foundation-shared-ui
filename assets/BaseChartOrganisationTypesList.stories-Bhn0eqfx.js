import{a as _,b as w}from"./properties-Qw-O9fbT.js";import{F as b}from"./FSDataTable-D2rviyK0.js";import{F as D}from"./FSDataTableUI-CqueNahZ.js";import{d as E,c as U,w as R,B as h,D as k,S as N,E as i,m as P,I as p,J as y,O as A,P as G,Q as M,z as s,A as T,K as V,H as z}from"./vue.esm-bundler-BB--BfRN.js";import{_ as j}from"./lodash-Zo30T2Bj.js";import{F as H}from"./FSChartTileUI-mfiDNs5n.js";import{F as J}from"./FSTagGroup-B6d1xAWY.js";import{F as K}from"./FSImage-D2nwrOf-.js";import{F as Q}from"./FSText-RaLR8FTM.js";import{F as d}from"./FSIcon-BKav6CVU.js";import{_ as B}from"./FSRow-Bdc52rY8.js";import{c as W,e as v,C as X}from"./chartsTools-SYU6DBGL.js";import{u as Y}from"./useChartOrganisationTypes-CMuO0LkR.js";import{C as Z}from"./useColors-CeWNZtds.js";import{g as x}from"./enumTools-BEsapygt.js";import{_ as ee}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSLoader-Cf5HtYZd.js";import"./useBreakpoints-f5uwzDhq.js";import"./css-DoweNwVf.js";import"./color-DIvEt_AX.js";import"./theme-BwQCEo_4.js";import"./dimensions-DwY9cRwZ.js";import"./elevation-S_BtbnzN.js";import"./locale-CSWC84Vq.js";import"./FSCol-BU2zndN-.js";import"./base-CiabG-44.js";import"./useAppOrganisationId-D3b8yxVY.js";import"./composableFactory-DwIj5O2m.js";import"./serviceFactory-aQiBqOvf.js";import"./_commonjsHelpers-BosuxZz1.js";import"./uuid-DTaye2KM.js";import"./FSFadeOut-BS7VKwj1.js";import"./vue-router-CibjbVOv.js";import"./FSTile-pg-_mccU.js";import"./FSClickable-CwRD7A4m.js";import"./FSRouterLink-DUWl7Aiu.js";import"./FSCard-CiGLNn7K.js";import"./VProgressCircular-DNr7n8jG.js";import"./resizeObserver-CgHguIgR.js";import"./VIcon-Cl87HT90.js";import"./FSCheckbox-ti2pWVdy.js";import"./FSSpan-BndtI8AP.js";import"./useSlots-COLyvmal.js";import"./useRules-CSYFw_Ue.js";import"./VSelectionControl-KO2lf4xS.js";import"./density-Xpr_P7nk.js";import"./proxiedModel-DMSSa4ZW.js";import"./index-8zgUIpZ9.js";import"./VLabel-Cmax-_yp.js";import"./VInput-BfMi-lTR.js";import"./index-9ysw5oGg.js";import"./transition-GJJG9yri.js";import"./FSSearchField-CJDKUSod.js";import"./FSTextField-DmCfYujO.js";import"./FSBaseField-BxMUaAXJ.js";import"./FSButton-DEqhqb0b.js";import"./VField-COyetWuv.js";import"./loader-BKsf8Js6.js";import"./anchor-C8ooBn8e.js";import"./rounded-BKWlZxOJ.js";import"./VDefaultsProvider-BK3j_XEC.js";import"./forwardRefs-DWGaNmQL.js";import"./index--Ye8kcMr.js";import"./useTranslations-DvAhn7XV.js";import"./FSSelectField-DqwGnLNL.js";import"./VList-CAfJ4PqY.js";import"./VDialog-bMbnstsA.js";import"./VOverlay-B758aeer.js";import"./display-DzHu_6W3.js";import"./scopeId-NiaFRIZK.js";import"./router-WJHyAZQ9.js";import"./ssrBoot-DNxkCF-9.js";import"./border-TZTDiA6n.js";import"./VImg-DcLzuYY5.js";import"./FSSlideGroup-DLHspItq.js";import"./FSButtonNextIcon-BwHgwEym.js";import"./VSlideGroupItem-BI1OJQNm.js";import"./group-C8GVwDAJ.js";import"./FSToggleSet-D12Sjar_.js";import"./FSWrapGroup-TGBfJRdY.js";import"./FSRadio-C1kBTUbb.js";import"./VSelect-fihYAFHR.js";import"./VMenu-DdabqpBj.js";import"./FSDivider-BZaGiy0h.js";import"./FSChip-fXKFC3cO.js";import"./FSMenu-BwDA4EdU.js";import"./FSOptionGroup-m2mceanB.js";import"./filter-C1K_d8Vd.js";import"./VBtn-CpUNAmWP.js";import"./filter-Cz8pNtBH.js";import"./FSIconCard-DaY8wfJA.js";import"./applications-pqrfQrBX.js";import"./FSTag-DvO-fAOx.js";import"./FSImageUI-B_bAqKap.js";import"./useImages-fX-VpO9W.js";import"./base-CmdGny12.js";import"./useAppAuthToken-DmpXug6S.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./index-_Z9wfsFC.js";const q=E({name:"FSBaseChartOrganisationTypesList",components:{FSChartTileUI:H,FSDataTable:b,FSTagGroup:J,FSImage:K,FSIcon:d,FSText:Q,FSRow:B},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},itemTo:{type:Function,required:!1},modelValue:{type:Array,default:()=>[],required:!1},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{entities:l,fetching:F,getMany:S}=Y(),C=U(()=>({modelsLabels:{fixedFilters:l.value.map(t=>t.modelsLabels).reduce((t,r)=>{for(const n of r)t.map(g=>g.id).includes(n.id)||t.push(n);return t},[]).map(t=>({value:t.id,text:t.label})).concat({value:"",text:"--"}),methodFilter:(t,r)=>r.length==0&&t==""||r.length>0&&r.some(n=>n.id==t)},chartType:{fixedFilters:x(X).map(t=>({value:t.value,text:v(t.value)})),methodFilter:(t,r)=>t==r}})),O=t=>e.modelValue.includes(t),c=()=>{S(e.chartOrganisationTypeFilters)};return R(()=>[e.chartOrganisationTypeFilters],(t,r)=>{(!t&&!r||!j.isEqual(t,r))&&c()},{immediate:!0}),{fetchingChartOrganisationTypes:F,chartOrganisationTypes:l,headersOptions:C,ColorEnum:Z,chartTypeLabel:v,isSelected:O,chartIcon:W}}});function te(e,l,F,S,C,O){const c=p("FSImage"),t=p("FSTagGroup"),r=p("FSText"),n=p("FSChartTileUI"),g=p("FSDataTable");return y(),h(g,P({defaultMode:"iterator",items:e.chartOrganisationTypes,itemTo:e.$props.itemTo,loading:e.fetchingChartOrganisationTypes,headersOptions:e.headersOptions,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,"onUpdate:modelValue":l[0]||(l[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),k({"header.imageId-title":i(()=>[s(d,null,{default:i(()=>[T(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":i(({item:a})=>[s(d,null,{default:i(()=>[T(V(a.icon),1)]),_:2},1024)]),"item.imageId":i(({item:a})=>[a.imageId?(y(),h(c,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):z("",!0)]),"item.tags":i(({item:a})=>[s(t,{variant:"slide",tags:a.tags,showRemove:!1},null,8,["tags"])]),"item.chartType":i(({item:a})=>[s(B,{wrap:!1},{default:i(()=>[s(d,{icon:e.chartIcon(a.chartType)},null,8,["icon"]),s(r,null,{default:i(()=>[T(V(e.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.modelsLabels":i(({item:a})=>[s(t,{variant:"slide",tags:a.modelsLabels.map(o=>o.label),showRemove:!1},null,8,["tags"])]),"item.tile":i(({index:a,item:o,toggleSelect:f})=>[(y(),h(n,{key:a,label:o.label,"category-label":o.chartCategoryLabel,singleSelect:e.$props.singleSelect,selectable:e.$props.selectable,icon:o.icon,scope:o.scope,imageId:o.imageId,type:o.chartType,modelValue:e.isSelected(o.id),"onUpdate:modelValue":ae=>f(o),to:e.$props.itemTo&&e.$props.itemTo(o)},null,8,["label","category-label","singleSelect","selectable","icon","scope","imageId","type","modelValue","onUpdate:modelValue","to"]))]),_:2},[N(e.$slots,(a,o)=>({name:o,fn:i(f=>[A(e.$slots,o,G(M(f)))])}))]),1040,["items","itemTo","loading","headersOptions","tableCode","modelValue","selectable","singleSelect"])}const u=ee(q,[["render",te]]);q.__docgenInfo={displayName:"FSBaseChartOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"itemTo",type:{name:"(item: ChartOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/chartOrganisationTypes/FSBaseChartOrganisationTypesList.vue"]};const Wt={title:"Foundation/Core/Lists/Base Lists/BaseChartOrganisationTypesList",component:u,subcomponents:{FSDataTable:b},tags:["autodocs"],argTypes:{...w([b,D],u),..._(u),tableCode:{control:"select",options:["chartOrganisationTypes1"]}}},m={render:e=>({components:{FSBaseChartOrganisationTypesList:u},setup(){return{args:e}},template:`
      <FSBaseChartOrganisationTypesList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    `}),args:{tableCode:"chartOrganisationTypes1",modelValue:[]}};var I,L,$;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartOrganisationTypesList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    \`
  }),
  args: {
    tableCode: 'chartOrganisationTypes1',
    modelValue: []
  }
}`,...($=(L=m.parameters)==null?void 0:L.docs)==null?void 0:$.source}}};const Xt=["Default"];export{m as Default,Xt as __namedExportsOrder,Wt as default};
