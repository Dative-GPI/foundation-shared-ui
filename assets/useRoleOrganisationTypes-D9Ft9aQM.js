var d=Object.defineProperty;var l=(o,e,s)=>e in o?d(o,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[e]=s;var i=(o,e,s)=>l(o,typeof e!="symbol"?e+"":e,s);import{P as p}from"./permissionInfos-BPDgTHQl.js";import{C as a}from"./base-KmQLDroH.js";import{S as y}from"./serviceFactory-qtdw0UKd.js";import{C as t}from"./composableFactory-K8W9GIHH.js";class n{constructor(e){i(this,"id");i(this,"roleId");i(this,"organisationTypeId");i(this,"organisationTypeLabel");i(this,"scope");i(this,"userType");i(this,"icon");i(this,"code");i(this,"label");i(this,"tags");i(this,"permissions");this.id=e.id,this.roleId=e.roleId,this.organisationTypeId=e.organisationTypeId,this.organisationTypeLabel=e.organisationTypeLabel,this.scope=e.scope,this.userType=e.userType,this.scope=e.scope,this.userType=e.userType,this.icon=e.icon,this.code=e.code,this.label=e.label,this.tags=e.tags.slice(),this.permissions=e.permissions.map(s=>new p(s))}}class T extends n{constructor(s){super(s);i(this,"description");this.description=s.description}}const r=()=>`${a()}/role-organisation-types`,g=o=>`${r()}/${encodeURIComponent(o)}`,c=new y("roleOrganisationType",T).create(o=>o.build(o.addGet(g),o.addGetMany(r,n),o.addNotify()));t.get(c);const b=t.getMany(c);export{b as u};
