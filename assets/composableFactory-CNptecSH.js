import{b as o,V as f}from"./vue.esm-bundler-DjjVIdVI.js";function v(a,t=c=>!0,s=c=>c.id){return(e,u)=>{switch(e){case"add":g(a,u,s,t);return;case"update":I(a,u,s,t);return;case"delete":M(a,u,s);return}}}function d(a,t,s=c=>c.id){return(e,u)=>{if(!a.value)return;const r=s(a.value);(e==="add"||e==="update")&&r===s(u)&&(a.value=u,t&&t(a)),e==="delete"&&r===u&&(a.value=null)}}function g(a,t,s,c){const e=a.value,u=s(t),r=e.findIndex(i=>s(i)===u),n=c(t);r==-1&&n?e.push(t):r==-1&&!n||(r!=-1&&!n?e.splice(r,1):e.splice(r,1,t))}function I(a,t,s,c){const e=a.value,u=s(t),r=e.findIndex(i=>s(i)===u),n=c(t);r!=-1&&n?e.splice(r,1,t):r!=-1&&!n?e.splice(r,1):r==-1&&n&&e.push(t)}function M(a,t,s){const c=a.value,e=c.findIndex(u=>s(u)===t);e!=-1&&c.splice(e,1)}class p{static create(t){return c=>{for(const e in t)if(c[e]!==t[e])return!1;return!0}}}class b{static get(t,s){return b.customGet(t,t.get,s)}static getMany(t,s){return b.customGetMany(t,t.getMany,s)}static create(t,s){return b.customCreate(t,t.create,s)}static update(t,s){return b.customUpdate(t,t.update,s)}static remove(t){return b.customRemove(t.remove)}static custom(t,s){return()=>{const c=s?s():()=>{},e=o(!1),u=o(null);return{fetching:e,fetch:async(...n)=>{e.value=!0;try{u.value=await t(...n),c&&c(u)}finally{e.value=!1}return u},entity:u}}}static customGet(t,s,c){return()=>{const e=c?c():()=>{};let u=[];f(()=>{u.forEach(l=>t.unsubscribe(l)),u=[]});const r=o(!1),n=o(null);return{getting:r,get:async(...l)=>{r.value=!0;try{n.value=await s(...l),e&&e(n)}finally{r.value=!1}return u.push(t.subscribe("all",d(n,e))),n},entity:n}}}static customGetMany(t,s,c){return()=>{const e=c?c():()=>{};let u=[];f(()=>{u.forEach(l=>t.unsubscribe(l)),u=[]});const r=o(!1),n=o([]);return{fetching:r,getMany:async(...l)=>{r.value=!0;let y;l.length>1&&typeof l[l.length-1]=="function"&&(y=l.pop());let h=l;try{n.value=await s(...h),e&&e(n)}finally{r.value=!1}const m=y||(h.length>0?p.create(h[0]):()=>!0);return u.push(t.subscribe("all",v(n,m))),u.push(t.subscribe("reset",async()=>{r.value=!0;try{n.value=await s(...h),e&&e(n)}finally{r.value=!1}})),n},entities:n}}}static customCreate(t,s,c){return()=>{const e=c?c():()=>{};let u=[];f(()=>{u.forEach(l=>t.unsubscribe(l)),u=[]});const r=o(!1),n=o(null);return{creating:r,create:async(...l)=>{r.value=!0;try{n.value=await s(...l),e&&e(n)}finally{r.value=!1}return u.push(t.subscribe("all",d(n))),n},created:n}}}static customUpdate(t,s,c){return()=>{const e=c?c():()=>{};let u=[];f(()=>{u.forEach(l=>t.unsubscribe(l)),u=[]});const r=o(!1),n=o(null);return{updating:r,update:async(...l)=>{r.value=!0;try{n.value=await s(...l),e&&e(n)}finally{r.value=!1}return u.push(t.subscribe("all",d(n))),n.value},updated:n}}}static customRemove(t){return()=>{const s=o(!1);return{removing:s,remove:async(...e)=>{s.value=!0;try{await t(...e)}finally{s.value=!1}}}}}static sync(t){return()=>{let s=[];return f(()=>{s.forEach(e=>t.unsubscribe(e)),s=[]}),{sync:(e,u,r)=>{const n=o(e),i=r||(u?p.create(u):l=>!0);return s.push(t.subscribe("all",v(n,i))),n}}}}static syncRef(t){return()=>{let s=[];return f(()=>{s.forEach(e=>t.unsubscribe(e)),s=[]}),{sync:(e,u,r)=>{const n=r||(u?p.create(u):i=>!0);return s.push(t.subscribe("all",v(e,n))),e}}}}static track(t){return()=>{let s=[];return f(()=>{s.forEach(e=>t.unsubscribe(e)),s=[]}),{track:(e,u)=>{const r=o(e);return s.push(t.subscribe("all",d(r,n=>u?u(n.value):null))),r}}}}static trackRef(t){return()=>{let s=[];return f(()=>{s.forEach(e=>t.unsubscribe(e)),s=[]}),{track:(e,u)=>(s.push(t.subscribe("all",d(e,u))),e)}}}}export{b as C};
