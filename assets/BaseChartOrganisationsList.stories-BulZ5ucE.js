import{d as _,c as w,w as D,z as y,B as E,Q as U,C as r,m as N,G as m,H as T,L as R,M as P,N as k,P as i,I as f,J as O,E as G}from"./vue.esm-bundler-CM4TIH-Q.js";import{_ as M}from"./lodash-BrWYvtk2.js";import{_ as $}from"./FSRow-C47sfGk6.js";import{F as z}from"./FSText-C032WjuG.js";import{F as d}from"./FSIcon-CIF0zaTI.js";import{F as A}from"./FSImage-BesC0Cra.js";import{F as j}from"./FSTagGroup-BNtivIeF.js";import{F as H}from"./FSChartTileUI-C5knuEXZ.js";import{F as B}from"./FSDataTable-H-uRQpnE.js";import{u as J}from"./useChartOrganisations-B2SwvpRw.js";import{c as Q,e as V,C as K}from"./chartsTools-BzYXkpjS.js";import{C as W}from"./useColors-CjA2D2xA.js";import{g as X}from"./enumTools-BEsapygt.js";import{_ as Y}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{a as Z,b as x}from"./properties-DwZ_iDct.js";import{F as ee}from"./FSDataTableUI-DXnBAIsl.js";import"./_commonjsHelpers-BosuxZz1.js";import"./css-D38lF7BW.js";import"./useBreakpoints-DsICqL2A.js";import"./useSlots-c6yg-hhg.js";import"./VIcon-GfKFLOEw.js";import"./color-Bo6l13w9.js";import"./theme-d3-Spt7o.js";import"./FSImageUI-CbHYTG-G.js";import"./FSLoader-_1jWS2ee.js";import"./dimensions-DW-k5kP_.js";import"./elevation-DgpWsjTu.js";import"./locale-BqFH1fBg.js";import"./VImg-D7XF-hIS.js";import"./rounded-CDCr0BOq.js";import"./transition-DMoMR0kB.js";import"./index-DWgrY6Dg.js";import"./useImages-X7qHyDlJ.js";import"./base-CmdGny12.js";import"./composableFactory-B6T2dm2_.js";import"./serviceFactory-B3o6Bvwt.js";import"./uuid-DTaye2KM.js";import"./useAppAuthToken-3v3Ax1PV.js";import"./FSWrapGroup-Fe7qxaBI.js";import"./VSlideGroupItem-41bDxGuE.js";import"./group-3MU8bQUc.js";import"./proxiedModel-DKx29MO-.js";import"./index-BJH4L2FX.js";import"./display-CUGteI3_.js";import"./resizeObserver-Cb3oz2nO.js";import"./FSTag-Be5j6gHq.js";import"./FSSpan-BXQyelfo.js";import"./VBtn-DqO4-7PD.js";import"./border-CvDIZQGy.js";import"./density-Dl4v3sM7.js";import"./loader-CQB_6PPx.js";import"./VProgressCircular-C-4f-PXJ.js";import"./anchor-DCFmATqq.js";import"./router-BXF-7Xxx.js";import"./index-BkfcJ8bv.js";import"./VDefaultsProvider-DYp4Zk7-.js";import"./FSSlideGroup-DeB5Ds_m.js";import"./FSButtonNextIcon-BMwpXNyX.js";import"./FSButton-CnIlx-fc.js";import"./FSRouterLink-CxLK3Rak.js";import"./vue-router-io_1IWnU.js";import"./FSClickable-a8XmDSU8.js";import"./FSCard-CYsPoqay.js";import"./FSCol-Be93XvPD.js";import"./FSTile-j531zXXx.js";import"./FSCheckbox-cl9Reorp.js";import"./useRules-B12Yr5ve.js";import"./VSelectionControl-MVg9W9ha.js";import"./VLabel-Ca5QW7tf.js";import"./VInput-DXPqvHKO.js";import"./FSIconCard-czyPYjvR.js";import"./FSChip-FDBATtNs.js";import"./applications-pqrfQrBX.js";import"./base-Be6PBkQb.js";import"./useAppOrganisationId-BtM3-JKO.js";import"./FSFadeOut-PZiJk41N.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./useTranslations-CLqRehXT.js";import"./index-DfSX31J9.js";import"./FSSearchField-dSfUt31U.js";import"./FSTextField-DAhSqlNI.js";import"./FSBaseField-B4z0jav7.js";import"./VField-D97ztcGG.js";import"./forwardRefs-DWGaNmQL.js";import"./FSSelectField-BY8R2J8_.js";import"./VList-DEzGjKAB.js";import"./VDialog-CgsoTmCe.js";import"./VOverlay-DtEUynQC.js";import"./scopeId-COl1Iexy.js";import"./ssrBoot-BDHgcVA9.js";import"./FSToggleSet-CwbYA91K.js";import"./FSRadio-Cpv_pdl7.js";import"./VSelect-D2RjpGxv.js";import"./VMenu-sKuqJ8jm.js";import"./FSDivider-CI8bGHV5.js";import"./FSMenu-Da0q64tf.js";import"./FSOptionGroup-A_yN2rRJ.js";import"./filter-C1K_d8Vd.js";import"./filter-DHa7wap7.js";const q=_({name:"FSBaseChartOrganisationsList",components:{FSChartTileUI:H,FSDataTable:B,FSTagGroup:j,FSImage:A,FSIcon:d,FSText:z,FSRow:$},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},itemTo:{type:Function,required:!1},modelValue:{type:Array,default:()=>[],required:!1},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{entities:l,fetching:h,getMany:F}=J(),b=w(()=>({modelsLabels:{fixedFilters:l.value.map(t=>t.modelsLabels).reduce((t,o)=>{for(const s of o)t.map(g=>g.id).includes(s.id)||t.push(s);return t},[]).map(t=>({value:t.id,text:t.label})).concat({value:"",text:"--"}),methodFilter:(t,o)=>o.length==0&&t==""||o.length>0&&o.some(s=>s.id==t)},chartType:{fixedFilters:X(K).map(t=>({value:t.value,text:V(t.value)})),methodFilter:(t,o)=>t==o}})),S=t=>e.modelValue.includes(t),c=()=>{F(e.chartOrganisationFilters)};return D(()=>[e.chartOrganisationFilters],(t,o)=>{(!t&&!o||!M.isEqual(t,o))&&c()},{immediate:!0}),{fetchingChartOrganisations:h,chartOrganisations:l,headersOptions:b,ColorEnum:W,chartTypeLabel:V,isSelected:S,chartIcon:Q}}});function te(e,l,h,F,b,S){const c=m("FSImage"),t=m("FSTagGroup"),o=m("FSText"),s=m("FSChartTileUI"),g=m("FSDataTable");return T(),y(g,N({defaultMode:"iterator",items:e.chartOrganisations,itemTo:e.$props.itemTo,loading:e.fetchingChartOrganisations,headersOptions:e.headersOptions,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,singleSelect:e.$props.singleSelect,selectable:e.$props.selectable,"onUpdate:modelValue":l[0]||(l[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),E({"header.imageId-title":r(()=>[i(d,null,{default:r(()=>[f(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[i(d,null,{default:r(()=>[f(O(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(T(),y(c,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):G("",!0)]),"item.tags":r(({item:a})=>[i(t,{variant:"slide",tags:a.tags,showRemove:!1},null,8,["tags"])]),"item.modelsLabels":r(({item:a})=>[i(t,{variant:"slide",tags:a.modelsLabels.map(n=>n.label),showRemove:!1},null,8,["tags"])]),"item.chartType":r(({item:a})=>[i($,{wrap:!1},{default:r(()=>[i(d,{icon:e.chartIcon(a.chartType)},null,8,["icon"]),i(o,null,{default:r(()=>[f(O(e.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.tile":r(({item:a,toggleSelect:n})=>[i(s,{label:a.label,singleSelect:e.$props.singleSelect,selectable:e.$props.selectable,categoryLabel:a.chartCategoryLabel,icon:a.icon,imageId:a.imageId,type:a.chartType,scope:a.scope,modelValue:e.isSelected(a.id),"onUpdate:modelValue":C=>n(a),to:e.$props.itemTo&&e.$props.itemTo(a)},null,8,["label","singleSelect","selectable","categoryLabel","icon","imageId","type","scope","modelValue","onUpdate:modelValue","to"])]),_:2},[U(e.$slots,(a,n)=>({name:n,fn:r(C=>[R(e.$slots,n,P(k(C)))])}))]),1040,["items","itemTo","loading","headersOptions","tableCode","modelValue","singleSelect","selectable"])}const u=Y(q,[["render",te]]);q.__docgenInfo={displayName:"FSBaseChartOrganisationsList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"itemTo",type:{name:"(item: ChartOrganisationInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/chartOrganisations/FSBaseChartOrganisationsList.vue"]};const Kt={title:"Foundation/Core/Lists/Base Lists/BaseChartOrganisationsList",component:u,tags:["autodocs"],argTypes:{...x([B,ee],u),...Z(u),tableCode:{control:"select",options:["chartOrganisations1"]}}},p={render:e=>({components:{FSBaseChartOrganisationsList:u},setup(){return{args:e}},template:`
      <FSBaseChartOrganisationsList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    `}),args:{}};var v,I,L;p.parameters={...p.parameters,docs:{...(v=p.parameters)==null?void 0:v.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartOrganisationsList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartOrganisationsList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    \`
  }),
  args: {}
}`,...(L=(I=p.parameters)==null?void 0:I.docs)==null?void 0:L.source}}};const Wt=["Default"];export{p as Default,Wt as __namedExportsOrder,Kt as default};
