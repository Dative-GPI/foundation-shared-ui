import{a as U,b as M}from"./properties-DwZ_iDct.js";import{F as S}from"./FSDataTable-DW4-2EkQ.js";import{F as k}from"./FSDataTableUI-CdvXgxT_.js";import{d as w,c as V,q as N,w as v,z as s,B as P,Q as R,C as o,m as C,G as n,H as p,L as A,M as E,N as G,P as d,I as h,J as z,E as $}from"./vue.esm-bundler-CM4TIH-Q.js";import{_ as j}from"./lodash-BrWYvtk2.js";import{F as H}from"./FSTagGroup-33Dhks5F.js";import{F as g}from"./FSIcon-B4J40lse.js";import{_ as B}from"./FSRow-C47sfGk6.js";import{F as J}from"./FSText-C032WjuG.js";import{F as Q}from"./FSChip-Eibfjf6x.js";import{F as K}from"./FSDashboardOrganisationTypeTileUI-3jNDGk66.js";import{u as W}from"./useDashboardOrganisationTypes-Dw8co7i_.js";import{u as X}from"./useUserOrganisations-CEQ4t5kG.js";import{u as Y}from"./useOrganisations-Cfl5nVwI.js";import{u as Z}from"./useAppOrganisationId-BtM3-JKO.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSLoader-_1jWS2ee.js";import"./useBreakpoints-DsICqL2A.js";import"./useColors-CjA2D2xA.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DfSX31J9.js";import"./theme-d3-Spt7o.js";import"./css-D38lF7BW.js";import"./color-Bo6l13w9.js";import"./dimensions-DW-k5kP_.js";import"./elevation-DgpWsjTu.js";import"./locale-BqFH1fBg.js";import"./FSCol-Be93XvPD.js";import"./base-Be6PBkQb.js";import"./composableFactory-B6T2dm2_.js";import"./serviceFactory-B3o6Bvwt.js";import"./uuid-DTaye2KM.js";import"./FSFadeOut-PZiJk41N.js";import"./vue-router-io_1IWnU.js";import"./FSTile-CnylHsh7.js";import"./FSClickable-Cg52tyx-.js";import"./FSRouterLink-CxLK3Rak.js";import"./FSCard-BmFmHVy0.js";import"./VProgressCircular-C-4f-PXJ.js";import"./resizeObserver-Cb3oz2nO.js";import"./VIcon-GfKFLOEw.js";import"./FSCheckbox-hfVXQFUK.js";import"./FSSpan-BXQyelfo.js";import"./useSlots-c6yg-hhg.js";import"./useRules-B12Yr5ve.js";import"./VSelectionControl-MVg9W9ha.js";import"./density-Dl4v3sM7.js";import"./proxiedModel-DKx29MO-.js";import"./index-BkfcJ8bv.js";import"./VLabel-Ca5QW7tf.js";import"./VInput-DXPqvHKO.js";import"./index-BJH4L2FX.js";import"./transition-DMoMR0kB.js";import"./FSSearchField-C0IUL8IG.js";import"./FSTextField-iAMyMq3d.js";import"./FSBaseField-B4z0jav7.js";import"./FSButton-hPdQnp5M.js";import"./VField-D97ztcGG.js";import"./loader-CQB_6PPx.js";import"./anchor-DCFmATqq.js";import"./rounded-CDCr0BOq.js";import"./VDefaultsProvider-DYp4Zk7-.js";import"./forwardRefs-DWGaNmQL.js";import"./index-DWgrY6Dg.js";import"./useTranslations-CLqRehXT.js";import"./FSSelectField-CL_sYM6Y.js";import"./VList-BMwxt0uy.js";import"./VDialog-CgsoTmCe.js";import"./VOverlay-DtEUynQC.js";import"./display-CUGteI3_.js";import"./scopeId-COl1Iexy.js";import"./router-BXF-7Xxx.js";import"./ssrBoot-BDHgcVA9.js";import"./border-CvDIZQGy.js";import"./VImg-D7XF-hIS.js";import"./FSSlideGroup-CY-QwtGT.js";import"./FSButtonNextIcon-DPE-Eee3.js";import"./VSlideGroupItem-41bDxGuE.js";import"./group-3MU8bQUc.js";import"./FSToggleSet-BZUH8mQe.js";import"./FSWrapGroup-Fe7qxaBI.js";import"./FSRadio-vQr5ac4u.js";import"./VSelect-CCncmYiM.js";import"./VMenu-sKuqJ8jm.js";import"./FSDivider-CI8bGHV5.js";import"./FSMenu-Da0q64tf.js";import"./FSOptionGroup-BIKulhNc.js";import"./filter-C1K_d8Vd.js";import"./VBtn-DqO4-7PD.js";import"./filter-DHa7wap7.js";import"./FSTag-BC28rCef.js";import"./FSSimpleTileUI-Dlm0r5I7.js";import"./FSIconCard-KfCNb67L.js";import"./FSImage-BesC0Cra.js";import"./FSImageUI-CbHYTG-G.js";import"./useImages-X7qHyDlJ.js";import"./base-CmdGny12.js";import"./useAppAuthToken-3v3Ax1PV.js";import"./dashboardTranslation-Ck_0ef_t.js";import"./useAppLanguageCode-CN6bsmo6.js";import"./permissionInfos-BPDgTHQl.js";const _=w({name:"FSBaseDashboardOrganisationTypesList",components:{FSDataTable:S,FSTagGroup:H,FSIcon:g,FSRow:B,FSText:J,FSChip:Q,FSDashboardOrganisationTypeTileUI:K},props:{tableCode:{type:String,required:!1,default:null},dashboardOrganisationTypeFilters:{type:Object,default:void 0,required:!1},itemTo:{type:Function,required:!1},modelValue:{type:Array,required:!1,default:()=>[]},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{getMany:l,fetching:F,entities:O}=W(),{fetch:D,entity:f}=X(),{get:b,entity:m}=Y(),{organisationId:r}=Z(),y=V(()=>f.value?f.value.mainDashboardId:null),T=V(()=>m.value?m.value.mainDashboardId:null),a=t=>e.modelValue.includes(t);return N(()=>{D()}),v(r,()=>{r.value&&b(r.value)},{immediate:!0}),v(()=>e.dashboardOrganisationTypeFilters,(t,i)=>{(!t&&!i||!j.isEqual(t,i))&&l(e.dashboardOrganisationTypeFilters)},{immediate:!0}),{fetchingDashboardOrganisationTypes:F,userOrganisationMainDashboardId:y,organisationMainDashboardId:T,dashboardOrganisationTypes:O,isSelected:a}}});function ee(e,l,F,O,D,f){const b=n("FSText"),m=n("FSChip"),r=n("FSTagGroup"),y=n("FSDashboardOrganisationTypeTileUI"),T=n("FSDataTable");return p(),s(T,C({defaultMode:"iterator",loading:e.fetchingDashboardOrganisationTypes,items:e.dashboardOrganisationTypes,itemTo:e.$props.itemTo,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,"onUpdate:modelValue":l[0]||(l[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),P({"item.main":o(({item:a})=>[d(B,null,{default:o(()=>[a.id===e.organisationMainDashboardId?(p(),s(g,{key:0},{default:o(()=>[h(" mdi-account-group-outline ")]),_:1})):$("",!0),a.id===e.userOrganisationMainDashboardId?(p(),s(g,{key:1},{default:o(()=>[h(" mdi-home ")]),_:1})):$("",!0)]),_:2},1024)]),"item.icon":o(({item:a})=>[d(g,null,{default:o(()=>[h(z(a.icon),1)]),_:2},1024)]),"item.organisationTypeLabel":o(({item:a})=>[a.organisationTypeId?(p(),s(b,{key:0,label:a.organisationTypeLabel},null,8,["label"])):(p(),s(m,{key:1,variant:"standard",label:e.$tr("ui.common.all","All")},null,8,["label"]))]),"item.tags":o(({item:a})=>[d(r,{variant:"slide",showRemove:!1,tags:a.tags},null,8,["tags"])]),"item.tile":o(({item:a,toggleSelect:t})=>[d(y,C({bottomColor:a.colors,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,to:e.$props.itemTo&&e.$props.itemTo(a),modelValue:e.isSelected(a.id),"onUpdate:modelValue":i=>t(a)},a),null,16,["bottomColor","selectable","singleSelect","to","modelValue","onUpdate:modelValue"])]),_:2},[R(e.$slots,(a,t)=>({name:t,fn:o(i=>[A(e.$slots,t,E(G(i)))])}))]),1040,["loading","items","itemTo","tableCode","modelValue","selectable","singleSelect"])}const c=x(_,[["render",ee]]);_.__docgenInfo={displayName:"FSBaseDashboardOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardOrganisationTypeFilters",type:{name:"DashboardOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"undefined"}},{name:"itemTo",type:{name:"(item: DashboardOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/dashboardOrganisationTypes/FSBaseDashboardOrganisationTypesList.vue"]};const Ka={title:"Foundation/Core/Lists/Base Lists/BaseDashboardOrganisationTypesList",component:c,subcomponents:{FSDataTable:S},tags:["autodocs"],argTypes:{...M([S,k],c),...U(c),tableCode:{control:"select",options:["dashboardOrganisationTypes1"]}}},u={render:e=>({components:{FSBaseDashboardOrganisationTypesList:c},setup(){return{args:e}},template:`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    `}),args:{tableCode:"dashboardOrganisationTypes1"}};var I,L,q;u.parameters={...u.parameters,docs:{...(I=u.parameters)==null?void 0:I.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseDashboardOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    \`
  }),
  args: {
    tableCode: 'dashboardOrganisationTypes1'
  }
}`,...(q=(L=u.parameters)==null?void 0:L.docs)==null?void 0:q.source}}};const Wa=["Default"];export{u as Default,Wa as __namedExportsOrder,Ka as default};
