import{_}from"./lodash-BiW_TGGX.js";import{d as $,w as B,y as m,z as f,A as y,M as q,N,B as a,m as v,I as D,J as w,K as k,L as i,E as h,G as E,D as G}from"./vue.esm-bundler-CxS4_7kK.js";import{F as U}from"./FSChartTileUI-DX3yTuVD.js";import{F as O}from"./FSDataTable-C0AM8i-B.js";import{F as M}from"./FSTagGroup--OzEzD3d.js";import{F as z}from"./FSImage-BBxtwGYl.js";import{F as d}from"./FSIcon-BHUJU4iP.js";import{P as T}from"./charts-BPLoyxCB.js";import{u as A}from"./useChartOrganisationTypes-DiDxGEby.js";import{C as R}from"./useColors-BoRVwO74.js";import{_ as j}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSClickable-CusxsKEA.js";import"./FSCard-BOmUSPlM.js";import"./FSCol-Co9r7Klj.js";import"./css-D18ueKtB.js";import"./FSRow-D546kqFt.js";import"./VProgressCircular-BpEvERgl.js";import"./color-DpQhyQC8.js";import"./theme-BEfrBPRQ.js";import"./resizeObserver-CogQzEnD.js";import"./tag-ByYBjpGI.js";import"./FSSpan-3STIP-79.js";import"./useSlots-BHms3Yb6.js";import"./useTranslations-ZMyFjr19.js";import"./FSLoader-CL1ZyItv.js";import"./dimensions-DBaG2oVF.js";import"./elevation-8SXivnh1.js";import"./locale-DgxPCyxi.js";import"./VSpacer-DaRxrr8q.js";import"./FSDataTableUI-CR943IBc.js";import"./vue-router-DwCyYn3Y.js";import"./uuid-DTaye2KM.js";import"./FSCheckbox-CsAnMrj7.js";import"./useRules-o706rtr1.js";import"./VSelectionControl-CGo5bYGX.js";import"./density-CY0EC5jE.js";import"./VIcon-C65wMs2G.js";import"./proxiedModel-DAUSUEYq.js";import"./index-Dx6GtDlm.js";import"./VLabel-DuhHDssR.js";import"./VInput-BdNbghoa.js";import"./index-D0m5TbR6.js";import"./transition-DZ-8zzo1.js";import"./form-lyoENh9E.js";import"./FSText-BmTpjyov.js";import"./FSSearchField-CKombBF8.js";import"./FSTextField-BUbFMs1s.js";import"./FSBaseField-DRP7kP50.js";import"./FSButton-D64P3bCo.js";import"./VField-Cs2kmeSz.js";import"./loader-BoG0AaGl.js";import"./anchor-CfU9RSql.js";import"./rounded-Cd5tqTfa.js";import"./VDefaultsProvider-CZhGM_PV.js";import"./forwardRefs-DWGaNmQL.js";import"./index-CQjBi2ms.js";import"./FSSelectField-mHn_NIMq.js";import"./FSDialogMenu-BQnq2uK3.js";import"./VDialog-QbyZWgXc.js";import"./VOverlay-D-6__nW6.js";import"./display-B-O23xq9.js";import"./lazy-DlJBGmKZ.js";import"./router-C4cLtMAM.js";import"./FSSlideGroup-C1Kipqmu.js";import"./FSButtonNextIcon-DoEp6YQk.js";import"./VSlideGroupItem-CtpoFhNR.js";import"./group-Bl9vmDol.js";import"./FSToggleSet-BeXfNSJj.js";import"./FSWrapGroup-BLPJiM21.js";import"./FSFadeOut-Bx7JPxYi.js";import"./FSRadio-BWlhMOEh.js";import"./VList-CCKQMsMr.js";import"./ssrBoot-hTBI6W7o.js";import"./border-yULewhCr.js";import"./VImg-616TDJo4.js";import"./VSelect-C8c1PUzV.js";import"./VMenu-CCWiAq1W.js";import"./FSDivider-C-S7a1rp.js";import"./FSChip-DcZdL0rc.js";import"./FSOptionGroup-CJ2T9OnO.js";import"./filter-C1K_d8Vd.js";import"./VBtn-Cg1UOEjx.js";import"./filter-_ePnXriG.js";import"./base-CaOb73CX.js";import"./useAppOrganisationId-DHO07ZDR.js";import"./serviceFactory-DAEdCiSt.js";import"./composableFactory-935AgDKu.js";import"./FSTag-YrvKKx8M.js";import"./FSImageUI-yDCfCx5C.js";import"./useImages-DkNM0cBn.js";import"./base-CmdGny12.js";import"./useAppAuthToken-JHUrxSke.js";import"./chartSerie-IzOK_6i2.js";import"./timeRange-DtWQBHMx.js";import"./index-3zl-tJp_.js";const S=$({name:"FSBaseChartOrganisationTypesList",components:{FSChartTileUI:U,FSDataTable:O,FSTagGroup:M,FSImage:z,FSIcon:d},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},plotPer:{type:Number,required:!1,default:T.None},itemTo:{type:Function,required:!1},modelValue:{type:Array,default:()=>[],required:!1}},emits:["update:modelValue"],setup(e){const{entities:n,fetching:u,getMany:l}=A(),g=o=>e.modelValue.includes(o),c=()=>{e.plotPer===T.None?l(e.chartOrganisationFilters):l({...e.chartOrganisationFilters,plotPer:e.plotPer})};return B(()=>[e.chartOrganisationFilters,e.plotPer],(o,r)=>{(!o&&!r||!_.isEqual(o,r))&&c()},{immediate:!0}),{ColorEnum:R,fetchingChartOrganisationTypes:u,chartOrganisationTypes:n,isSelected:g}}});function J(e,n,u,l,g,c){const o=m("FSImage"),r=m("FSTagGroup"),P=m("FSChartTileUI"),V=m("FSDataTable");return f(),y(V,v({items:e.chartOrganisationTypes,itemTo:e.$props.itemTo,loading:e.fetchingChartOrganisationTypes,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,"onUpdate:modelValue":n[0]||(n[0]=t=>e.$emit("update:modelValue",t))},e.$attrs),q({"header.imageId-title":a(()=>[i(d,null,{default:a(()=>[h(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":a(({item:t})=>[i(d,null,{default:a(()=>[h(E(t.icon),1)]),_:2},1024)]),"item.imageId":a(({item:t})=>[t.imageId?(f(),y(o,{key:0,height:"32px",width:"32px",imageId:t.imageId},null,8,["imageId"])):G("",!0)]),"item.tags":a(({item:t})=>[i(r,{variant:"slide",editable:!1,tags:t.tags},null,8,["tags"])]),"item.modelsLabels":a(({item:t})=>[i(r,{editable:!1,tags:t.modelsLabels.map(s=>s.label)},null,8,["tags"])]),"item.tile":a(({item:t})=>[i(P,{label:t.label,"category-label":t.chartCategoryLabel,icon:t.icon,imageId:t.imageId,type:t.chartType,to:e.$props.itemTo&&e.$props.itemTo(t)},null,8,["label","category-label","icon","imageId","type","to"])]),_:2},[N(e.$slots,(t,s)=>({name:s,fn:a(L=>[D(e.$slots,s,w(k(L)))])}))]),1040,["items","itemTo","loading","tableCode","modelValue"])}const I=j(S,[["render",J]]);S.__docgenInfo={displayName:"FSBaseChartOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"plotPer",type:{name:"PlotPer"},required:!1,defaultValue:{func:!1,value:"PlotPer.None"}},{name:"itemTo",type:{name:"(item: ChartOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/chartOrganisationTypes/FSBaseChartOrganisationTypesList.vue"]};const Dt={title:"Foundation/Core/Lists/Base Lists/BaseChartOrganisationTypesList",component:I,subcomponents:{FSDataTable:O},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["chartOrganisationTypes1"]}}},p={render:e=>({components:{FSBaseChartOrganisationTypesList:I},setup(){return{args:e}},template:`
      <FSBaseChartOrganisationTypesList
        :tableCode="args.tableCode"
      />
    `}),args:{tableCode:"chartOrganisationTypes1"}};var C,F,b;p.parameters={...p.parameters,docs:{...(C=p.parameters)==null?void 0:C.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartOrganisationTypesList
        :tableCode="args.tableCode"
      />
    \`
  }),
  args: {
    tableCode: 'chartOrganisationTypes1'
  }
}`,...(b=(F=p.parameters)==null?void 0:F.docs)==null?void 0:b.source}}};const wt=["Default"];export{p as Default,wt as __namedExportsOrder,Dt as default};
