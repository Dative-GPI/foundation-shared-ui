var $=Object.defineProperty;var D=(e,o,t)=>o in e?$(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t;var r=(e,o,t)=>D(e,typeof o!="symbol"?o+"":o,t);import{a as I,b as q}from"./properties-Qw-O9fbT.js";import{F as g}from"./FSAutocompleteField-DcUdpD-9.js";import{d as C,c as s,B as _,m as U,I as N,J as R}from"./vue.esm-bundler-PONd4AmC.js";import{C as B}from"./base-Cd1_IDDR.js";import{C as f}from"./composableFactory-B2U31qfW.js";import{S as E}from"./serviceFactory-aQiBqOvf.js";import{u as G}from"./useAutocomplete-DsvrErHM.js";import{u as M}from"./useTranslations-_Q1DYra_.js";import{_ as k}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as L}from"./VAutocomplete-UDTUdT4q.js";import"./FSSearchField-sQ9DfSvh.js";import"./FSTextField-DpTxivyj.js";import"./FSBaseField-ynwJeuM4.js";import"./FSSpan-DqsaA-ji.js";import"./useBreakpoints-RTs-XAJF.js";import"./useSlots-nyIcwo6G.js";import"./FSCol-Bfhiyt6Y.js";import"./css-BeoQuAfr.js";import"./FSRow-C-b-hpWa.js";import"./useColors-WMY9wD-z.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-DW7AHeJn.js";import"./FSButton-BtOsEP4C.js";import"./FSRouterLink-mxENRZ46.js";import"./vue-router-D84-pxgD.js";import"./FSClickable-BpeLEfG7.js";import"./FSCard-B7av1ouT.js";import"./VProgressCircular-D57tYVQX.js";import"./color-CQ7P2KsY.js";import"./resizeObserver-BAwzmH4Y.js";import"./VIcon-shEmQARK.js";import"./FSIcon-wf_hiRKr.js";import"./useRules-CT5DWk6c.js";import"./VField-BsvLa1Vn.js";import"./index-COu1mqSp.js";import"./transition-BpYTYsmy.js";import"./VLabel-B2dMuALu.js";import"./VInput-CX-j4Zl6.js";import"./locale-CoLhg8Wl.js";import"./density-DM1TPnyn.js";import"./dimensions-D04OQyPe.js";import"./proxiedModel-BMHfYIia.js";import"./loader-zqGHJTJd.js";import"./anchor-rLQXsCC5.js";import"./rounded-Cwlpymxx.js";import"./VDefaultsProvider--dbql3OT.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-CzkqP9_q.js";import"./FSDialogMenu-XBy5gEQ2.js";import"./VDialog-DuPuMCeo.js";import"./VOverlay-DZqv3aZJ.js";import"./display-D1WOGNJY.js";import"./lazy-PL0gnfDR.js";import"./router-DS8hXbpn.js";import"./scopeId-DFcjERLl.js";import"./FSSlideGroup-BKLRFR6r.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-PE5YDRXp.js";import"./VSlideGroupItem-B4B7QRhR.js";import"./group-QLjCrFp5.js";import"./FSToggleSet-DoOlvhp-.js";import"./FSWrapGroup-Dayjp45z.js";import"./FSCheckbox-B_D3nKx1.js";import"./VCheckboxBtn-CYnHxMSC.js";import"./VSelectionControl-BAKsAS1a.js";import"./index-aCfcr9Gd.js";import"./FSFadeOut-Dik6Imqk.js";import"./FSLoader-B0jwcdOS.js";import"./elevation-D2k7D5K3.js";import"./FSRadio-CSYtdY7R.js";import"./VSelect-AOkN1lp-.js";import"./VList-BCmGq4kQ.js";import"./ssrBoot-DufuUSU7.js";import"./border-BL_XAYaf.js";import"./VImg-AonvEV9k.js";import"./VMenu-FXIUZrjg.js";import"./filter-D4n0RRF9.js";import"./useAppOrganisationId-BgVWu_vS.js";import"./lodash-Zo30T2Bj.js";import"./filter-KTTNQBFM.js";import"./index-Cw6eTGe7.js";import"./theme-CYBW1gqf.js";import"./color-BjNiHHj9.js";import"./icons-B8jsWbid.js";import"./transition-BLc6SjwQ.js";import"./VInput-PVuhiTi8.js";import"./dimensions-Bhowz3j9.js";import"./proxiedModel-YDID3p5t.js";import"./VMenu-CPBRiML2.js";import"./display-iOw8Yit5.js";import"./lazy-6CyKxEg9.js";import"./goto-D1U7XOvA.js";import"./VDivider-C4YNcQz1.js";import"./group-DpPqq0Wg.js";class y{constructor(o){r(this,"id");r(this,"mainDashboardId");r(this,"mainDashboardType");r(this,"code");r(this,"label");this.id=o.id,this.mainDashboardId=o.mainDashboardId,this.mainDashboardType=o.mainDashboardType,this.code=o.code,this.label=o.label}}class P extends y{constructor(t){super(t);r(this,"description");this.description=t.description}}const T=()=>`${B()}/organisation-types`,w=e=>`${T()}/${encodeURIComponent(e)}`,S=new E("organisationType",P).create(e=>e.build(e.addGet(w),e.addGetMany(T,y),e.addNotify()));f.get(S);const Y=f.getMany(S),b=C({name:"FSAutocompleteOrganisationType",components:{FSAutocompleteField:g},props:{organisationTypeFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update:modelValue"],setup(e,{emit:o}){const{getMany:t,fetching:l,entities:n}=Y(),{$tr:m}=M(),p=s(()=>V.value&&l.value),h=s(()=>e.multiple&&e.modelValue?m("autocomplete.organisation-type.placeholder","{0} organisation type(s) selected",e.modelValue.length):null),F=v=>t({...e.organisationTypeFilters,search:v??void 0}),{toggleSet:O,init:V,onUpdate:A}=G(n,[()=>e.organisationTypeFilters],o,F);return{organisationTypes:n,placeholder:h,toggleSet:O,loading:p,onUpdate:A}}});function j(e,o,t,l,n,m){const p=N("FSAutocompleteField");return R(),_(p,U({label:e.$props.label??e.$tr("ui.common.organisation-type","Organisation type"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,items:e.organisationTypes,loading:e.loading,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),null,16,["label","toggleSet","multiple","placeholder","items","loading","modelValue","onUpdate:modelValue"])}const a=k(b,[["render",j]]);b.__docgenInfo={displayName:"FSAutocompleteOrganisationType",exportName:"default",description:"",tags:{},props:[{name:"organisationTypeFilters",type:{name:"OrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteOrganisationType.vue"]};const Bo={title:"Foundation/Core/Autocompletes/AutocompleteOrganisationType",component:a,tags:["autodocs"],argTypes:{...q([g,L],a),...I(a)}},i={render:e=>({components:{FSAutocompleteOrganisationType:a},setup(){return{args:e}},template:`
    <FSAutocompleteOrganisationType
      v-model="args.modelValue"
      v-bind="args"
    />`}),args:{modelValue:[]}};var u,d,c;i.parameters={...i.parameters,docs:{...(u=i.parameters)==null?void 0:u.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteOrganisationType
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteOrganisationType
      v-model="args.modelValue"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: []
  }
}`,...(c=(d=i.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};const Eo=["Default"];export{i as Default,Eo as __namedExportsOrder,Bo as default};
