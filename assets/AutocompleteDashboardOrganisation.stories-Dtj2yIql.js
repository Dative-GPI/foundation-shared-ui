import{a as v,b as $}from"./properties-Qw-O9fbT.js";import{F as h}from"./FSAutocompleteField-D0xJEWg5.js";import{d as q,c as s,B as d,E as u,m as C,I as _,J as c,H as B,A as k,K as N}from"./vue.esm-bundler-BB--BfRN.js";import{F as V}from"./FSIcon-BKav6CVU.js";import{u as T}from"./useDashboardOrganisations-DLSzXj2o.js";import{u as U}from"./useAutocomplete-Cwzj1BuR.js";import{u as E}from"./useTranslations-DvAhn7XV.js";import{_ as I}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as w}from"./VAutocomplete-vWo0A3-1.js";import"./FSSearchField-CJDKUSod.js";import"./FSTextField-DmCfYujO.js";import"./FSBaseField-BxMUaAXJ.js";import"./FSSpan-BndtI8AP.js";import"./useBreakpoints-f5uwzDhq.js";import"./useSlots-COLyvmal.js";import"./FSCol-BU2zndN-.js";import"./css-DoweNwVf.js";import"./FSRow-Bdc52rY8.js";import"./useColors-CeWNZtds.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-BwQCEo_4.js";import"./FSButton-DEqhqb0b.js";import"./FSRouterLink-DUWl7Aiu.js";import"./vue-router-CibjbVOv.js";import"./FSClickable-CwRD7A4m.js";import"./FSCard-CiGLNn7K.js";import"./VProgressCircular-DNr7n8jG.js";import"./color-DIvEt_AX.js";import"./resizeObserver-CgHguIgR.js";import"./VIcon-Cl87HT90.js";import"./useRules-CSYFw_Ue.js";import"./VField-COyetWuv.js";import"./index-9ysw5oGg.js";import"./transition-GJJG9yri.js";import"./VLabel-Cmax-_yp.js";import"./VInput-BfMi-lTR.js";import"./locale-CSWC84Vq.js";import"./density-Xpr_P7nk.js";import"./dimensions-DwY9cRwZ.js";import"./proxiedModel-DMSSa4ZW.js";import"./loader-BKsf8Js6.js";import"./anchor-C8ooBn8e.js";import"./rounded-BKWlZxOJ.js";import"./VDefaultsProvider-BK3j_XEC.js";import"./forwardRefs-DWGaNmQL.js";import"./index--Ye8kcMr.js";import"./VList-CAfJ4PqY.js";import"./VDialog-bMbnstsA.js";import"./VOverlay-B758aeer.js";import"./display-DzHu_6W3.js";import"./scopeId-NiaFRIZK.js";import"./router-WJHyAZQ9.js";import"./ssrBoot-DNxkCF-9.js";import"./border-TZTDiA6n.js";import"./elevation-S_BtbnzN.js";import"./index-8zgUIpZ9.js";import"./VImg-DcLzuYY5.js";import"./FSSlideGroup-DLHspItq.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BwHgwEym.js";import"./VSlideGroupItem-BI1OJQNm.js";import"./group-C8GVwDAJ.js";import"./FSToggleSet-D12Sjar_.js";import"./FSWrapGroup-TGBfJRdY.js";import"./FSCheckbox-ti2pWVdy.js";import"./VSelectionControl-KO2lf4xS.js";import"./FSFadeOut-BS7VKwj1.js";import"./FSLoader-Cf5HtYZd.js";import"./FSRadio-C1kBTUbb.js";import"./VSelect-fihYAFHR.js";import"./VMenu-DdabqpBj.js";import"./filter-Cz8pNtBH.js";import"./dashboardTranslation-B4MMbMdA.js";import"./useAppLanguageCode-DVn301Ra.js";import"./lodash-Zo30T2Bj.js";import"./pathCrumb-Db-cq5HI.js";import"./base-CiabG-44.js";import"./useAppOrganisationId-D3b8yxVY.js";import"./composableFactory-DwIj5O2m.js";import"./serviceFactory-aQiBqOvf.js";import"./filter-CD3PNNcP.js";import"./index-Edu8gKo6.js";import"./theme-DmYH_9cW.js";import"./color-_MC-k_Ht.js";import"./icons-uq6MP7TZ.js";import"./transition-DZp2iMgR.js";import"./VInput-CQYyf-r7.js";import"./dimensions-BAUR_ret.js";import"./proxiedModel-rns-67Pb.js";import"./VMenu-DSF3kjsm.js";import"./display-CR2jF3WC.js";import"./lazy-ChoNvvLL.js";import"./goto-DID-upFE.js";import"./VDivider-C9qGuLQ6.js";import"./group-CTcEv9zC.js";const F=q({name:"FSAutocompleteDashboard",components:{FSAutocompleteField:h,FSIcon:V},props:{dashboardOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update:modelValue"],setup(e,{emit:m}){const{getMany:l,fetching:p,entities:a}=T(),{$tr:n}=E(),i=s(()=>y.value&&p.value),o=s(()=>e.multiple&&e.modelValue?n("autocomplete.dashboard.placeholder","{0} dashboard(s) selected",e.modelValue.length):null),S=A=>l({...e.dashboardOrganisationFilters,search:A??void 0}),{toggleSet:D,init:y,onUpdate:O}=U(a,[()=>e.dashboardOrganisationFilters],m,S);return{dashboardOrganisations:a,placeholder:o,toggleSet:D,loading:i,onUpdate:O}}});function M(e,m,l,p,a,n){const i=_("FSAutocompleteField");return c(),d(i,C({label:e.$props.label??e.$tr("ui.common.dashboard","Dashboard"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,items:e.dashboardOrganisations,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":u(({item:o})=>[o.icon?(c(),d(V,{key:0},{default:u(()=>[k(N(o.icon),1)]),_:2},1024)):B("",!0)]),_:1},16,["label","toggleSet","items","multiple","placeholder","loading","modelValue","onUpdate:modelValue"])}const r=I(F,[["render",M]]);F.__docgenInfo={displayName:"FSAutocompleteDashboard",exportName:"default",description:"",tags:{},props:[{name:"dashboardOrganisationFilters",type:{name:"DashboardOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteDashboardOrganisation.vue"]};const Co={title:"Foundation/Core/Autocompletes/AutocompleteDashboardOrganisation",component:r,tags:["autodocs"],argTypes:{...$([h,w],r),...v(r)}},t={render:e=>({components:{FSAutocompleteDashboardOrganisation:r},setup(){return{args:e}},template:`
    <FSAutocompleteDashboardOrganisation
      v-model="args.modelValue"
      v-bind="args"
    />`}),args:{modelValue:[]}};var f,g,b;t.parameters={...t.parameters,docs:{...(f=t.parameters)==null?void 0:f.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteDashboardOrganisation
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteDashboardOrganisation
      v-model="args.modelValue"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: []
  }
}`,...(b=(g=t.parameters)==null?void 0:g.docs)==null?void 0:b.source}}};const _o=["Default"];export{t as Default,_o as __namedExportsOrder,Co as default};
