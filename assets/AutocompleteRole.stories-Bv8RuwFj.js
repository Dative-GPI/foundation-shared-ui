import{a as U,b as L}from"./properties-DwZ_iDct.js";import{F as N}from"./FSAutocompleteField-B675gFER.js";import{d as j,c,z as T,C as n,m as z,G as h,H as R,P as f,D as G,B as H,E as J,I as W,J as K}from"./vue.esm-bundler-PTWG9x2X.js";import{F as $}from"./FSButton-CqjbOz0n.js";import{F as Q}from"./FSChip-CFp_uIHK.js";import{F as v}from"./FSIcon-DQMOs0-E.js";import{u as X}from"./useRoleOrganisationTypes-olJZjRGl.js";import{u as Y}from"./useRoleOrganisations-K7fvBzBT.js";import{u as B}from"./useTranslations-BnE68qER.js";import{C as g}from"./useColors-DSUu_QQ4.js";import{u as Z}from"./useAutocomplete-DNfysV-Y.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as ee}from"./VAutocomplete-NYBLaXbE.js";import"./FSSearchField-BeidTVNh.js";import"./FSTextField-Du_6UKzN.js";import"./FSBaseField-BF-P1IfK.js";import"./FSSpan-yJEd2pn-.js";import"./useBreakpoints-W7XGW48y.js";import"./useSlots-BG_ZhEqK.js";import"./FSCol-qfATdd_b.js";import"./css-B90wD3BD.js";import"./FSRow-DPcQMiM9.js";import"./useRules-D0leB7Wy.js";import"./VField-w4x2OZhg.js";import"./index-b-ADC_Il.js";import"./color-CCpgnDIk.js";import"./theme-D6MQh39g.js";import"./transition-QV8dDJB9.js";import"./VLabel-BNJ33aDR.js";import"./VInput-C2FcZlE6.js";import"./locale-Cz_4DTJh.js";import"./VIcon-DIeegzqR.js";import"./density-CznkHGGy.js";import"./dimensions-v18atrWI.js";import"./proxiedModel-CvHSoKPb.js";import"./loader-BqT2mYY7.js";import"./VProgressCircular-eoxb555W.js";import"./resizeObserver-C17Kgm90.js";import"./anchor-BcF6JBj1.js";import"./rounded-BbPXzFqc.js";import"./VDefaultsProvider-aDgtYDKn.js";import"./forwardRefs-DWGaNmQL.js";import"./index-BNomsh5u.js";import"./VList-Dqx2Wq64.js";import"./FSCard-CRoBY3gL.js";import"./VDialog-DW8Lwwmu.js";import"./VOverlay-CoK8W0Lk.js";import"./display-CESVul9-.js";import"./scopeId-CROTNdIb.js";import"./router-BQjY5_kj.js";import"./ssrBoot-DfimFJGl.js";import"./border-CIYj3WlL.js";import"./elevation-CrSwNJwg.js";import"./index-Dqqa47M6.js";import"./VImg-CBGPWIu-.js";import"./FSSlideGroup-Cnb4B0wP.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BgOE6pA_.js";import"./VSlideGroupItem-C6-4cvTl.js";import"./group-8tJUjatm.js";import"./FSToggleSet-2ksJh9hi.js";import"./FSWrapGroup-8ynKQ69u.js";import"./FSCheckbox-D0eLEsDk.js";import"./VSelectionControl-Fvr0iuTu.js";import"./FSFadeOut-BR2NoxgI.js";import"./FSLoader-DnFcYh1x.js";import"./FSRadio-dWKh4KJE.js";import"./VSelect-D-RlUgcB.js";import"./VMenu-BiZHvw8b.js";import"./filter-qsWrMVs0.js";import"./FSRouterLink-C06pLVSG.js";import"./vue-router-_5OpMgKw.js";import"./FSClickable-KpP1cmTZ.js";import"./permissionInfos-BPDgTHQl.js";import"./base-BJ27TNVe.js";import"./useAppOrganisationId-CurthI5S.js";import"./composableFactory-BVozujU4.js";import"./serviceFactory-B3o6Bvwt.js";import"./_commonjsHelpers-BosuxZz1.js";import"./lodash-BrWYvtk2.js";import"./index-DfSX31J9.js";import"./theme-D-hw1Ova.js";import"./goto-aHhxV8bP.js";import"./VDivider-C6rztPYL.js";var a=(e=>(e[e.None=0]="None",e[e.Organisation=1]="Organisation",e[e.OrganisationType=2]="OrganisationType",e))(a||{});const{$tr:y}=B(),oe=e=>{switch(e){case a.None:return y("ui.common.none","None");case a.Organisation:return y("ui.common.custom","Custom");case a.OrganisationType:return y("ui.common.shared","Shared")}},te=e=>{switch(e){case a.None:return g.Error;case a.Organisation:return g.Primary;case a.OrganisationType:return g.Warning}},k=j({name:"FSAutocompleteRole",components:{FSAutocompleteField:N,FSButton:$,FSChip:Q,FSIcon:v},props:{roleOrganisationTypeFilters:{type:Object,required:!1,default:null},roleOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:a.None},ignoreRoleOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreRoleOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(e,{emit:r}){const{getMany:O,fetching:V,entities:F}=X(),{getMany:b,fetching:i,entities:p}=Y(),{$tr:t}=B(),u=c(()=>F.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:a.OrganisationType})).concat(p.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:a.Organisation})))),D=c(()=>_.value&&(V.value||i.value)),w=c(()=>e.multiple&&e.modelValue?t("autocomplete.role.placeholder","{0} role(s) selected",e.modelValue.length):null),E=o=>{if(Array.isArray(o)){const l=o.map(d=>d.id),S=o.map(d=>d.type);r("update:modelValue",l),r("update:type",S),r("update",{modelValue:l,type:S})}else r("update:modelValue",o==null?void 0:o.id),r("update:type",o==null?void 0:o.type),r("update",{modelValue:o==null?void 0:o.id,type:o==null?void 0:o.type})},I=o=>{const l=[];return e.ignoreRoleOrganisations||l.push(b({...e.roleOrganisationFilters,search:o??void 0})),e.ignoreRoleOrganisationTypes||l.push(O({...e.roleOrganisationTypeFilters,search:o??void 0})),Promise.all(l)},{toggleSet:M,init:_,onUpdate:P}=Z(u,[()=>e.roleOrganisationTypeFilters,()=>e.roleOrganisationFilters],r,I,E);return{placeholder:w,toggleSet:M,RoleType:a,loading:D,roles:u,roleTypeColor:te,roleTypeLabel:oe,onUpdate:P}}});function ae(e,r,O,V,F,b){const i=h("FSChip"),p=h("FSAutocompleteField");return R(),T(p,z({label:e.$props.label??e.$tr("ui.common.role","Role"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.roles,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":n(({item:t})=>[t.icon?(R(),T(v,{key:0},{default:n(()=>[W(K(t.icon),1)]),_:2},1024)):J("",!0)]),"item-append":n(({item:t})=>[f(i,{color:e.roleTypeColor(t.type),label:e.roleTypeLabel(t.type)},null,8,["color","label"])]),"toggle-set-item":n(t=>[f($,{prependIcon:t.item.icon,variant:t.getVariant(t.item),color:t.getColor(t.item),class:G(t.getClass(t.item)),label:t.item.label,onClick:u=>t.toggle(t.item)},H({_:2},[t.item.type?{name:"append",fn:n(()=>[f(i,{color:e.roleTypeColor(t.item.type),label:e.roleTypeLabel(t.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const m=x(k,[["render",ae]]);k.__docgenInfo={displayName:"FSAutocompleteRole",exportName:"default",description:"",tags:{},props:[{name:"roleOrganisationTypeFilters",type:{name:"RoleOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"roleOrganisationFilters",type:{name:"RoleOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"RoleType[] | RoleType"},required:!1,defaultValue:{func:!1,value:"RoleType.None"}},{name:"ignoreRoleOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreRoleOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteRole.vue"]};const Eo={title:"Foundation/Core/Autocompletes/AutocompleteRole",component:m,tags:["autodocs"],argTypes:{...L([N,ee],m),...U(m)}},s={render:e=>({components:{FSAutocompleteRole:m},setup(){return{args:e}},template:`
    <FSAutocompleteRole
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:a.None}};var C,A,q;s.parameters={...s.parameters,docs:{...(C=s.parameters)==null?void 0:C.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteRole
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteRole
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: RoleType.None
  }
}`,...(q=(A=s.parameters)==null?void 0:A.docs)==null?void 0:q.source}}};const Io=["Default"];export{s as Default,Io as __namedExportsOrder,Eo as default};
