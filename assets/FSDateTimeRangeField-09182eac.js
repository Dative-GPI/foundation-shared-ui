import{f as U,j as V,g as d,D as b,E as L,H as E,M as r,U as H,V as M,G as u,J as O,R as C,N,O as P}from"./vue.esm-bundler-838daa40.js";import{F as j,a as z}from"./FSCalendarTwin-322f6e85.js";import{F as h}from"./FSTextField-55dfca8e.js";import{F as $}from"./FSButton-255c9a8d.js";import{F as G}from"./FSClock-dfba5858.js";import{_ as v}from"./FSCol-44fe82a9.js";import{_ as q}from"./FSRow-753b58e5.js";import{C as m,u as I}from"./useColors-4ac7c452.js";import{u as J}from"./useAppTimeZone-a305acc7.js";import{u as Z}from"./useRules-cda8e231.js";import{_ as K}from"./_plugin-vue_export-helper-c27b6911.js";const k=U({name:"FSDateTimeRangeField",components:{FSDialogSubmit:j,FSCalendarTwin:z,FSTextField:h,FSButton:$,FSClock:G,FSCol:v,FSRow:q},props:{label:{type:String,required:!1,default:null},description:{type:String,required:!1,default:null},modelValue:{type:Array,required:!1,default:null},color:{type:String,required:!1,default:m.Primary},hideHeader:{type:Boolean,required:!1,default:!1},required:{type:Boolean,required:!1,default:!1},rules:{type:Array,required:!1,default:()=>[]},editable:{type:Boolean,required:!1,default:!0}},emits:["update:modelValue"],setup(e,{emit:a}){const{getUserOffsetMillis:f,epochToShortTimeFormat:y}=J(),{validateOn:F,blurred:S,getMessages:c}=Z(),{getColors:t}=I(),g=t(m.Error),o=t(m.Light),p=t(m.Dark),i=V(!1),l=V(null),s=V(0),n=V(0);if(e.modelValue&&Array.isArray(e.modelValue))switch(e.modelValue.length){case 0:break;case 1:{n.value=Math.floor((e.modelValue[0]+f())%(24*60*60*1e3)),l.value=[e.modelValue[0]-n.value];break}default:{n.value=Math.floor((e.modelValue[0]+f())%(24*60*60*1e3)),s.value=Math.floor((e.modelValue[1]+f())%(24*60*60*1e3)),l.value=[e.modelValue[0]-n.value,e.modelValue[1]-s.value];break}}const T=d(()=>e.editable?{"--fs-date-field-color":p.base,"--fs-date-field-error-color":g.base}:{"--fs-date-field-color":o.dark}),D=d(()=>!e.modelValue||!Array.isArray(e.modelValue)||!e.modelValue.length?"":e.modelValue.map(w=>y(w)).join(" - ")),R=d(()=>l.value&&Array.isArray(l.value)&&l.value.length?l.value[0]:null),A=d(()=>l.value&&Array.isArray(l.value)&&l.value.length>1?l.value[1]:null),B=d(()=>c(e.modelValue,e.rules,!0));return{ColorEnum:m,validateOn:F,messages:B,blurred:S,style:T,dialog:i,toShortTimeFormat:D,innerDateLeft:R,innerTimeLeft:n,innerDateRight:A,innerTimeRight:s,innerDateRange:l,onClick:()=>{e.editable&&(i.value=!0)},onClear:()=>{a("update:modelValue",null),n.value=0,s.value=0,l.value=null},onSubmit:()=>{l.value&&Array.isArray(l.value)&&l.value.length>1&&a("update:modelValue",[l.value[0]+n.value,l.value[1]+s.value]),i.value=!1}}}});function Q(e,a,f,y,F,S){const c=b("FSCalendarTwin"),t=b("FSClock"),g=b("FSDialogSubmit");return L(),E(O,null,[r(h,{class:"fs-date-field",label:e.$props.label,description:e.$props.description,color:e.$props.color,hideHeader:e.$props.hideHeader,required:e.$props.required,editable:e.$props.editable,readonly:!0,rules:e.$props.rules,messages:e.messages,validateOn:e.validateOn,validationValue:e.$props.modelValue,modelValue:e.toShortTimeFormat,onClick:e.onClick,"onUpdate:modelValue":e.onClear,onBlur:a[0]||(a[0]=o=>e.blurred=!0)},H({"prepend-inner":u(()=>[C(e.$slots,"prepend-inner",{},()=>[r($,{variant:"icon",icon:"mdi-calendar",editable:e.$props.editable,color:e.ColorEnum.Dark},null,8,["editable","color"])])]),_:2},[M(e.$slots,(o,p)=>({name:p,fn:u(i=>[C(e.$slots,p,N(P(i)))])}))]),1032,["label","description","color","hideHeader","required","editable","rules","messages","validateOn","validationValue","modelValue","onClick","onUpdate:modelValue"]),r(g,{title:e.$props.label,submitButtonColor:e.$props.color,"onClick:submitButton":e.onSubmit,modelValue:e.dialog,"onUpdate:modelValue":a[4]||(a[4]=o=>e.dialog=o)},{body:u(()=>[r(v,null,{default:u(()=>[r(c,{color:e.$props.color,modelValue:e.innerDateRange,"onUpdate:modelValue":a[1]||(a[1]=o=>e.innerDateRange=o)},null,8,["color","modelValue"]),r(q,null,{default:u(()=>[r(v,null,{default:u(()=>[r(t,{color:e.$props.color,date:e.innerDateLeft,modelValue:e.innerTimeLeft,"onUpdate:modelValue":a[2]||(a[2]=o=>e.innerTimeLeft=o)},null,8,["color","date","modelValue"])]),_:1}),r(v,null,{default:u(()=>[r(t,{color:e.$props.color,date:e.innerDateRight,modelValue:e.innerTimeRight,"onUpdate:modelValue":a[3]||(a[3]=o=>e.innerTimeRight=o)},null,8,["color","date","modelValue"])]),_:1})]),_:1})]),_:1})]),_:1},8,["title","submitButtonColor","onClick:submitButton","modelValue"])],64)}const se=K(k,[["render",Q]]);k.__docgenInfo={displayName:"FSDateTimeRangeField",exportName:"default",description:"",tags:{},props:[{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"description",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"number[] | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"color",type:{name:"ColorBase"},required:!1,defaultValue:{func:!1,value:"ColorEnum.Primary"}},{name:"hideHeader",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"required",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"rules",type:{name:"any[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}}],events:[{name:"update:modelValue"}],slots:[{name:"prepend-inner"},{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/shared/foundation-shared-components/components/fields/FSDateTimeRangeField.vue"]};export{se as F};
