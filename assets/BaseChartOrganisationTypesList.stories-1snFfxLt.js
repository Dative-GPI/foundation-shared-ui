import{_}from"./lodash-BiW_TGGX.js";import{d as $,w as B,y as m,z as f,A as y,M as q,N,B as a,m as v,I as D,J as w,K as k,L as i,E as h,G as E,D as G}from"./vue.esm-bundler-BSyvBTC9.js";import{F as U}from"./FSChartTileUI-Cy6sBz6D.js";import{F as O}from"./FSDataTable-CIruG7xe.js";import{F as M}from"./FSTagGroup-BuAqKeGP.js";import{F as z}from"./FSImage-VV4rkzPN.js";import{F as d}from"./FSIcon-BVNp7pcM.js";import{P as T}from"./charts-BPLoyxCB.js";import{u as A}from"./useChartOrganisationTypes-dJN_rUrd.js";import{C as R}from"./useColors-Ccf8xVyg.js";import{_ as j}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSClickable-D0EdtzT9.js";import"./FSCard-CiUY3jF9.js";import"./FSCol-DZA6pxA1.js";import"./css-DLfrm0pR.js";import"./FSRow-CA1vgNXx.js";import"./VProgressCircular-D09FP1rk.js";import"./color--o2QfpAv.js";import"./theme-D4rXHj3O.js";import"./tag-DB5D_XjQ.js";import"./FSSpan-CCGpb4KF.js";import"./useSlots-P12pG1X5.js";import"./useTranslations-CdSqQFV3.js";import"./FSLoader--MJuLA8w.js";import"./dimensions-DyYT4L19.js";import"./elevation-Ben4zuE4.js";import"./locale-C-s_GJlL.js";import"./VSpacer-DvdcLDtW.js";import"./FSDataTableUI-C7faQcjJ.js";import"./vue-router-BhvpcqFa.js";import"./uuid-DTaye2KM.js";import"./FSCheckbox-M73AcfXp.js";import"./useRules-B3HKjmia.js";import"./VSelectionControl-DxF8PKcC.js";import"./density-CDPzHPmZ.js";import"./VIcon-BQIm0b3J.js";import"./proxiedModel-Bq4wip6p.js";import"./index-DPxysH4G.js";import"./VLabel-Zg457A-5.js";import"./VInput-CdqyKCcu.js";import"./index-DwLKzfXL.js";import"./transition-CNA6wh-m.js";import"./form-B61Sg6X-.js";import"./FSText-BN3VvfV9.js";import"./FSSearchField-BTP0Kv2l.js";import"./FSTextField-VVHNKRY7.js";import"./FSBaseField-CEXO2T_h.js";import"./FSButton-CzT4qk-w.js";import"./VField-C6F5sWZK.js";import"./loader-C8KBePTS.js";import"./anchor-D9N-895C.js";import"./rounded-Dg8mz8II.js";import"./VDefaultsProvider-Xljcdv6D.js";import"./forwardRefs-DWGaNmQL.js";import"./index-D_lBla-s.js";import"./FSSelectField-DbrO_Qw0.js";import"./FSDialogMenu-Bh07lE_k.js";import"./VDialog-D9Xzq_RJ.js";import"./VOverlay-Cw3wN5kj.js";import"./display-BMkR1-zV.js";import"./lazy-CAOrKziU.js";import"./router-D2IrSaAD.js";import"./FSSlideGroup-B39qfVC2.js";import"./group-CBCTR8u6.js";import"./FSToggleSet-TMm1inSD.js";import"./FSWrapGroup-BrAfZF5Z.js";import"./FSFadeOut-Chaq66Nt.js";import"./FSRadio-BXbOdhye.js";import"./VList-DYIPcJ7R.js";import"./ssrBoot-SGvAq9J5.js";import"./border-DsbQ0vt7.js";import"./VImg-BL_hkJAm.js";import"./VSelect-CIcDcVs4.js";import"./VMenu-Cfqut3Fx.js";import"./FSDivider-CW2X6WDB.js";import"./FSChip-CZ8TO10U.js";import"./FSOptionGroup-BeYA2w7U.js";import"./filter-C1K_d8Vd.js";import"./VBtn-B3SFyF18.js";import"./filter-DuGNEgHB.js";import"./base-1FyQZYnT.js";import"./useAppOrganisationId-BfPsGMlN.js";import"./serviceFactory-Bd5jifNi.js";import"./composableFactory-wHNy9kQa.js";import"./FSTag-CA-pAfrN.js";import"./FSImageUI-NfwyqzmC.js";import"./useImages-H1Zoj8aR.js";import"./base-CmdGny12.js";import"./chartSerie-CU1F_Cev.js";import"./timeRange-DtWQBHMx.js";import"./index-3zl-tJp_.js";const S=$({name:"FSBaseChartOrganisationTypesList",components:{FSChartTileUI:U,FSDataTable:O,FSTagGroup:M,FSImage:z,FSIcon:d},props:{modelValue:{type:Array,default:()=>[],required:!1},chartOrganisationFilters:{type:Object,required:!1,default:null},plotPer:{type:Number,required:!1,default:T.None},tableCode:{type:String,required:!0},itemTo:{type:Function,required:!1}},emits:["update:modelValue"],setup(e){const{entities:n,fetching:u,getMany:l}=A(),g=r=>e.modelValue.includes(r),c=()=>{e.plotPer===T.None?l(e.chartOrganisationFilters):l({...e.chartOrganisationFilters,plotPer:e.plotPer})};return B(()=>[e.chartOrganisationFilters,e.plotPer],(r,o)=>{(!r&&!o||!_.isEqual(r,o))&&c()},{immediate:!0}),{ColorEnum:R,fetchingChartOrganisationTypes:u,chartOrganisationTypes:n,isSelected:g}}});function J(e,n,u,l,g,c){const r=m("FSImage"),o=m("FSTagGroup"),P=m("FSChartTileUI"),L=m("FSDataTable");return f(),y(L,v({items:e.chartOrganisationTypes,itemTo:e.$props.itemTo,loading:e.fetchingChartOrganisationTypes,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,"onUpdate:modelValue":n[0]||(n[0]=t=>e.$emit("update:modelValue",t))},e.$attrs),q({"header.imageId-title":a(()=>[i(d,null,{default:a(()=>[h(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":a(({item:t})=>[i(d,null,{default:a(()=>[h(E(t.icon),1)]),_:2},1024)]),"item.imageId":a(({item:t})=>[t.imageId?(f(),y(r,{key:0,height:"32px",width:"32px",imageId:t.imageId},null,8,["imageId"])):G("",!0)]),"item.tags":a(({item:t})=>[i(o,{variant:"slide",editable:!1,tags:t.tags},null,8,["tags"])]),"item.modelsLabels":a(({item:t})=>[i(o,{editable:!1,tags:t.modelsLabels.map(s=>s.label)},null,8,["tags"])]),"item.tile":a(({item:t})=>[i(P,{label:t.label,"category-label":t.chartCategoryLabel,icon:t.icon,imageId:t.imageId,type:t.chartType,to:e.$props.itemTo&&e.$props.itemTo(t)},null,8,["label","category-label","icon","imageId","type","to"])]),_:2},[N(e.$slots,(t,s)=>({name:s,fn:a(V=>[D(e.$slots,s,w(k(V)))])}))]),1040,["items","itemTo","loading","tableCode","modelValue"])}const I=j(S,[["render",J]]);S.__docgenInfo={displayName:"FSBaseChartOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"plotPer",type:{name:"PlotPer"},required:!1,defaultValue:{func:!1,value:"PlotPer.None"}},{name:"tableCode",type:{name:"string"},required:!0},{name:"itemTo",type:{name:"(item: ChartOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/chartOrganisationTypes/FSBaseChartOrganisationTypesList.vue"]};const Bt={title:"Foundation/Core/Lists/Base Lists/BaseChartOrganisationTypesList",component:I,subcomponents:{FSDataTable:O},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["chartOrganisationTypes1"]}}},p={render:e=>({components:{FSBaseChartOrganisationTypesList:I},setup(){return{args:e}},template:`
      <FSBaseChartOrganisationTypesList
        :tableCode="args.tableCode"
      />
    `}),args:{tableCode:"chartOrganisationTypes1"}};var C,F,b;p.parameters={...p.parameters,docs:{...(C=p.parameters)==null?void 0:C.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartOrganisationTypesList
        :tableCode="args.tableCode"
      />
    \`
  }),
  args: {
    tableCode: 'chartOrganisationTypes1'
  }
}`,...(b=(F=p.parameters)==null?void 0:F.docs)==null?void 0:b.source}}};const qt=["Default"];export{p as Default,qt as __namedExportsOrder,Bt as default};
