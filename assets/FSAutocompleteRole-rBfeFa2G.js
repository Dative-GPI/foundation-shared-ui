var D=Object.defineProperty;var G=(e,o,i)=>o in e?D(e,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[o]=i;var t=(e,o,i)=>G(e,typeof o!="symbol"?o+"":o,i);import{d as j,c as p,y as T,z as R,A as b,B as r,m as z,E as Y,G as W,D as H,L as g,M as J,P as K}from"./vue.esm-bundler--l9E1zCM.js";import{F as Q}from"./FSAutocompleteField-xyQweoxe.js";import{F}from"./FSButton-DC-WKUnK.js";import{F as X}from"./FSChip-Jt6fKE9B.js";import{_ as S}from"./FSIcon-CA5AHnUB.js";import{P as I}from"./permissionInfos-BPDgTHQl.js";import{C}from"./base-BcjN1n8z.js";import{S as V}from"./serviceFactory-Bd5jifNi.js";import{C as N}from"./composableFactory-BJn24iiy.js";import{u as Z}from"./useAutocomplete-BK0ibAFa.js";import{C as m}from"./useColors-Na5M-jYy.js";import{u as A}from"./useTranslations-ByKtt_-5.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";var l=(e=>(e[e.None=0]="None",e[e.Organisation=1]="Organisation",e[e.OrganisationType=2]="OrganisationType",e))(l||{});class _{constructor(o){t(this,"id");t(this,"roleId");t(this,"organisationId");t(this,"scope");t(this,"userType");t(this,"icon");t(this,"code");t(this,"label");t(this,"tags");t(this,"permissions");this.id=o.id,this.roleId=o.roleId,this.organisationId=o.organisationId,this.scope=o.scope,this.userType=o.userType,this.icon=o.icon,this.code=o.code,this.label=o.label,this.tags=o.tags.slice(),this.permissions=o.permissions.map(i=>new I(i))}}class ee extends _{constructor(i){super(i);t(this,"description");this.description=i.description}}class ${constructor(o){t(this,"id");t(this,"roleId");t(this,"organisationTypeId");t(this,"organisationTypeLabel");t(this,"scope");t(this,"userType");t(this,"icon");t(this,"code");t(this,"label");t(this,"tags");t(this,"permissions");this.id=o.id,this.roleId=o.roleId,this.organisationTypeId=o.organisationTypeId,this.organisationTypeLabel=o.organisationTypeLabel,this.scope=o.scope,this.userType=o.userType,this.scope=o.scope,this.userType=o.userType,this.icon=o.icon,this.code=o.code,this.label=o.label,this.tags=o.tags.slice(),this.permissions=o.permissions.map(i=>new I(i))}}class oe extends ${constructor(i){super(i);t(this,"description");this.description=i.description}}const q=()=>`${C()}/role-organisations`,te=e=>`${q()}/${encodeURIComponent(e)}`,L=()=>`${C()}/role-organisation-types`,ne=e=>`${L()}/${encodeURIComponent(e)}`,ae=new V("roleOrganisation",ee).createComplete(q,te,_),ie=N.getMany(ae),le=new V("roleOrganisationType",oe).create(e=>e.build(e.addGet(ne),e.addGetMany(L,$),e.addNotify())),se=N.getMany(le),{$tr:y}=A(),re=e=>{switch(e){case l.None:return y("ui.role-type.none","None");case l.Organisation:return y("ui.role-type.organisation","Custom");case l.OrganisationType:return y("ui.role-type.organisation-type","Shared")}},ue=e=>{switch(e){case l.None:return m.Error;case l.Organisation:return m.Primary;case l.OrganisationType:return m.Warning}},v=j({name:"FSAutocompleteRole",components:{FSAutocompleteField:Q,FSButton:F,FSChip:X,FSIcon:S},props:{roleOrganisationTypeFilters:{type:Object,required:!1,default:null},roleOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:l.None},ignoreRoleOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreRoleOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue","update:type"],setup(e,{emit:o}){const{getMany:i,fetching:f,entities:O}=se(),{getMany:h,fetching:u,entities:c}=ie(),{$tr:n}=A(),d=p(()=>O.value.map(a=>({id:a.id,icon:a.icon,label:a.label,type:l.OrganisationType})).concat(c.value.map(a=>({id:a.id,icon:a.icon,label:a.label,type:l.Organisation})))),U=p(()=>P.value&&(f.value||u.value)),E=p(()=>e.multiple&&e.modelValue?n("ui.autocomplete-role.placeholder","{0} role(s) selected",e.modelValue.length):null),w=a=>{Array.isArray(a)?(o("update:modelValue",a.map(s=>s.id)),o("update:type",a.map(s=>s.type))):(o("update:modelValue",a==null?void 0:a.id),o("update:type",a==null?void 0:a.type))},B=a=>{const s=[];return e.ignoreRoleOrganisations||s.push(h({...e.roleOrganisationFilters,search:a??void 0})),e.ignoreRoleOrganisationTypes||s.push(i({...e.roleOrganisationTypeFilters,search:a??void 0})),Promise.all(s)},{toggleSet:M,init:P,onUpdate:k}=Z(d,[()=>e.roleOrganisationTypeFilters,()=>e.roleOrganisationFilters],o,B,w);return{placeholder:E,toggleSet:M,RoleType:l,loading:U,roles:d,roleTypeColor:ue,roleTypeLabel:re,onUpdate:k}}});function ce(e,o,i,f,O,h){const u=T("FSChip"),c=T("FSAutocompleteField");return R(),b(c,z({toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.roles,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":r(({item:n})=>[n.icon?(R(),b(S,{key:0},{default:r(()=>[Y(W(n.icon),1)]),_:2},1024)):H("",!0)]),"item-append":r(({item:n})=>[g(u,{color:e.roleTypeColor(n.type),label:e.roleTypeLabel(n.type),editable:!1},null,8,["color","label"])]),"toggle-set-item":r(n=>[g(F,{prependIcon:n.item.icon,variant:n.getVariant(n.item),color:n.getColor(n.item),class:K(n.getClass(n.item)),label:n.item.label,onClick:d=>n.toggle(n.item)},J({_:2},[n.item.type?{name:"append",fn:r(()=>[g(u,{color:e.roleTypeColor(n.item.type),label:e.roleTypeLabel(n.item.type),editable:!1},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const Ce=x(v,[["render",ce]]);v.__docgenInfo={displayName:"FSAutocompleteRole",exportName:"default",description:"",tags:{},props:[{name:"roleOrganisationTypeFilters",type:{name:"RoleOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"roleOrganisationFilters",type:{name:"RoleOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"RoleType[] | RoleType"},required:!1,defaultValue:{func:!1,value:"RoleType.None"}},{name:"ignoreRoleOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreRoleOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteRole.vue"]};export{Ce as F};
