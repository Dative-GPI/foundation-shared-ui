import{a as q,b as _}from"./properties-Qw-O9fbT.js";import{F as v}from"./FSAutocompleteField-D0xJEWg5.js";import{d as k,c as f,B as c,E as n,m as B,I as g,J as D,z as F,G as N,D as U,H as E}from"./vue.esm-bundler-BB--BfRN.js";import{F as h}from"./FSButton-DEqhqb0b.js";import{F as T}from"./FSChip-fXKFC3cO.js";import{u as w}from"./useDataDefinitions-BFJWXHl7.js";import{u as z}from"./useAutocomplete-Cwzj1BuR.js";import{u as I}from"./useTranslations-DvAhn7XV.js";import{_ as M}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as O}from"./VAutocomplete-vWo0A3-1.js";import"./FSSearchField-CJDKUSod.js";import"./FSTextField-DmCfYujO.js";import"./FSBaseField-BxMUaAXJ.js";import"./FSSpan-BndtI8AP.js";import"./useBreakpoints-f5uwzDhq.js";import"./useSlots-COLyvmal.js";import"./FSCol-BU2zndN-.js";import"./css-DoweNwVf.js";import"./FSRow-Bdc52rY8.js";import"./useColors-CeWNZtds.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-BwQCEo_4.js";import"./useRules-CSYFw_Ue.js";import"./VField-COyetWuv.js";import"./index-9ysw5oGg.js";import"./color-DIvEt_AX.js";import"./transition-GJJG9yri.js";import"./VLabel-Cmax-_yp.js";import"./VInput-BfMi-lTR.js";import"./locale-CSWC84Vq.js";import"./VIcon-Cl87HT90.js";import"./density-Xpr_P7nk.js";import"./dimensions-DwY9cRwZ.js";import"./proxiedModel-DMSSa4ZW.js";import"./loader-BKsf8Js6.js";import"./VProgressCircular-DNr7n8jG.js";import"./resizeObserver-CgHguIgR.js";import"./anchor-C8ooBn8e.js";import"./rounded-BKWlZxOJ.js";import"./VDefaultsProvider-BK3j_XEC.js";import"./forwardRefs-DWGaNmQL.js";import"./index--Ye8kcMr.js";import"./VList-CAfJ4PqY.js";import"./FSCard-CiGLNn7K.js";import"./VDialog-bMbnstsA.js";import"./VOverlay-B758aeer.js";import"./display-DzHu_6W3.js";import"./scopeId-NiaFRIZK.js";import"./router-WJHyAZQ9.js";import"./ssrBoot-DNxkCF-9.js";import"./border-TZTDiA6n.js";import"./elevation-S_BtbnzN.js";import"./index-8zgUIpZ9.js";import"./VImg-DcLzuYY5.js";import"./FSSlideGroup-DLHspItq.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BwHgwEym.js";import"./VSlideGroupItem-BI1OJQNm.js";import"./group-C8GVwDAJ.js";import"./FSToggleSet-D12Sjar_.js";import"./FSWrapGroup-TGBfJRdY.js";import"./FSCheckbox-ti2pWVdy.js";import"./FSIcon-BKav6CVU.js";import"./VSelectionControl-KO2lf4xS.js";import"./FSFadeOut-BS7VKwj1.js";import"./FSLoader-Cf5HtYZd.js";import"./FSRadio-C1kBTUbb.js";import"./VSelect-fihYAFHR.js";import"./VMenu-DdabqpBj.js";import"./filter-Cz8pNtBH.js";import"./FSRouterLink-DUWl7Aiu.js";import"./vue-router-CibjbVOv.js";import"./FSClickable-CwRD7A4m.js";import"./base-CiabG-44.js";import"./useAppOrganisationId-D3b8yxVY.js";import"./composableFactory-DwIj5O2m.js";import"./serviceFactory-aQiBqOvf.js";import"./lodash-Zo30T2Bj.js";import"./filter-CD3PNNcP.js";import"./index-Edu8gKo6.js";import"./theme-DmYH_9cW.js";import"./color-_MC-k_Ht.js";import"./icons-uq6MP7TZ.js";import"./transition-DZp2iMgR.js";import"./VInput-CQYyf-r7.js";import"./dimensions-BAUR_ret.js";import"./proxiedModel-rns-67Pb.js";import"./VMenu-DSF3kjsm.js";import"./display-CR2jF3WC.js";import"./lazy-ChoNvvLL.js";import"./goto-DID-upFE.js";import"./VDivider-C9qGuLQ6.js";import"./group-CTcEv9zC.js";const y=k({name:"FSAutocompleteDataDefinition",components:{FSAutocompleteField:v,FSButton:h,FSChip:T},props:{dataDefinitionFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update:modelValue"],setup(e,{emit:m}){const{getMany:p,fetching:s,entities:r}=w(),{$tr:u}=I(),o=f(()=>A.value&&s.value),l=f(()=>e.multiple&&e.modelValue?u("autocomplete.data-definition.placeholder","{0} data definition(s) selected",e.modelValue.length):null),t=$=>p({...e.dataDefinitionFilters,search:$??void 0}),{toggleSet:d,init:A,onUpdate:C}=z(r,[()=>e.dataDefinitionFilters],m,t);return{dataDefinitions:r,placeholder:l,toggleSet:d,loading:o,onUpdate:C}}});function j(e,m,p,s,r,u){const o=g("FSChip"),l=g("FSAutocompleteField");return D(),c(l,B({label:e.$props.label??e.$tr("ui.common.data-definition","Data"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,items:e.dataDefinitions,loading:e.loading,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-append":n(({item:t})=>[t.unit?(D(),c(o,{key:0,label:t.unit},null,8,["label"])):E("",!0)]),"toggle-set-item":n(t=>[F(h,{variant:t.getVariant(t.item),color:t.getColor(t.item),class:N(t.getClass(t.item)),label:t.item.label,onClick:d=>t.toggle(t.item)},U({_:2},[t.item.unit?{name:"append",fn:n(()=>[F(o,{label:t.item.unit},null,8,["label"])]),key:"0"}:void 0]),1032,["variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","items","loading","modelValue","onUpdate:modelValue"])}const a=M(y,[["render",j]]);y.__docgenInfo={displayName:"FSAutocompleteDataDefinition",exportName:"default",description:"",tags:{},props:[{name:"dataDefinitionFilters",type:{name:"DataDefinitionFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteDataDefinition.vue"]};const qt={title:"Foundation/Core/Autocompletes/AutocompleteDataDefinition",component:a,tags:["autodocs"],argTypes:{..._([v,O],a),...q(a)}},i={render:e=>({components:{FSAutocompleteDataDefinition:a},setup(){return{args:e}},template:`
    <FSAutocompleteDataDefinition
      v-model="args.modelValue"
      v-bind="args"
    />`}),args:{modelValue:[]}};var S,V,b;i.parameters={...i.parameters,docs:{...(S=i.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteDataDefinition
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteDataDefinition
      v-model="args.modelValue"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: []
  }
}`,...(b=(V=i.parameters)==null?void 0:V.docs)==null?void 0:b.source}}};const _t=["Default"];export{i as Default,_t as __namedExportsOrder,qt as default};
