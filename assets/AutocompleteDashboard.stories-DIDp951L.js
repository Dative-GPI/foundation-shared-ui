import{a as L,b as P}from"./properties-Qw-O9fbT.js";import{F as C}from"./FSAutocompleteField-BQ-Sh4VM.js";import{d as z,c as u,B as S,E as l,m as G,I as V,J as O,k as c,G as H,D as J,H as K,A as Q,K as R}from"./vue.esm-bundler-CocPPKUI.js";import{F as w}from"./FSButton-B9T3D7JL.js";import{F as W}from"./FSChip-CNOL3owI.js";import{F as $}from"./FSIcon-BGuuL0jz.js";import{u as X}from"./useDashboardOrganisationTypes-DR5U0Sx5.js";import{u as Y}from"./useDashboardOrganisations-CngKwlYR.js";import{u as Z}from"./useDashboardShallows-Db-MKY3G.js";import{d as x,a as ee}from"./dashboards-DTFs4iqf.js";import{D as i}from"./dashboards-JSNI7pIu.js";import{u as ae}from"./useAutocomplete-_-lhaEIP.js";import{u as oe}from"./useTranslations-DJaIYmO0.js";import{_ as te}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as re}from"./VAutocomplete-DTXEYHwv.js";import"./FSSearchField-B7EQWc-4.js";import"./FSTextField-CdmKROte.js";import"./FSBaseField-Cn3A38Ti.js";import"./FSSpan-CKhKq6E1.js";import"./useBreakpoints-DZlz3-56.js";import"./useSlots-D4bv69lA.js";import"./FSCol-79-COv64.js";import"./css-mt76hoAn.js";import"./FSRow-BvJ7lU5E.js";import"./useColors-C1aD-Kb6.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-C1Gcptw7.js";import"./useRules-C3-AmzzE.js";import"./VField-C42QHTgn.js";import"./index-hd-xIizf.js";import"./color-D50-hVV_.js";import"./transition-bMLtH-b3.js";import"./VLabel-yrR5w-fx.js";import"./VInput-JSCg5nQs.js";import"./locale-_fONYh-8.js";import"./VIcon-ZjKwFcqe.js";import"./density-2KuMGYl6.js";import"./dimensions-Cv9Fwl7U.js";import"./proxiedModel-DW1FRKBO.js";import"./loader-BDqRCawj.js";import"./VProgressCircular-k_tOz5gX.js";import"./resizeObserver-DDOqpSMx.js";import"./anchor-D4EnoweD.js";import"./rounded-CBYChxif.js";import"./VDefaultsProvider-CV4ffwSK.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-5LM_ZUPq.js";import"./FSDialogMenu-CqfE7T6V.js";import"./FSCard-2KUMcI8D.js";import"./VDialog-BOSWAwdu.js";import"./VOverlay-C9rlmtj8.js";import"./display-23tZl-3U.js";import"./lazy-Dahsm7lL.js";import"./router-CKzlklLc.js";import"./scopeId-BfaO37qo.js";import"./FSSlideGroup-BoaCkdx0.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BjCs89jV.js";import"./VSlideGroupItem-nAYd2StP.js";import"./group-MFxThiWx.js";import"./FSToggleSet-mQm74CcI.js";import"./FSWrapGroup-DXlgsE59.js";import"./FSCheckbox-MGAv1q-u.js";import"./VCheckboxBtn-CRTq-u2o.js";import"./VSelectionControl-t1Q43Tu7.js";import"./index-BwBNp3ym.js";import"./FSFadeOut-BcV7cYL5.js";import"./FSLoader-JpoH2mis.js";import"./elevation-DUhGVECn.js";import"./FSRadio-D7UyW-G6.js";import"./VSelect-CDoqko5t.js";import"./VList-7u5M4k2B.js";import"./ssrBoot-B-cFki3l.js";import"./border-ZP5ArpGv.js";import"./VImg-C2WY2bzk.js";import"./VMenu-DVt-HGrP.js";import"./filter-ROZ4nnRZ.js";import"./FSRouterLink-CitgaMwY.js";import"./vue-router-BKog_lZN.js";import"./FSClickable-CqIDwjuA.js";import"./dashboardTranslation-DZd3-N0v.js";import"./useAppLanguageCode-yNRdweo3.js";import"./lodash-Zo30T2Bj.js";import"./base-D6U4mRRi.js";import"./useAppOrganisationId-DacmST4-.js";import"./composableFactory-DRFDSLtA.js";import"./serviceFactory-aQiBqOvf.js";import"./pathCrumb-Db-cq5HI.js";import"./filter-B7pVrSt4.js";import"./index-Dkbga0Ie.js";import"./theme-B39arTiS.js";import"./color-D1vYnx_2.js";import"./icons-Dov6OaoO.js";import"./transition-B328Eg1E.js";import"./VInput-Chh38OGB.js";import"./dimensions-DJwcxcc2.js";import"./proxiedModel-B74GSU57.js";import"./VMenu-DixSVXKO.js";import"./display-5pTM_NlN.js";import"./lazy-Cbre06Jd.js";import"./goto-CQdQDFg4.js";import"./VDivider-DShFabDb.js";import"./group-BqVdRiUv.js";const v=z({name:"FSAutocompleteDashboard",components:{FSAutocompleteField:C,FSButton:w,FSChip:W,FSIcon:$},props:{dashboardOrganisationTypeFilters:{type:Object,required:!1,default:null},dashboardOrganisationFilters:{type:Object,required:!1,default:null},dashboardShallowFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:i.None},ignoreDashboardOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreDashboardOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(a,{emit:t}){const{getMany:f,fetching:b,entities:g}=X(),{getMany:h,fetching:n,entities:m}=Y(),{getMany:o,fetching:y,entities:N}=Z(),{$tr:k}=oe(),D=u(()=>g.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.OrganisationType})).concat(m.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.Organisation}))).concat(N.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.Shallow})))),B=u(()=>j.value&&(b.value||n.value||y.value)),M=u(()=>a.multiple&&a.modelValue?k("autocomplete.dashboard.placeholder","{0} dashboard(s) selected",a.modelValue.length):null),I=e=>{if(Array.isArray(e)){const r=e.map(d=>d.id),F=e.map(d=>d.type);t("update:modelValue",r),t("update:type",F),t("update",{modelValue:r,type:F})}else t("update:modelValue",e==null?void 0:e.id),t("update:type",e==null?void 0:e.type),t("update",{modelValue:e==null?void 0:e.id,type:e==null?void 0:e.type})},_=e=>{const r=[];return a.ignoreDashboardOrganisationTypes||r.push(f({...a.dashboardOrganisationTypeFilters,search:e??void 0})),a.ignoreDashboardOrganisations||(r.push(h({...a.dashboardOrganisationFilters,search:e??void 0})),r.push(o({...a.dashboardShallowFilters,search:e??void 0}))),Promise.all(r)},{toggleSet:U,init:j,onUpdate:E}=ae(D,[()=>a.dashboardOrganisationTypeFilters,()=>a.dashboardOrganisationFilters,()=>a.dashboardShallowFilters],t,_,I);return{placeholder:M,dashboards:D,toggleSet:U,loading:B,dashboardTypeColor:ee,dashboardTypeLabel:x,onUpdate:E}}});function le(a,t,f,b,g,h){const n=V("FSChip"),m=V("FSAutocompleteField");return O(),S(m,G({label:a.$props.label??a.$tr("ui.common.dashboard","Dashboard"),toggleSet:!a.$props.toggleSetDisabled&&a.toggleSet,multiple:a.$props.multiple,placeholder:a.placeholder,items:a.dashboards,loading:a.loading,modelValue:a.$props.modelValue,"onUpdate:modelValue":a.onUpdate},a.$attrs),{"item-prepend":l(({item:o})=>[o.icon?(O(),S($,{key:0},{default:l(()=>[Q(R(o.icon),1)]),_:2},1024)):K("",!0)]),"item-append":l(({item:o})=>[c(n,{color:a.dashboardTypeColor(o.type),label:a.dashboardTypeLabel(o.type)},null,8,["color","label"])]),"toggle-set-item":l(o=>[c(w,{prependIcon:o.item.icon,variant:o.getVariant(o.item),color:o.getColor(o.item),class:H(o.getClass(o.item)),label:o.item.label,onClick:y=>o.toggle(o.item)},J({_:2},[o.item.type?{name:"append",fn:l(()=>[c(n,{color:a.dashboardTypeColor(o.item.type),label:a.dashboardTypeLabel(o.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","items","loading","modelValue","onUpdate:modelValue"])}const p=te(v,[["render",le]]);v.__docgenInfo={displayName:"FSAutocompleteDashboard",exportName:"default",description:"",tags:{},props:[{name:"dashboardOrganisationTypeFilters",type:{name:"DashboardOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardOrganisationFilters",type:{name:"DashboardOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardShallowFilters",type:{name:"DashboardShallowFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"DashboardType[] | DashboardType"},required:!1,defaultValue:{func:!1,value:"DashboardType.None"}},{name:"ignoreDashboardOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreDashboardOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteDashboard.vue"]};const to={title:"Foundation/Core/Autocompletes/AutocompleteDashboard",component:p,tags:["autodocs"],argTypes:{...P([C,re],p),...L(p)}},s={render:a=>({components:{FSAutocompleteDashboard:p},setup(){return{args:a}},template:`
    <FSAutocompleteDashboard
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:i.None}};var T,q,A;s.parameters={...s.parameters,docs:{...(T=s.parameters)==null?void 0:T.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteDashboard
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteDashboard
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: DashboardType.None
  }
}`,...(A=(q=s.parameters)==null?void 0:q.docs)==null?void 0:A.source}}};const ro=["Default"];export{s as Default,ro as __namedExportsOrder,to as default};
