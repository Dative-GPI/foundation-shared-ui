import{f as j,g as s,M as d,A as k,E as g,F as x,G as i,W as p,K as C,L as S,R as $,I as q,S as H}from"./vue.esm-bundler-838daa40.js";import{_ as A}from"./FSIcon-f74a02b4.js";import{_ as I}from"./FSSpan-3df08200.js";import{_ as w}from"./FSCol-44fe82a9.js";import{_ as O}from"./FSRow-753b58e5.js";import{C as h,u as J}from"./useColors-4ac7c452.js";import{u as Q}from"./useRules-cda8e231.js";import{_ as X}from"./_plugin-vue_export-helper-c27b6911.js";import{m as Y,V as P}from"./VSelectionControl-b5e8c167.js";import{I as Z}from"./tag-d73e64d5.js";import{u as F}from"./proxiedModel-3239cc3c.js";import{p as R,A as N,o as ee,K as ae}from"./theme-f9f3e2d4.js";import{g as E,u as M}from"./useRender-f6a4770d.js";import{m as oe,u as le,V as B}from"./VInput-5523e371.js";const T=j({name:"FSCheckbox",components:{FSIcon:A,FSSpan:I,FSCol:w,FSRow:O},props:{label:{type:String,required:!1,default:null},description:{type:String,required:!1,default:null},modelValue:{type:Boolean,required:!1,default:!1},indeterminate:{type:Boolean,required:!1,default:!1},color:{type:String,required:!1,default:h.Primary},rules:{type:Array,required:!1,default:()=>[]},messages:{type:Array,required:!1,default:null},editable:{type:Boolean,required:!1,default:!0}},emits:["update:modelValue"],setup(e,{emit:t}){const{validateOn:c,blurred:a,getMessages:o}=Q(),{getColors:l}=J(),n=s(()=>l(e.color)),m=l(h.Error),r=l(h.Light),u=l(h.Dark),V=s(()=>e.editable?f.value.length?{"--fs-checkbox-cursor":"pointer","--fs-checkbox-checkbox-color":m.base,"--fs-checkbox-color":u.base}:{"--fs-checkbox-cursor":"pointer","--fs-checkbox-checkbox-color":e.modelValue||e.indeterminate?n.value.base:u.base,"--fs-checkbox-color":u.base}:{"--fs-checkbox-cursor":"default","--fs-checkbox-checkbox-color":e.modelValue||e.indeterminate?n.value.light:r.base,"--fs-checkbox-color":r.dark}),y=s(()=>e.modelValue?"mdi-checkbox-marked":e.indeterminate?"mdi-minus-box":"mdi-checkbox-blank-outline"),v=s(()=>e.modelValue?"text-button":"text-body"),f=s(()=>e.messages??o(e.modelValue,e.rules));return{validateOn:c,messages:f,blurred:a,style:V,icon:y,font:v,onToggle:()=>{e.editable&&t("update:modelValue",!e.modelValue)}}}});const U=R({indeterminate:Boolean,indeterminateIcon:{type:Z,default:"$checkboxIndeterminate"},...Y({falseIcon:"$checkboxOff",trueIcon:"$checkboxOn"})},"VCheckboxBtn"),_=E()({name:"VCheckboxBtn",props:U(),emits:{"update:modelValue":e=>!0,"update:indeterminate":e=>!0},setup(e,t){let{slots:c}=t;const a=F(e,"indeterminate"),o=F(e,"modelValue");function l(r){a.value&&(a.value=!1)}const n=s(()=>a.value?e.indeterminateIcon:e.falseIcon),m=s(()=>a.value?e.indeterminateIcon:e.trueIcon);return M(()=>{const r=N(P.filterProps(e),["modelValue"]);return d(P,k(r,{modelValue:o.value,"onUpdate:modelValue":[u=>o.value=u,l],class:["v-checkbox-btn",e.class],style:e.style,type:"checkbox",falseIcon:n.value,trueIcon:m.value,"aria-checked":a.value?"mixed":void 0}),c)}),{}}}),te=R({...oe(),...N(U(),["inline"])},"VCheckbox"),se=E()({name:"VCheckbox",inheritAttrs:!1,props:te(),emits:{"update:modelValue":e=>!0,"update:focused":e=>!0},setup(e,t){let{attrs:c,slots:a}=t;const o=F(e,"modelValue"),{isFocused:l,focus:n,blur:m}=le(e),r=ee(),u=s(()=>e.id||`checkbox-${r}`);return M(()=>{const[V,y]=ae(c),v=B.filterProps(e),f=_.filterProps(e);return d(B,k({class:["v-checkbox",e.class]},V,v,{modelValue:o.value,"onUpdate:modelValue":b=>o.value=b,id:u.value,focused:l.value,style:e.style}),{...a,default:b=>{let{id:D,messagesId:z,isDisabled:K,isReadonly:L,isValid:G}=b;return d(_,k(f,{id:D.value,"aria-describedby":z.value,disabled:K.value,readonly:L.value},y,{error:G.value===!1,modelValue:o.value,"onUpdate:modelValue":W=>o.value=W,onFocus:n,onBlur:m}),a)}})}),{}}});function ne(e,t,c,a,o,l){return g(),x(w,{width:"hug"},{default:i(()=>[d(se,k({class:"fs-stopclick","hide-details":"",ripple:!1,rules:e.$props.rules,validateOn:e.validateOn,modelValue:e.$props.modelValue,onClick:H(e.onToggle,["prevent","stop"]),onBlur:t[0]||(t[0]=n=>e.blurred=!0)},e.$attrs),{input:i(()=>[d(O,{align:"center-left",width:"hug",style:p(e.style)},{default:i(()=>[d(A,{class:"fs-checkbox",size:"l",style:p(e.style)},{default:i(()=>[C(S(e.icon),1)]),_:1},8,["style"]),$(e.$slots,"default",{},()=>[e.$props.label?(g(),x(I,{key:0,class:"fs-checkbox-label",style:p(e.style),font:e.font},{default:i(()=>[C(S(e.$props.label),1)]),_:1},8,["style","font"])):q("",!0)])]),_:3},8,["style"])]),_:3},16,["rules","validateOn","modelValue","onClick"]),$(e.$slots,"description",{},()=>[e.$props.description?(g(),x(I,{key:0,class:"fs-checkbox-description",font:"text-underline",style:p(e.style)},{default:i(()=>[C(S(e.$props.description),1)]),_:1},8,["style"])):q("",!0)])]),_:3})}const ge=X(T,[["render",ne]]);T.__docgenInfo={displayName:"FSCheckbox",exportName:"default",description:"",tags:{},props:[{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"description",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"indeterminate",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"color",type:{name:"ColorBase"},required:!1,defaultValue:{func:!1,value:"ColorEnum.Primary"}},{name:"rules",type:{name:"any[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"messages",type:{name:"string[]"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}}],events:[{name:"update:modelValue"}],slots:[{name:"default"},{name:"description"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/shared/foundation-shared-components/components/FSCheckbox.vue"]};export{ge as F,_ as V};
