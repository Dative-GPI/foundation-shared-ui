var T=Object.defineProperty;var q=(e,o,t)=>o in e?T(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t;var r=(e,o,t)=>q(e,typeof o!="symbol"?o+"":o,t);import{a as E,b as N}from"./properties-Qw-O9fbT.js";import{F as R}from"./FSAutocompleteField-RKAWvs8y.js";import{d as U,c as d,B as g,E as f,m as D,I as B,J as S,H as L,A as k,K as w}from"./vue.esm-bundler-CqZ6aK3I.js";import{F}from"./FSIcon-I_C15xQX.js";import{P as M}from"./permissionInfos-BPDgTHQl.js";import{C as P}from"./base-B6WxqUqv.js";import{C as i}from"./composableFactory-BJClBu0g.js";import{S as G}from"./serviceFactory-aQiBqOvf.js";import{u as j}from"./useAutocomplete-ChHa55tX.js";import{u as H}from"./useTranslations-D4m4SVfo.js";import{_ as J}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as K}from"./VAutocomplete-DSCglJQB.js";import"./FSSearchField-Cs8evTDQ.js";import"./FSTextField-4RgpTJ2W.js";import"./FSBaseField-eUR0iGRU.js";import"./FSSpan-B7HDTlg9.js";import"./useBreakpoints-DMrtgY61.js";import"./useSlots-BgbXyH5p.js";import"./FSCol-DIPgj7wU.js";import"./css-BZjDzSZ1.js";import"./FSRow-udQVJR1p.js";import"./useColors-BIkRBR7C.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DfSX31J9.js";import"./theme-CCooKRqg.js";import"./FSButton-dobeAM7X.js";import"./FSRouterLink-CyH3F3Zz.js";import"./vue-router-RJKW7Wfw.js";import"./FSClickable-Lz1AMzcf.js";import"./FSCard-BH9I8ruU.js";import"./VProgressCircular-DDVR-EZI.js";import"./color-6mal3hP4.js";import"./resizeObserver-C7qOORSR.js";import"./VIcon-beNtbbqt.js";import"./useRules-Cutg_0Yh.js";import"./VField-CIUPtZ0k.js";import"./index-BNfVP6r5.js";import"./transition-C13qRIR1.js";import"./VLabel-BhsUugfE.js";import"./VInput-XpqL7_rK.js";import"./locale-BJmdjC_5.js";import"./density-B3EUR5Bv.js";import"./dimensions-CuS7VcMO.js";import"./proxiedModel-BirLikdP.js";import"./loader-zbNw4pum.js";import"./anchor-DiyvyHyx.js";import"./rounded-T_eKj2ZY.js";import"./VDefaultsProvider-oq6rnkoo.js";import"./forwardRefs-DWGaNmQL.js";import"./index-0XvVa1kA.js";import"./VList-DEf1a9yq.js";import"./VDialog-CJ2sxo0Y.js";import"./VOverlay-CHXjpHsK.js";import"./display-Cs3Y1ygD.js";import"./scopeId-BQSHBqq_.js";import"./router-C0dK7NvB.js";import"./ssrBoot-B76fNmmB.js";import"./border-CsMm3Uu5.js";import"./elevation-DCJceMeT.js";import"./index-BSoBU6Pm.js";import"./VImg-BLvS348m.js";import"./FSSlideGroup-CD-roNbR.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-CWa-blL8.js";import"./VSlideGroupItem-BXZ5gf7q.js";import"./group-1sntWZNj.js";import"./FSToggleSet-CLEmUotz.js";import"./FSWrapGroup-doTNURkF.js";import"./FSCheckbox-BY3-VJRx.js";import"./VSelectionControl-asaj2cFo.js";import"./FSFadeOut-B817LR1t.js";import"./FSLoader-Vyt-Eyzm.js";import"./FSRadio-B7ZlHycV.js";import"./VSelect-CiPDTZ1A.js";import"./VMenu-C6lRy5En.js";import"./filter-DhzaDDBp.js";import"./useAppOrganisationId-oxTtWVij.js";import"./lodash-Zo30T2Bj.js";import"./filter-ccUc40qU.js";import"./index-9HBuTkI7.js";import"./theme-DDYe6qij.js";import"./proxiedModel-J4qoWggV.js";import"./color-9RcjjqqD.js";import"./icons-C3HzcIFd.js";import"./VMenu-CtOYTmiA.js";import"./display-DQd-Mj_g.js";import"./lazy-B941nOD5.js";import"./goto-CX5c7Ud9.js";import"./VDivider-BlCZBicT.js";class V{constructor(o){r(this,"id");r(this,"roleId");r(this,"organisationId");r(this,"userType");r(this,"icon");r(this,"code");r(this,"label");r(this,"tags");r(this,"permissions");this.id=o.id,this.roleId=o.roleId,this.organisationId=o.organisationId,this.userType=o.userType,this.icon=o.icon,this.code=o.code,this.label=o.label,this.tags=o.tags.slice(),this.permissions=o.permissions.map(t=>new M(t))}}class z extends V{constructor(t){super(t);r(this,"description");this.description=t.description}}const h=()=>`${P()}/service-account-role-organisations`,Q=e=>`${h()}/${encodeURIComponent(e)}`,n=new G("serviceAccountRoleOrganisation",z).createComplete(h,Q,V);i.get(n);const W=i.getMany(n);i.create(n);i.update(n);i.remove(n);const y=U({name:"FSAutocompleteServiceAccountRoleOrganisation",components:{FSAutocompleteField:R,FSIcon:F},props:{serviceAccountRoleOrganisationsFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update:modelValue"],setup(e,{emit:o}){const{getMany:t,fetching:c,entities:m}=W(),{$tr:u}=H(),p=d(()=>I.value&&c.value),a=d(()=>e.multiple&&e.modelValue?u("autocomplete.service-account-role.placeholder","{0} role(s) selected",e.modelValue.length):null),b=$=>t({...e.serviceAccountRoleOrganisationsFilters,search:$??void 0}),{toggleSet:C,init:I,onUpdate:_}=j(m,[()=>e.serviceAccountRoleOrganisationsFilters],o,b);return{serviceAccountRoleOrganisations:m,placeholder:a,toggleSet:C,loading:p,onUpdate:_}}});function X(e,o,t,c,m,u){const p=B("FSAutocompleteField");return S(),g(p,D({label:e.$props.label??e.$tr("ui.common.service-account-role","Service account role"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,items:e.serviceAccountRoleOrganisations,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":f(({item:a})=>[a.icon?(S(),g(F,{key:0},{default:f(()=>[k(w(a.icon),1)]),_:2},1024)):L("",!0)]),_:1},16,["label","toggleSet","items","multiple","placeholder","loading","modelValue","onUpdate:modelValue"])}const s=J(y,[["render",X]]);y.__docgenInfo={displayName:"FSAutocompleteServiceAccountRoleOrganisation",exportName:"default",description:"",tags:{},props:[{name:"serviceAccountRoleOrganisationsFilters",type:{name:"ServiceAccountRoleOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteServiceAccountRoleOrganisation.vue"]};const Uo={title:"Foundation/Core/Autocompletes/AutocompleteServiceAccountRoleOrganisation",component:s,tags:["autodocs"],argTypes:{...N([R,K],s),...E(s)}},l={render:e=>({components:{FSAutocompleteServiceAccountRoleOrganisation:s},setup(){return{args:e}},template:`
    <FSAutocompleteServiceAccountRoleOrganisation
      v-model="args.modelValue"
      v-bind="args"
    />`}),args:{modelValue:[]}};var A,v,O;l.parameters={...l.parameters,docs:{...(A=l.parameters)==null?void 0:A.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteServiceAccountRoleOrganisation
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteServiceAccountRoleOrganisation
      v-model="args.modelValue"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: []
  }
}`,...(O=(v=l.parameters)==null?void 0:v.docs)==null?void 0:O.source}}};const Do=["Default"];export{l as Default,Do as __namedExportsOrder,Uo as default};
