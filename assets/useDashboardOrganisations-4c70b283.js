import{D as r,a as l,W as b}from"./dashboardTranslation-085f0d84.js";import{P as c}from"./pathCrumb-3dbc85d5.js";import{D as g,a as I}from"./dashboardEntityPresetInfos-2fed9961.js";import{C as D}from"./base-168b8f74.js";import{S as f}from"./serviceFactory-2dfad3af.js";import{C as d}from"./composableFactory-2d4a69cc.js";class n{constructor(e){this.id=e.id,this.dashboardId=e.dashboardId,this.organisationId=e.organisationId,this.folderId=e.folderId,this.folderLabel=e.folderLabel,this.folderIcon=e.folderIcon,this.imageId=e.imageId,this.scope=e.scope,this.locked=e.locked,this.label=e.label,this.code=e.code,this.icon=e.icon,this.tags=e.tags.slice(),this.colors=e.colors.slice()}}class u extends n{constructor(e){super(e),this.labelDefault=e.labelDefault,this.path=e.path.map(t=>new c(t)).sort((t,h)=>h.index-t.index),this.translations=e.translations.map(t=>new r(t)),this.useAutoRefresh=e.useAutoRefresh,this.autoRefresh=e.autoRefresh,this.singleEntity=e.singleEntity,this.entityPresetCode=e.entityPresetCode,this.datePresetCode=e.datePresetCode,this.variableCode=e.variableCode,this.datePresets=e.datePresets.map(t=>new g(t)),this.entityPresets=e.entityPresets.map(t=>new I(t)),this.variables=e.variables.map(t=>new l(t)),this.widgets=e.widgets.map(t=>new b(t))}}const i=()=>`${D()}/dashboard-organisations`,o=s=>`${i()}/${encodeURIComponent(s)}`,a=new f("dashboardOrganisation",u).create(s=>s.build(s.addGet(o),s.addGetMany(i,n),s.addCreate(i),s.addUpdate(o),s.addRemove(o),s.addNotify())),S=d.get(a),v=d.getMany(a);export{S as a,v as u};
