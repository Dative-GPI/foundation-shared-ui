import{a as U,b as k}from"./properties-Qw-O9fbT.js";import{F as S}from"./FSDataTable-BGRHIasB.js";import{F as w}from"./FSDataTableUI-Bi639lGc.js";import{d as M,c as V,q as A,w as v,B as s,D as N,S as P,E as o,m as C,I as n,J as p,O as R,P as E,Q as G,z as d,A as h,K as z,H as $}from"./vue.esm-bundler-CqZ6aK3I.js";import{_ as j}from"./lodash-BrWYvtk2.js";import{F as H}from"./FSTagGroup-C79KhZ0o.js";import{F as g}from"./FSIcon-8KcAAKgU.js";import{_ as L}from"./FSRow-udQVJR1p.js";import{F as J}from"./FSText-C92q1_nI.js";import{F as K}from"./FSChip-BAjrANNt.js";import{F as Q}from"./FSDashboardOrganisationTypeTileUI-i_xnVyDD.js";import{u as W}from"./useDashboardOrganisationTypes-BYENK7SJ.js";import{u as X}from"./useUserOrganisations-CV-tWA-G.js";import{u as Y}from"./useOrganisations-N2SdYafi.js";import{u as Z}from"./useAppOrganisationId-oxTtWVij.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSLoader-0ho3eZau.js";import"./useBreakpoints-DMrtgY61.js";import"./useColors-BIkRBR7C.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DfSX31J9.js";import"./theme-CCooKRqg.js";import"./css-BZjDzSZ1.js";import"./color-iZFxpsFf.js";import"./dimensions-CuS7VcMO.js";import"./elevation-DCJceMeT.js";import"./locale-BJmdjC_5.js";import"./FSCol-DIPgj7wU.js";import"./base-B6WxqUqv.js";import"./composableFactory-BJClBu0g.js";import"./serviceFactory-B3o6Bvwt.js";import"./uuid-DTaye2KM.js";import"./FSFadeOut-B817LR1t.js";import"./vue-router-RJKW7Wfw.js";import"./FSTile-DIm7BUL1.js";import"./FSClickable-CBfoSsDs.js";import"./FSRouterLink-CyH3F3Zz.js";import"./FSCard-BH9I8ruU.js";import"./VProgressCircular-cB7gdjsO.js";import"./resizeObserver-C7qOORSR.js";import"./VIcon-ZzEkeSRE.js";import"./FSCheckbox-tSiw0lhZ.js";import"./FSSpan-B7HDTlg9.js";import"./useSlots-BgbXyH5p.js";import"./useRules-Cutg_0Yh.js";import"./VSelectionControl-Dw5vpEc6.js";import"./density-B3EUR5Bv.js";import"./proxiedModel-BirLikdP.js";import"./index-BSoBU6Pm.js";import"./VLabel-D1qNLyt7.js";import"./VInput-f1leR0eo.js";import"./index-BHk1SuU0.js";import"./transition-C13qRIR1.js";import"./FSSearchField-VvMfG9Mz.js";import"./FSTextField-CEJP76Sx.js";import"./FSBaseField-eUR0iGRU.js";import"./FSButton-2OKi08_r.js";import"./VField-B2nfi808.js";import"./loader-Bh1R7Z2A.js";import"./anchor-DiyvyHyx.js";import"./rounded-T_eKj2ZY.js";import"./VDefaultsProvider-3cG3_dFO.js";import"./forwardRefs-DWGaNmQL.js";import"./index-0XvVa1kA.js";import"./useTranslations-D4m4SVfo.js";import"./FSSelectField-BBiyLElX.js";import"./VList-BdRSj6hM.js";import"./VDialog-BjO_95QL.js";import"./VOverlay-CrPt6Ctk.js";import"./display-Cs3Y1ygD.js";import"./scopeId-BQSHBqq_.js";import"./router-C0dK7NvB.js";import"./ssrBoot-B76fNmmB.js";import"./border-DGybV2oK.js";import"./VImg-UKGkvK5A.js";import"./FSSlideGroup-FM6r_xNQ.js";import"./FSButtonNextIcon-BR7gWMZw.js";import"./VSlideGroupItem-DMC4DYA5.js";import"./group-1sntWZNj.js";import"./FSToggleSet-CzuJHIxU.js";import"./FSWrapGroup-Dpc14vID.js";import"./FSRadio-DU7kdJ5e.js";import"./VSelect-Bvdm_LMp.js";import"./VMenu-B5kDinlh.js";import"./FSDivider-D2fK97AG.js";import"./FSMenu-9wehFRGE.js";import"./FSOptionGroup-Cgy0WD7C.js";import"./filter-C1K_d8Vd.js";import"./VBtn-3Idlo3fr.js";import"./filter-DhzaDDBp.js";import"./FSTag-D6PjbxEi.js";import"./FSSimpleTileUI-Ji75yLFi.js";import"./FSIconCard-Dqsqzdxg.js";import"./FSImage-DLNm9-cY.js";import"./FSImageUI-B_rD9Cl-.js";import"./useImages-k0iD--OD.js";import"./base-CmdGny12.js";import"./useAppAuthToken-nTw6pyPT.js";import"./dashboardTranslation-CqTP1_a6.js";import"./useAppLanguageCode-D1PzUORY.js";import"./permissionInfos-BPDgTHQl.js";const _=M({name:"FSBaseDashboardOrganisationTypesList",components:{FSDataTable:S,FSTagGroup:H,FSIcon:g,FSRow:L,FSText:J,FSChip:K,FSDashboardOrganisationTypeTileUI:Q},props:{tableCode:{type:String,required:!1,default:null},dashboardOrganisationTypeFilters:{type:Object,default:void 0,required:!1},itemTo:{type:Function,required:!1},modelValue:{type:Array,required:!1,default:()=>[]},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{getMany:l,fetching:F,entities:O}=W(),{fetch:D,entity:f}=X(),{get:b,entity:m}=Y(),{organisationId:r}=Z(),y=V(()=>f.value?f.value.mainDashboardId:null),T=V(()=>m.value?m.value.mainDashboardId:null),a=t=>e.modelValue.includes(t);return A(()=>{D()}),v(r,()=>{r.value&&b(r.value)},{immediate:!0}),v(()=>e.dashboardOrganisationTypeFilters,(t,i)=>{(!t&&!i||!j.isEqual(t,i))&&l(e.dashboardOrganisationTypeFilters)},{immediate:!0}),{fetchingDashboardOrganisationTypes:F,userOrganisationMainDashboardId:y,organisationMainDashboardId:T,dashboardOrganisationTypes:O,isSelected:a}}});function ee(e,l,F,O,D,f){const b=n("FSText"),m=n("FSChip"),r=n("FSTagGroup"),y=n("FSDashboardOrganisationTypeTileUI"),T=n("FSDataTable");return p(),s(T,C({defaultMode:"iterator",loading:e.fetchingDashboardOrganisationTypes,items:e.dashboardOrganisationTypes,itemTo:e.$props.itemTo,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,"onUpdate:modelValue":l[0]||(l[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),N({"item.main":o(({item:a})=>[d(L,null,{default:o(()=>[a.id===e.organisationMainDashboardId?(p(),s(g,{key:0},{default:o(()=>[h(" mdi-account-group-outline ")]),_:1})):$("",!0),a.id===e.userOrganisationMainDashboardId?(p(),s(g,{key:1},{default:o(()=>[h(" mdi-home ")]),_:1})):$("",!0)]),_:2},1024)]),"item.icon":o(({item:a})=>[d(g,null,{default:o(()=>[h(z(a.icon),1)]),_:2},1024)]),"item.organisationTypeLabel":o(({item:a})=>[a.organisationTypeId?(p(),s(b,{key:0,label:a.organisationTypeLabel},null,8,["label"])):(p(),s(m,{key:1,variant:"standard",label:e.$tr("ui.common.all","All")},null,8,["label"]))]),"item.tags":o(({item:a})=>[d(r,{variant:"slide",showRemove:!1,tags:a.tags},null,8,["tags"])]),"item.tile":o(({item:a,toggleSelect:t})=>[d(y,C({bottomColor:a.colors,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,to:e.$props.itemTo&&e.$props.itemTo(a),modelValue:e.isSelected(a.id),"onUpdate:modelValue":i=>t(a)},a),null,16,["bottomColor","selectable","singleSelect","to","modelValue","onUpdate:modelValue"])]),_:2},[P(e.$slots,(a,t)=>({name:t,fn:o(i=>[R(e.$slots,t,E(G(i)))])}))]),1040,["loading","items","itemTo","tableCode","modelValue","selectable","singleSelect"])}const c=x(_,[["render",ee]]);_.__docgenInfo={displayName:"FSBaseDashboardOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardOrganisationTypeFilters",type:{name:"DashboardOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"undefined"}},{name:"itemTo",type:{name:"(item: DashboardOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/dashboardOrganisationTypes/FSBaseDashboardOrganisationTypesList.vue"]};const Qa={title:"Foundation/Core/Lists/Base Lists/BaseDashboardOrganisationTypesList",component:c,subcomponents:{FSDataTable:S},tags:["autodocs"],argTypes:{...k([S,w],c),...U(c),tableCode:{control:"select",options:["dashboardOrganisationTypes1"]}}},u={render:e=>({components:{FSBaseDashboardOrganisationTypesList:c},setup(){return{args:e}},template:`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    `}),args:{tableCode:"dashboardOrganisationTypes1"}};var I,q,B;u.parameters={...u.parameters,docs:{...(I=u.parameters)==null?void 0:I.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseDashboardOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    \`
  }),
  args: {
    tableCode: 'dashboardOrganisationTypes1'
  }
}`,...(B=(q=u.parameters)==null?void 0:q.docs)==null?void 0:B.source}}};const Wa=["Default"];export{u as Default,Wa as __namedExportsOrder,Qa as default};
