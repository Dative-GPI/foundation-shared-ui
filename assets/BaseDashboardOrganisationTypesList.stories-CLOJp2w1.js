import{a as k,b as U}from"./properties-Qw-O9fbT.js";import{F as S}from"./FSDataTable-BmCbh_fa.js";import{F as w}from"./FSDataTableUI-B_jw5jMK.js";import{d as M,c as V,v as A,w as v,B as i,D as N,S as P,E as t,m as C,I as p,J as s,O as R,P as E,Q as G,k as T,A as h,K as j,H as $}from"./vue.esm-bundler-CC_jVOJ5.js";import{_ as z}from"./lodash-Zo30T2Bj.js";import{F as H}from"./FSTagGroup-CayVmUOs.js";import{F as u}from"./FSIcon-CeLDRxMK.js";import{_ as q}from"./FSRow-CjY3icuR.js";import{F as J}from"./FSText-B2RNQvtL.js";import{F as K}from"./FSChip-DtJe-ffy.js";import{F as Q}from"./FSDashboardOrganisationTypeTileUI--amrP45d.js";import{u as W}from"./useDashboardOrganisationTypes-Dg0R0vYb.js";import{u as X}from"./useUserOrganisations-C4HqOR1U.js";import{u as Y}from"./useOrganisations-DupZm3Jw.js";import{u as Z}from"./useAppOrganisationId-DWUnIwce.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSLoader-0nGK1qhA.js";import"./useBreakpoints-BMcJFLA8.js";import"./useColors-BXuuHMxE.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-Bp81IclV.js";import"./css-DTGEi_Ca.js";import"./color-BM2dSUAO.js";import"./dimensions-TKp8HHzB.js";import"./elevation-CjJG1XnK.js";import"./locale-K9DBMW2q.js";import"./FSCol-DVEaUPKl.js";import"./base-Cj4tO-2v.js";import"./composableFactory-7f7_oyFS.js";import"./serviceFactory-aQiBqOvf.js";import"./uuid-DTaye2KM.js";import"./FSFadeOut-DU3Ke7qi.js";import"./vue-router-CE1XKJtL.js";import"./FSTile-CPs209xc.js";import"./FSClickable-DFmwvck2.js";import"./FSRouterLink-DFrDtHuc.js";import"./FSCard-twwkVLSp.js";import"./VProgressCircular-B7HKciov.js";import"./resizeObserver-BZ0AJw4z.js";import"./VIcon-BOLLMMm0.js";import"./FSCheckbox-D-xuSzdC.js";import"./FSSpan-DkNsO5wd.js";import"./useSlots-C8jkAuOW.js";import"./useRules-Da0JLBaA.js";import"./VCheckboxBtn-C85wpeer.js";import"./VSelectionControl-CvHa2RXZ.js";import"./density-mssFUWH2.js";import"./proxiedModel-Nw0LX-ta.js";import"./index-DWDx8SXO.js";import"./VLabel-kKpu5iXd.js";import"./VInput-0C1kQySn.js";import"./index-Dylhq_Dl.js";import"./transition-Ucf2Ovas.js";import"./FSSearchField-X1df83qn.js";import"./FSTextField-CTUDqfDL.js";import"./FSBaseField-Bo38Hl_f.js";import"./FSButton-Czf3beC8.js";import"./VField-CnDxsm3U.js";import"./loader-CbVzlK-r.js";import"./anchor-S0Fc85Gi.js";import"./rounded-Cy4gG01O.js";import"./VDefaultsProvider-CuIagDb9.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-B48vLg-P.js";import"./useTranslations-5XSl7qXA.js";import"./FSSelectField-C7he6bYM.js";import"./FSDialogMenu-CWcRHPoR.js";import"./VDialog-fWvZSkPk.js";import"./VOverlay-DXMNyzvF.js";import"./display-CpM-3U3n.js";import"./lazy-BrZUVd24.js";import"./router-kuDvkEMM.js";import"./scopeId-BJNiFHH-.js";import"./FSSlideGroup-nu8Cr66q.js";import"./FSButtonNextIcon-CsckSPrB.js";import"./VSlideGroup-DVr5PPvN.js";import"./group-CxQl3dDS.js";import"./VSlideGroupItem-Bl-P3Ech.js";import"./FSToggleSet-CEKaVblF.js";import"./FSWrapGroup-Cr3q9yBs.js";import"./FSRadio-QZhD_0uB.js";import"./VSelect-rJC_8mRT.js";import"./VList-C5ZFMMa0.js";import"./ssrBoot-CyKRGZ4o.js";import"./border-BnR_N-bS.js";import"./VImg-BmPSKt86.js";import"./VMenu-DWktgpYO.js";import"./FSDivider-BNinaqtk.js";import"./FSMenu-BD2xtcyR.js";import"./FSOptionGroup-BRCCZeaK.js";import"./filter-C1K_d8Vd.js";import"./VBtn-BXSaXTUb.js";import"./filter-DunZ8aFg.js";import"./FSTag-CYHkH_HL.js";import"./FSSimpleTileUI-3tPA3xAK.js";import"./FSIconCard-C9Y7GHaO.js";import"./FSImage-s4wyGGaF.js";import"./FSImageUI-DVteMu9v.js";import"./useImages-k4wzHpJZ.js";import"./base-CmdGny12.js";import"./useAppAuthToken-BT-dflJP.js";import"./dashboardTranslation-DZP1AHwx.js";import"./useAppLanguageCode-DwRThLpm.js";import"./permissionInfos-BPDgTHQl.js";import"./address-CE2z3AEI.js";const _=M({name:"FSBaseDashboardOrganisationTypesList",components:{FSDataTable:S,FSTagGroup:H,FSIcon:u,FSRow:q,FSText:J,FSChip:K,FSDashboardOrganisationTypeTileUI:Q},props:{tableCode:{type:String,required:!1,default:null},dashboardOrganisationTypeFilters:{type:Object,default:void 0,required:!1},itemTo:{type:Function,required:!1},modelValue:{type:Array,required:!1,default:()=>[]},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{getMany:m,fetching:F,entities:O}=W(),{fetch:D,entity:c}=X(),{get:f,entity:l}=Y(),{organisationId:n}=Z(),b=V(()=>c.value?c.value.mainDashboardId:null),y=V(()=>l.value?l.value.mainDashboardId:null),a=o=>e.modelValue.includes(o);return A(()=>{D()}),v(n,()=>{n.value&&f(n.value)},{immediate:!0}),v(()=>e.dashboardOrganisationTypeFilters,(o,r)=>{(!o&&!r||!z.isEqual(o,r))&&m(e.dashboardOrganisationTypeFilters)},{immediate:!0}),{fetchingDashboardOrganisationTypes:F,userOrganisationMainDashboardId:b,organisationMainDashboardId:y,dashboardOrganisationTypes:O,isSelected:a}}});function ee(e,m,F,O,D,c){const f=p("FSText"),l=p("FSChip"),n=p("FSTagGroup"),b=p("FSDashboardOrganisationTypeTileUI"),y=p("FSDataTable");return s(),i(y,C({defaultMode:"iterator",loading:e.fetchingDashboardOrganisationTypes,items:e.dashboardOrganisationTypes,itemTo:e.$props.itemTo,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,"onUpdate:modelValue":m[0]||(m[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),N({"item.main":t(({item:a})=>[T(q,null,{default:t(()=>[a.id===e.organisationMainDashboardId?(s(),i(u,{key:0},{default:t(()=>[h(" mdi-account-group-outline ")]),_:1})):$("",!0),a.id===e.userOrganisationMainDashboardId?(s(),i(u,{key:1},{default:t(()=>[h(" mdi-home ")]),_:1})):$("",!0)]),_:2},1024)]),"item.icon":t(({item:a})=>[T(u,null,{default:t(()=>[h(j(a.icon),1)]),_:2},1024)]),"item.organisationTypeLabel":t(({item:a})=>[a.organisationTypeId?(s(),i(f,{key:0,label:a.organisationTypeLabel},null,8,["label"])):(s(),i(l,{key:1,variant:"standard",label:e.$tr("ui.common.all","All")},null,8,["label"]))]),"item.tags":t(({item:a})=>[T(n,{variant:"slide",showRemove:!1,tags:a.tags},null,8,["tags"])]),"item.tile":t(({index:a,item:o,toggleSelect:r})=>[(s(),i(b,C({key:a,bottomColor:o.colors,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,to:e.$props.itemTo&&e.$props.itemTo(o),modelValue:e.isSelected(o.id),"onUpdate:modelValue":ae=>r(o)},o),null,16,["bottomColor","selectable","singleSelect","to","modelValue","onUpdate:modelValue"]))]),_:2},[P(e.$slots,(a,o)=>({name:o,fn:t(r=>[R(e.$slots,o,E(G(r)))])}))]),1040,["loading","items","itemTo","tableCode","modelValue","selectable","singleSelect"])}const g=x(_,[["render",ee]]);_.__docgenInfo={displayName:"FSBaseDashboardOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardOrganisationTypeFilters",type:{name:"DashboardOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"undefined"}},{name:"itemTo",type:{name:"(item: DashboardOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/dashboardOrganisationTypes/FSBaseDashboardOrganisationTypesList.vue"]};const ao={title:"Foundation/Core/Lists/Base Lists/BaseDashboardOrganisationTypesList",component:g,subcomponents:{FSDataTable:S},tags:["autodocs"],argTypes:{...U([S,w],g),...k(g),tableCode:{control:"select",options:["dashboardOrganisationTypes1"]}}},d={render:e=>({components:{FSBaseDashboardOrganisationTypesList:g},setup(){return{args:e}},template:`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    `}),args:{tableCode:"dashboardOrganisationTypes1"}};var I,B,L;d.parameters={...d.parameters,docs:{...(I=d.parameters)==null?void 0:I.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseDashboardOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    \`
  }),
  args: {
    tableCode: 'dashboardOrganisationTypes1'
  }
}`,...(L=(B=d.parameters)==null?void 0:B.docs)==null?void 0:L.source}}};const oo=["Default"];export{d as Default,oo as __namedExportsOrder,ao as default};
