import{d as V,c as g,y as m,z as p,A as y,m as z,b as D,w as G,C as v,N as o,E as O,H as F,G as j,F as J}from"./vue.esm-bundler-l-siv0w9.js";import{_ as P}from"./lodash-BiW_TGGX.js";import{F as K}from"./FSSelectField-D65DWRuU.js";import{b as e}from"./dates-DFP4a3ym.js";import{u as Q}from"./useTranslations-CJK8D24x.js";import{_ as B}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{F as X}from"./FSDateTimeRangeField-B_2MgawU.js";import Z from"./FSNumberField-DFLngzLD.js";import{F as _}from"./FSBaseField-CpNJbDpF.js";import{F as S}from"./FSTextField-CUJPYjwS.js";import{F as ee}from"./FSForm-4A05UEAw.js";import{F as $}from"./FSIcon-uIr9VdFq.js";import{_ as k}from"./FSRow-CbEgVN08.js";import{u as ae}from"./useDateFormat-Cii9bW2h.js";import{u as te}from"./useRules-QHk8iD4m.js";import{N as le,D as re,T as se}from"./rules-PiUNcfOY.js";const M=V({name:"FSSelectDateSetting",components:{FSSelectField:K},props:{variant:{type:String,required:!1,default:"default"},modelValue:{type:Number,required:!1,default:e.LastDay},lastPeriod:{type:Boolean,required:!1,default:!1},useNone:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(a){const{$tr:r}=Q();return{dateSettings:g(()=>{if(a.variant==="before-after")return[{id:e.Pick,label:r("ui.date-setting.pick-dates","Pick dates")},{id:e.MinutesBeforeAfter,label:r("ui.date-setting.x-minutes-before-after-hour","x Minutes before/after")},{id:e.HoursBeforeAfter,label:r("ui.date-setting.x-hours-before-after-hour","x Hours before/after")},{id:e.DaysBeforeAfter,label:r("ui.date-setting.x-days-before-after-hour","x Days before/after")},{id:e.WeeksBeforeAfter,label:r("ui.date-setting.x-weeks-before-after-hour","x Weeks before/after")},{id:e.MinutesBefore,label:r("ui.date-setting.x-minutes-before","x Minutes before")},{id:e.HoursBefore,label:r("ui.date-setting.x-hours-before","x Hours before")},{id:e.DaysBefore,label:r("ui.date-setting.x-days-before","x Days before")},{id:e.WeeksBefore,label:r("ui.date-setting.x-weeks-before","x Weeks before")}];let d=[{id:e.Pick,label:r("ui.date-setting.pick-dates","Pick dates")},{id:e.CurrentHour,label:r("ui.date-setting.this-hour","This hour")},{id:e.CurrentDay,label:r("ui.date-setting.this-day","This day")},{id:e.CurrentWeek,label:r("ui.date-setting.this-week","This week")},{id:e.CurrentMonth,label:r("ui.date-setting.this-month","This month")},{id:e.CurrentYear,label:r("ui.date-setting.this-year","This year")},{id:e.LastDay,label:r("ui.date-setting.last-day","Last day")},{id:e.LastWeek,label:r("ui.date-setting.last-week","Last week")},{id:e.LastMonth,label:r("ui.date-setting.last-month","Last month")},{id:e.LastYear,label:r("ui.date-setting.last-year","Last year")},{id:e.SinceLastDay,label:r("ui.date-setting.since-last-day","Since last day")},{id:e.SinceLastWeek,label:r("ui.date-setting.since-last-week","Since last week")},{id:e.SinceLastMonth,label:r("ui.date-setting.since-last-month","Since last month")},{id:e.SinceLastYear,label:r("ui.date-setting.since-last-year","Since last year")},{id:e.PastHours,label:r("ui.date-setting.past-x-hours","Past x hours")},{id:e.PastDays,label:r("ui.date-setting.past-x-days","Past x days")},{id:e.PastWeeks,label:r("ui.date-setting.past-x-weeks","Past x weeks")},{id:e.PastMonths,label:r("ui.date-setting.past-x-months","Past x months")},{id:e.PastYears,label:r("ui.date-setting.past-x-years","Past x years")},{id:e.Expression,label:r("ui.date-setting.expression","Expression")}];return a.lastPeriod&&d.push({id:e.LastPeriod,label:r("ui.date-setting.last-period","Last period")}),a.useNone&&d.unshift({id:e.None,label:r("ui.date-setting.none","None")}),d})}}});function ue(a,r,i,d,w,h){const c=m("FSSelectField");return p(),y(c,z({class:"fs-select-date-setting",items:a.dateSettings,clearable:!1,modelValue:a.$props.modelValue,"onUpdate:modelValue":r[0]||(r[0]=n=>a.$emit("update:modelValue",n))},a.$attrs),null,16,["items","modelValue"])}const ne=B(M,[["render",ue]]);M.__docgenInfo={displayName:"FSSelectDateSetting",exportName:"default",description:"",tags:{},props:[{name:"variant",values:["default","before-after"],type:{name:"string"},required:!1,defaultValue:{func:!1,value:'"default"'}},{name:"modelValue",type:{name:"DateSetting"},required:!1,defaultValue:{func:!1,value:"DateSetting.LastDay"}},{name:"lastPeriod",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"useNone",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/shared/foundation-shared-components/components/selects/FSSelectDateSetting.vue"]};const q=V({name:"FSTermField",components:{FSDateTimeRangeField:X,FSSelectDateSetting:ne,FSNumberField:Z,FSBaseField:_,FSTextField:S,FSForm:ee,FSIcon:$,FSRow:k},props:{label:{type:String,required:!1,default:null},description:{type:String,required:!1,default:null},startDate:{type:String,required:!0},endDate:{type:String,required:!0},variant:{type:String,required:!1,default:"default"},hideHeader:{type:Boolean,required:!1,default:!1},lastPeriod:{type:Boolean,required:!1,default:!1},required:{type:Boolean,required:!1,default:!1},rules:{type:Array,required:!1,default:()=>[]},messages:{type:Array,required:!1,default:null},editable:{type:Boolean,required:!1,default:!0}},emits:["update","update:startDate","update:endDate"],setup(a,{emit:r}){const{parseForPicker:i,epochToISO:d,todayToPicker:w,yesterdayToPicker:h}=ae(),{getMessages:c}=te(),n=D(e.PastDays),s=D(1),t=D("now - 1d"),l=D("now"),f=D(!1),L=g(()=>[e.PastHours,e.PastDays,e.PastWeeks,e.PastMonths,e.PastYears,e.MinutesBeforeAfter,e.HoursBeforeAfter,e.DaysBeforeAfter,e.WeeksBeforeAfter,e.MinutesBefore,e.HoursBefore,e.DaysBefore,e.WeeksBefore]),A=g(()=>{const u=[i(t.value),i(l.value)];return u.some(b=>b==null)?null:u}),H=g(()=>a.messages??c(a.startDate,a.rules).concat(c(a.endDate,a.rules))),C=u=>{N(u)},W=u=>{t.value=u,f.value&&(r("update:startDate",u),r("update",{startDate:t.value,endDate:a.endDate}))},N=P.debounce(W,1e3),T=u=>{x(u)},E=u=>{l.value=u,f.value&&(r("update:endDate",u),r("update",{startDate:a.startDate,endDate:l.value}))},x=P.debounce(E,1e3),R=u=>{switch(n.value=u,u){case e.None:return;case e.PastHours:t.value=`now - ${s.value}h`,l.value="now";break;case e.PastDays:t.value=`now - ${s.value}d`,l.value="now";break;case e.PastWeeks:t.value=`now - ${s.value}w`,l.value="now";break;case e.PastMonths:t.value=`now - ${s.value}M`,l.value="now";break;case e.PastYears:t.value=`now - ${s.value}y`,l.value="now";break;case e.CurrentHour:t.value="now/h",l.value="now";break;case e.CurrentDay:t.value="now/d",l.value="now";break;case e.CurrentWeek:t.value="now/w",l.value="now";break;case e.CurrentMonth:t.value="now/M",l.value="now";break;case e.CurrentYear:t.value="now/y",l.value="now";break;case e.LastDay:t.value="now - 1d/d",l.value="now/d";break;case e.LastWeek:t.value="now - 1w/w",l.value="now/w";break;case e.LastMonth:t.value="now - 1M/M",l.value="now/M";break;case e.LastYear:t.value="now - 1y/y",l.value="now/y";break;case e.SinceLastDay:t.value="now - 1d/d",l.value="now";break;case e.SinceLastWeek:t.value="now - 1w/w",l.value="now";break;case e.SinceLastMonth:t.value="now - 1M/M",l.value="now";break;case e.SinceLastYear:t.value="now - 1y/y",l.value="now";break;case e.LastPeriod:t.value="from - to + from",l.value="from";break;case e.MinutesBeforeAfter:t.value=`alertstart - ${s.value}m`,l.value=`alertend + ${s.value}m`;break;case e.HoursBeforeAfter:t.value=`alertstart - ${s.value}h`,l.value=`alertend + ${s.value}h`;break;case e.DaysBeforeAfter:t.value=`alertstart - ${s.value}d`,l.value=`alertend + ${s.value}d`;break;case e.WeeksBeforeAfter:t.value=`alertstart - ${s.value}w`,l.value=`alertend + ${s.value}w`;break;case e.MinutesBefore:t.value=`alertstart - ${s.value}m`,l.value="alertend";break;case e.HoursBefore:t.value=`alertstart - ${s.value}h`,l.value="alertend";break;case e.DaysBefore:t.value=`alertstart - ${s.value}d`,l.value="alertend";break;case e.WeeksBefore:t.value=`alertstart - ${s.value}w`,l.value="alertend";break;case e.Expression:a.variant==="before-after"?(t.value=`alertstart - ${s.value}d`,l.value="alertend"):(t.value=`now - ${s.value}d`,l.value="now");break;case e.Pick:l.value=w(),t.value=h();break}r("update:startDate",t.value),r("update:endDate",l.value),r("update",{startDate:t.value,endDate:l.value})},Y=u=>{switch(s.value=u||1,n.value){case e.None:return;case e.PastHours:t.value=`now - ${s.value}h`,l.value="now";break;case e.PastDays:t.value=`now - ${s.value}d`,l.value="now";break;case e.PastWeeks:t.value=`now - ${s.value}w`,l.value="now";break;case e.PastMonths:t.value=`now - ${s.value}M`,l.value="now";break;case e.PastYears:t.value=`now - ${s.value}y`,l.value="now";break;case e.MinutesBeforeAfter:t.value=`alertstart - ${s.value}m`,l.value=`alertend + ${s.value}m`;break;case e.HoursBeforeAfter:t.value=`alertstart - ${s.value}h`,l.value=`alertend + ${s.value}h`;break;case e.DaysBeforeAfter:t.value=`alertstart - ${s.value}d`,l.value=`alertend + ${s.value}d`;break;case e.WeeksBeforeAfter:t.value=`alertstart - ${s.value}w`,l.value=`alertend + ${s.value}w`;break;case e.MinutesBefore:t.value=`alertstart - ${s.value}m`,l.value="alertend";break;case e.HoursBefore:t.value=`alertstart - ${s.value}h`,l.value="alertend";break;case e.DaysBefore:t.value=`alertstart - ${s.value}d`,l.value="alertend";break;case e.WeeksBefore:t.value=`alertstart - ${s.value}w`,l.value="alertend";break}r("update:startDate",t.value),r("update:endDate",l.value),r("update",{startDate:t.value,endDate:l.value})},U=u=>{u?(u&&u[0]!=null&&d(u[0])!==t.value&&(t.value=d(u[0]),f.value&&(r("update:startDate",t.value),r("update",{startDate:t.value,endDate:a.endDate}))),u&&u[1]!=null&&d(u[1])!==l.value&&(l.value=d(u[1]),f.value&&(r("update:endDate",l.value),r("update",{startDate:a.startDate,endDate:l.value})))):(l.value=w(),t.value=h(),f.value&&(r("update:startDate",t.value),r("update:endDate",l.value),r("update",{startDate:t.value,endDate:l.value})))},I=()=>{if(t.value=a.startDate,l.value=a.endDate,a.variant==="before-after"){if(a.endDate==="alertend"){let u=/^alertstart-([\d]+)([mhdw])$/g.exec(a.startDate.replaceAll(" ",""));if(u!=null)switch(s.value=parseInt(u[1]),u[2]){case"m":{n.value=e.MinutesBefore;return}case"h":{n.value=e.HoursBefore;return}case"d":{n.value=e.DaysBefore;return}case"w":{n.value=e.WeeksBefore;return}default:{n.value=e.Expression,s.value=1;return}}}if(/^alertstart-([\d]+)([mhdw])$/g.test(a.startDate.replaceAll(" ",""))&&/^alertend\+([\d]+)([mhdw])$/g.test(a.endDate.replaceAll(" ",""))){let u=/^alertstart-([\d]+)([mhdw])$/g.exec(a.startDate.replaceAll(" ","")),b=/^alertend\+([\d]+)([mhdw])$/g.exec(a.endDate.replaceAll(" ",""));if(u!=null&&b!=null&&u[1]===b[1]&&u[2]===b[2])switch(s.value=parseInt(u[1]),u[2]){case"m":{n.value=e.MinutesBeforeAfter;return}case"h":{n.value=e.HoursBeforeAfter;return}case"d":{n.value=e.DaysBeforeAfter;return}case"w":{n.value=e.WeeksBeforeAfter;return}default:{n.value=e.Expression,s.value=1;return}}}n.value=e.Expression,s.value=1;return}if(a.lastPeriod&&a.endDate==="from"&&a.startDate==="from - to + from"){n.value=e.LastPeriod;return}if(a.endDate==="now/d"&&a.startDate==="now - 1d/d"){n.value=e.LastDay;return}if(a.endDate==="now/w"&&a.startDate==="now - 1w/w"){n.value=e.LastWeek;return}if(a.endDate==="now/M"&&a.startDate==="now - 1M/M"){n.value=e.LastMonth;return}if(a.endDate==="now/y"&&a.startDate==="now - 1y/y"){n.value=e.LastYear;return}if(a.endDate==="now"){let u=/^now-1([dwMy])\/([dwMy])$/g.exec(a.startDate.replaceAll(" ",""));if(u!=null)switch(s.value=1,u[1]){case"d":{n.value=e.SinceLastDay;return}case"w":{n.value=e.SinceLastWeek;return}case"M":{n.value=e.SinceLastMonth;return}case"y":{n.value=e.SinceLastYear;return}default:{n.value=e.Expression;return}}if(u=/^now-([\d]+)([hdwMy])$/g.exec(a.startDate.replaceAll(" ","")),u!=null)switch(s.value=parseInt(u[1]),u[2]){case"h":{n.value=e.PastHours;return}case"d":{n.value=e.PastDays;return}case"w":{n.value=e.PastWeeks;return}case"M":{n.value=e.PastMonths;return}case"y":{n.value=e.PastYears;return}default:{n.value=e.Expression,s.value=1;return}}if(u=/^now\/([hdwMy])$/g.exec(a.startDate.replaceAll(" ","")),u!=null)switch(s.value=1,u[1]){case"h":{n.value=e.CurrentHour;return}case"d":{n.value=e.CurrentDay;return}case"w":{n.value=e.CurrentWeek;return}case"M":{n.value=e.CurrentMonth;return}case"y":{n.value=e.CurrentYear;return}default:{n.value=e.Expression;return}}}if(a.endDate&&i(a.endDate)!=null&&a.startDate&&i(a.startDate)!=null){n.value=e.Pick,s.value=1;return}n.value=e.Expression,s.value=1};return G([()=>a.startDate,()=>a.endDate],()=>{(t.value!==a.startDate||l.value!==a.endDate)&&I()},{immediate:!0}),{innerDateSetting:n,innerDateValue:s,innerStartDate:t,innerEndDate:l,actualValue:A,pastSettings:L,DateSetting:e,NumberRules:le,DateRules:re,TextRules:se,messages:H,valid:f,innerDateSettingChange:R,innerDateValueChange:Y,innerStartDateChange:C,innerEndDateChange:T,parseForPicker:i,onPickDates:U}}});function de(a,r,i,d,w,h){const c=m("FSSelectDateSetting"),n=m("FSNumberField"),s=m("FSDateTimeRangeField"),t=m("FSForm"),l=m("FSBaseField");return p(),y(l,{description:a.$props.description,hideHeader:a.$props.hideHeader,required:a.$props.required,editable:a.$props.editable,label:a.$props.label,messages:a.messages},{default:v(()=>[o(t,{modelValue:a.valid,"onUpdate:modelValue":r[0]||(r[0]=f=>a.valid=f)},{default:v(()=>[o(k,{wrap:!1},{default:v(()=>[o(c,{minWidth:"180px",lastPeriod:a.$props.lastPeriod,editable:a.$props.editable,variant:a.$props.variant,hideHeader:!0,modelValue:a.innerDateSetting,"onUpdate:modelValue":a.innerDateSettingChange},null,8,["lastPeriod","editable","variant","modelValue","onUpdate:modelValue"]),a.pastSettings.includes(a.innerDateSetting)?(p(),y(n,{key:0,minWidth:"60px",rules:[a.NumberRules.required(),a.NumberRules.min(0)],editable:a.$props.editable,hideHeader:!0,clearable:!1,modelValue:a.innerDateValue,"onUpdate:modelValue":a.innerDateValueChange},null,8,["rules","editable","modelValue","onUpdate:modelValue"])):a.innerDateSetting===a.DateSetting.Expression?(p(),O(j,{key:1},[o(k,{align:"center-left",wrap:!1},{default:v(()=>[o($,null,{default:v(()=>[F(" mdi-clock-start ")]),_:1}),o(S,{rules:[a.TextRules.required(),a.DateRules.validateExpression(a.$props.variant)],editable:a.$props.editable,hideHeader:!0,clearable:!1,modelValue:a.innerStartDate,"onUpdate:modelValue":a.innerStartDateChange},null,8,["rules","editable","modelValue","onUpdate:modelValue"])]),_:1}),o(k,{align:"center-left",wrap:!1},{default:v(()=>[o($,null,{default:v(()=>[F(" mdi-clock-end ")]),_:1}),o(S,{rules:[a.TextRules.required(),a.DateRules.validateExpression(a.$props.variant)],editable:a.$props.editable,hideHeader:!0,clearable:!1,modelValue:a.innerEndDate,"onUpdate:modelValue":a.innerEndDateChange},null,8,["rules","editable","modelValue","onUpdate:modelValue"])]),_:1})],64)):a.innerDateSetting===a.DateSetting.Pick?(p(),y(s,{key:2,width:["350px","310px"],rules:[a.DateRules.required()],editable:a.$props.editable,hideHeader:!0,clearable:!1,modelValue:a.actualValue,"onUpdate:modelValue":a.onPickDates},null,8,["rules","editable","modelValue","onUpdate:modelValue"])):J("",!0)]),_:1})]),_:1},8,["modelValue"])]),_:1},8,["description","hideHeader","required","editable","label","messages"])}const Fe=B(q,[["render",de]]);q.__docgenInfo={displayName:"FSTermField",exportName:"default",description:"",tags:{},props:[{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"description",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"startDate",type:{name:"string"},required:!0},{name:"endDate",type:{name:"string"},required:!0},{name:"variant",values:["default","before-after"],type:{name:"string"},required:!1,defaultValue:{func:!1,value:'"default"'}},{name:"hideHeader",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"lastPeriod",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"required",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"rules",type:{name:"any[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"messages",type:{name:"string[]"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}}],events:[{name:"update"},{name:"update:startDate"},{name:"update:endDate"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/shared/foundation-shared-components/components/fields/FSTermField.vue"]};export{Fe as F};
