import{a as k,b as U}from"./properties-Qw-O9fbT.js";import{F as S}from"./FSDataTable-B8HfvgGz.js";import{F as w}from"./FSDataTableUI-W4Jw_cGU.js";import{d as M,c as V,v as A,w as v,B as i,D as N,S as P,E as t,m as C,I as p,J as s,O as R,P as E,Q as G,k as T,A as h,K as j,H as $}from"./vue.esm-bundler-PONd4AmC.js";import{_ as z}from"./lodash-Zo30T2Bj.js";import{F as H}from"./FSTagGroup-EIgJvz3x.js";import{F as u}from"./FSIcon-bsX1r_Ci.js";import{_ as q}from"./FSRow-C-b-hpWa.js";import{F as J}from"./FSText-C7hkL3As.js";import{F as K}from"./FSChip-CfNKsjD1.js";import{F as Q}from"./FSDashboardOrganisationTypeTileUI-Doc4ZM9N.js";import{u as W}from"./useDashboardOrganisationTypes-BLzPB7zn.js";import{u as X}from"./useUserOrganisations-BuUoeLgV.js";import{u as Y}from"./useOrganisations-Dgv7ceJP.js";import{u as Z}from"./useAppOrganisationId-BgVWu_vS.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSLoader-UOJfN8Qb.js";import"./useBreakpoints-RTs-XAJF.js";import"./useColors-Dytl_X2F.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-CTzRPxOi.js";import"./css-BeoQuAfr.js";import"./color-_AiH45em.js";import"./dimensions-CNbPgA3L.js";import"./elevation-CL0Py7Fp.js";import"./locale-CoLhg8Wl.js";import"./FSCol-Bfhiyt6Y.js";import"./base-Cd1_IDDR.js";import"./composableFactory-B2U31qfW.js";import"./serviceFactory-aQiBqOvf.js";import"./uuid-DTaye2KM.js";import"./FSFadeOut-CtUd8oOA.js";import"./vue-router-D84-pxgD.js";import"./FSTile-Cm_QUpQV.js";import"./FSClickable-CyhgWkHC.js";import"./FSRouterLink-mxENRZ46.js";import"./FSCard-DYD9Tm3w.js";import"./VProgressCircular-CDK6zSYw.js";import"./resizeObserver-UZYihl4g.js";import"./VIcon-DIMW80nW.js";import"./FSCheckbox-CQphVYdu.js";import"./FSSpan-DxKJLsSl.js";import"./useSlots-nyIcwo6G.js";import"./useRules-CT5DWk6c.js";import"./VCheckboxBtn-B-CDiKqR.js";import"./VSelectionControl-HwS3bHvU.js";import"./density-CNNumQ_A.js";import"./proxiedModel-vOB1Q9Gh.js";import"./index-B8vPsAiL.js";import"./VLabel-5AeJpfXJ.js";import"./VInput-ClaXJMCA.js";import"./index-CANKuvlL.js";import"./transition-BXZIGKil.js";import"./FSSearchField-D3E8Wwt2.js";import"./FSTextField-D-U5ryYn.js";import"./FSBaseField-DMW1nZy-.js";import"./FSButton-CZKySWW0.js";import"./VField-So_guaQm.js";import"./loader-DGoLn0VY.js";import"./anchor-D2WyvgD_.js";import"./rounded-BBFi0CuG.js";import"./VDefaultsProvider-BsWh58B_.js";import"./forwardRefs-DWGaNmQL.js";import"./index-Bb4mSIJO.js";import"./useTranslations-_Q1DYra_.js";import"./FSSelectField-Bqm7POVY.js";import"./FSDialogMenu-Czm1Jubp.js";import"./VDialog-CJNHz4BJ.js";import"./VOverlay-U8N3Tt4W.js";import"./display-BXzLC06Y.js";import"./scopeId-CWp-k_S_.js";import"./router-6tzIEQS-.js";import"./FSSlideGroup-CGqp6f7y.js";import"./FSButtonNextIcon-Dkus99PH.js";import"./VSlideGroupItem-B5H5Uw6w.js";import"./group-CvGRLeFV.js";import"./FSToggleSet-CRtePpT3.js";import"./FSWrapGroup-CpwsD4SA.js";import"./FSRadio-BKiTm18z.js";import"./VSelect-BUWJeJyh.js";import"./VList-B9UxDYwK.js";import"./ssrBoot-DufuUSU7.js";import"./border-z35mRDPS.js";import"./VImg-DKyIpwU2.js";import"./VMenu-D11N5TPJ.js";import"./FSDivider-B_antRd7.js";import"./FSMenu-0Xerd8-Y.js";import"./FSOptionGroup-BKeXRZGo.js";import"./filter-C1K_d8Vd.js";import"./VBtn-PodE2DV2.js";import"./filter-MyCPMQzE.js";import"./FSTag-Bq0CtxRJ.js";import"./FSSimpleTileUI-K7NYhEKB.js";import"./FSIconCard-C0gGqVte.js";import"./FSImage-CxsBRX2Y.js";import"./FSImageUI-DSgZP-Av.js";import"./useImages-BcPfe_zO.js";import"./base-CmdGny12.js";import"./useAppAuthToken-BwsMVknI.js";import"./dashboardTranslation-BjqIvegu.js";import"./useAppLanguageCode-fPbUdbod.js";import"./permissionInfos-BPDgTHQl.js";const _=M({name:"FSBaseDashboardOrganisationTypesList",components:{FSDataTable:S,FSTagGroup:H,FSIcon:u,FSRow:q,FSText:J,FSChip:K,FSDashboardOrganisationTypeTileUI:Q},props:{tableCode:{type:String,required:!1,default:null},dashboardOrganisationTypeFilters:{type:Object,default:void 0,required:!1},itemTo:{type:Function,required:!1},modelValue:{type:Array,required:!1,default:()=>[]},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue"],setup(e){const{getMany:m,fetching:F,entities:O}=W(),{fetch:D,entity:c}=X(),{get:f,entity:l}=Y(),{organisationId:n}=Z(),b=V(()=>c.value?c.value.mainDashboardId:null),y=V(()=>l.value?l.value.mainDashboardId:null),a=o=>e.modelValue.includes(o);return A(()=>{D()}),v(n,()=>{n.value&&f(n.value)},{immediate:!0}),v(()=>e.dashboardOrganisationTypeFilters,(o,r)=>{(!o&&!r||!z.isEqual(o,r))&&m(e.dashboardOrganisationTypeFilters)},{immediate:!0}),{fetchingDashboardOrganisationTypes:F,userOrganisationMainDashboardId:b,organisationMainDashboardId:y,dashboardOrganisationTypes:O,isSelected:a}}});function ee(e,m,F,O,D,c){const f=p("FSText"),l=p("FSChip"),n=p("FSTagGroup"),b=p("FSDashboardOrganisationTypeTileUI"),y=p("FSDataTable");return s(),i(y,C({defaultMode:"iterator",loading:e.fetchingDashboardOrganisationTypes,items:e.dashboardOrganisationTypes,itemTo:e.$props.itemTo,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,"onUpdate:modelValue":m[0]||(m[0]=a=>e.$emit("update:modelValue",a))},e.$attrs),N({"item.main":t(({item:a})=>[T(q,null,{default:t(()=>[a.id===e.organisationMainDashboardId?(s(),i(u,{key:0},{default:t(()=>[h(" mdi-account-group-outline ")]),_:1})):$("",!0),a.id===e.userOrganisationMainDashboardId?(s(),i(u,{key:1},{default:t(()=>[h(" mdi-home ")]),_:1})):$("",!0)]),_:2},1024)]),"item.icon":t(({item:a})=>[T(u,null,{default:t(()=>[h(j(a.icon),1)]),_:2},1024)]),"item.organisationTypeLabel":t(({item:a})=>[a.organisationTypeId?(s(),i(f,{key:0,label:a.organisationTypeLabel},null,8,["label"])):(s(),i(l,{key:1,variant:"standard",label:e.$tr("ui.common.all","All")},null,8,["label"]))]),"item.tags":t(({item:a})=>[T(n,{variant:"slide",showRemove:!1,tags:a.tags},null,8,["tags"])]),"item.tile":t(({index:a,item:o,toggleSelect:r})=>[(s(),i(b,C({key:a,bottomColor:o.colors,selectable:e.$props.selectable,singleSelect:e.$props.singleSelect,to:e.$props.itemTo&&e.$props.itemTo(o),modelValue:e.isSelected(o.id),"onUpdate:modelValue":ae=>r(o)},o),null,16,["bottomColor","selectable","singleSelect","to","modelValue","onUpdate:modelValue"]))]),_:2},[P(e.$slots,(a,o)=>({name:o,fn:t(r=>[R(e.$slots,o,E(G(r)))])}))]),1040,["loading","items","itemTo","tableCode","modelValue","selectable","singleSelect"])}const g=x(_,[["render",ee]]);_.__docgenInfo={displayName:"FSBaseDashboardOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardOrganisationTypeFilters",type:{name:"DashboardOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"undefined"}},{name:"itemTo",type:{name:"(item: DashboardOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/dashboardOrganisationTypes/FSBaseDashboardOrganisationTypesList.vue"]};const Ya={title:"Foundation/Core/Lists/Base Lists/BaseDashboardOrganisationTypesList",component:g,subcomponents:{FSDataTable:S},tags:["autodocs"],argTypes:{...U([S,w],g),...k(g),tableCode:{control:"select",options:["dashboardOrganisationTypes1"]}}},d={render:e=>({components:{FSBaseDashboardOrganisationTypesList:g},setup(){return{args:e}},template:`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    `}),args:{tableCode:"dashboardOrganisationTypes1"}};var I,B,L;d.parameters={...d.parameters,docs:{...(I=d.parameters)==null?void 0:I.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseDashboardOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseDashboardOrganisationTypesList
        v-bind="args"
        v-model:modelValue="args.modelValue"
      />
    \`
  }),
  args: {
    tableCode: 'dashboardOrganisationTypes1'
  }
}`,...(L=(B=d.parameters)==null?void 0:B.docs)==null?void 0:L.source}}};const Za=["Default"];export{d as Default,Za as __namedExportsOrder,Ya as default};
