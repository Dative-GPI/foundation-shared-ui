import{a as U,b as E}from"./properties-Qw-O9fbT.js";import{F as T}from"./FSAutocompleteField-CA_0rLAj.js";import{d as L,c,B as V,E as i,m as j,I as b,J as F,k as g,G as P,D as z,H as G,A as H,K as J}from"./vue.esm-bundler-CocPPKUI.js";import{F as $}from"./FSButton-Ct7NP3WY.js";import{F as K}from"./FSChip-Bts0E-Hn.js";import{F as N}from"./FSIcon-BGuuL0jz.js";import{u as Q}from"./useChartOrganisationTypes-C7Bhety0.js";import{u as R}from"./useChartOrganisations-UqqPdwlP.js";import{u as W}from"./useAutocomplete-_-lhaEIP.js";import{a as p,b as X,d as Y}from"./chartsTools-Ci5nttnl.js";import{u as Z}from"./useTranslations-DJaIYmO0.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as ee}from"./VAutocomplete-DTXEYHwv.js";import"./FSSearchField-C9foR2W1.js";import"./FSTextField-qizlxjKF.js";import"./FSBaseField-DIVf3PoW.js";import"./FSSpan-DrSEJIpr.js";import"./useBreakpoints-DZlz3-56.js";import"./useSlots-D4bv69lA.js";import"./FSCol-79-COv64.js";import"./css-mt76hoAn.js";import"./FSRow-BvJ7lU5E.js";import"./useColors-C1aD-Kb6.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-C1Gcptw7.js";import"./useRules-C3-AmzzE.js";import"./VField-C42QHTgn.js";import"./index-hd-xIizf.js";import"./color-D50-hVV_.js";import"./transition-bMLtH-b3.js";import"./VLabel-yrR5w-fx.js";import"./VInput-JSCg5nQs.js";import"./locale-_fONYh-8.js";import"./VIcon-ZjKwFcqe.js";import"./density-2KuMGYl6.js";import"./dimensions-Cv9Fwl7U.js";import"./proxiedModel-DW1FRKBO.js";import"./loader-BDqRCawj.js";import"./VProgressCircular-k_tOz5gX.js";import"./resizeObserver-DDOqpSMx.js";import"./anchor-D4EnoweD.js";import"./rounded-CBYChxif.js";import"./VDefaultsProvider-CV4ffwSK.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-5LM_ZUPq.js";import"./FSDialogMenu-CqfE7T6V.js";import"./FSCard-2KUMcI8D.js";import"./VDialog-BOSWAwdu.js";import"./VOverlay-C9rlmtj8.js";import"./display-23tZl-3U.js";import"./lazy-Dahsm7lL.js";import"./router-CKzlklLc.js";import"./scopeId-BfaO37qo.js";import"./FSSlideGroup-BtmFNoOB.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BlUV3Rd5.js";import"./VSlideGroupItem-nAYd2StP.js";import"./group-MFxThiWx.js";import"./FSToggleSet-CZm7acvY.js";import"./FSWrapGroup-DXlgsE59.js";import"./FSCheckbox-C0VeJRCe.js";import"./VCheckboxBtn-CRTq-u2o.js";import"./VSelectionControl-t1Q43Tu7.js";import"./index-BwBNp3ym.js";import"./FSFadeOut-BcV7cYL5.js";import"./FSLoader-JpoH2mis.js";import"./elevation-DUhGVECn.js";import"./FSRadio-C6Te7NxO.js";import"./VSelect-BdaeS24x.js";import"./VList-7u5M4k2B.js";import"./ssrBoot-B-cFki3l.js";import"./border-ZP5ArpGv.js";import"./VImg-C2WY2bzk.js";import"./VMenu-DVt-HGrP.js";import"./filter-ROZ4nnRZ.js";import"./FSRouterLink-CitgaMwY.js";import"./vue-router-BKog_lZN.js";import"./FSClickable-CqIDwjuA.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./base-D6U4mRRi.js";import"./useAppOrganisationId-DacmST4-.js";import"./composableFactory-DRFDSLtA.js";import"./serviceFactory-aQiBqOvf.js";import"./lodash-Zo30T2Bj.js";import"./applications-pqrfQrBX.js";import"./filter-B7pVrSt4.js";import"./index-Dkbga0Ie.js";import"./theme-B39arTiS.js";import"./color-D1vYnx_2.js";import"./icons-Dov6OaoO.js";import"./transition-B328Eg1E.js";import"./VInput-Chh38OGB.js";import"./dimensions-DJwcxcc2.js";import"./proxiedModel-B74GSU57.js";import"./VMenu-DixSVXKO.js";import"./display-5pTM_NlN.js";import"./lazy-Cbre06Jd.js";import"./goto-CQdQDFg4.js";import"./VDivider-DShFabDb.js";import"./group-BqVdRiUv.js";const k=L({name:"FSAutocompleteChart",components:{FSAutocompleteField:T,FSButton:$,FSChip:K,FSIcon:N},props:{chartOrganisationTypeFilters:{type:Object,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:p.None},ignoreChartOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreChartOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(e,{emit:o}){const{getMany:f,fetching:h,entities:y}=Q(),{getMany:C,fetching:n,entities:s}=R(),{$tr:a}=Z(),u=c(()=>y.value.map(t=>({id:t.id,icon:t.icon,label:t.label,type:p.OrganisationType})).concat(s.value.map(t=>({id:t.id,icon:t.icon,label:t.label,type:p.Organisation})))),B=c(()=>_.value&&(h.value||n.value)),v=c(()=>e.multiple&&e.modelValue?a("autocomplete.chart.placeholder","{0} chart(s) selected",e.modelValue.length):null),D=t=>{if(Array.isArray(t)){const r=t.map(d=>d.id),O=t.map(d=>d.type);o("update:modelValue",r),o("update:type",O),o("update",{modelValue:r,type:O})}else o("update:modelValue",t==null?void 0:t.id),o("update:type",t==null?void 0:t.type),o("update",{modelValue:t==null?void 0:t.id,type:t==null?void 0:t.type})},I=t=>{const r=[];return e.ignoreChartOrganisationTypes||r.push(f({...e.chartOrganisationTypeFilters,search:t??void 0})),e.ignoreChartOrganisations||r.push(C({...e.chartOrganisationFilters,search:t??void 0})),Promise.all(r)},{toggleSet:M,init:_,onUpdate:w}=W(u,[()=>e.chartOrganisationTypeFilters,()=>e.chartOrganisationFilters],o,I,D);return{placeholder:v,toggleSet:M,loading:B,charts:u,chartOriginColor:Y,chartOriginLabel:X,onUpdate:w}}});function te(e,o,f,h,y,C){const n=b("FSChip"),s=b("FSAutocompleteField");return F(),V(s,j({label:e.$props.label??e.$tr("ui.common.chart","Chart"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.charts,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":i(({item:a})=>[a.icon?(F(),V(N,{key:0},{default:i(()=>[H(J(a.icon),1)]),_:2},1024)):G("",!0)]),"item-append":i(({item:a})=>[g(n,{color:e.chartOriginColor(a.type),label:e.chartOriginLabel(a.type)},null,8,["color","label"])]),"toggle-set-item":i(a=>[g($,{prependIcon:a.item.icon,variant:a.getVariant(a.item),color:a.getColor(a.item),class:P(a.getClass(a.item)),label:a.item.label,onClick:u=>a.toggle(a.item)},z({_:2},[a.item.type?{name:"append",fn:i(()=>[g(n,{color:e.chartOriginColor(a.item.type),label:e.chartOriginLabel(a.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const m=x(k,[["render",te]]);k.__docgenInfo={displayName:"FSAutocompleteChart",exportName:"default",description:"",tags:{},props:[{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"ChartOrigin[] | ChartOrigin"},required:!1,defaultValue:{func:!1,value:"ChartOrigin.None"}},{name:"ignoreChartOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreChartOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteChart.vue"]};const Yt={title:"Foundation/Core/Autocompletes/AutocompleteChart",component:m,tags:["autodocs"],argTypes:{...E([T,ee],m),...U(m)}},l={render:e=>({components:{FSAutocompleteChart:m},setup(){return{args:e}},template:`
    <FSAutocompleteChart
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:p.None}};var S,A,q;l.parameters={...l.parameters,docs:{...(S=l.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteChart
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteChart
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: ChartOrigin.None
  }
}`,...(q=(A=l.parameters)==null?void 0:A.docs)==null?void 0:q.source}}};const Zt=["Default"];export{l as Default,Zt as __namedExportsOrder,Yt as default};
