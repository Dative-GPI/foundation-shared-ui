import{a as v,b as $}from"./properties-Qw-O9fbT.js";import{F as h}from"./FSAutocompleteField-DJcNVJsm.js";import{d as q,c as s,B as d,E as u,m as C,I as _,J as c,H as B,A as k,K as N}from"./vue.esm-bundler-PONd4AmC.js";import{F as V}from"./FSIcon-wf_hiRKr.js";import{u as T}from"./useDashboardOrganisations-C3_8-r_-.js";import{u as U}from"./useAutocomplete-DsvrErHM.js";import{u as E}from"./useTranslations-_Q1DYra_.js";import{_ as I}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as w}from"./VAutocomplete-UDTUdT4q.js";import"./FSSearchField-ChPOPxqV.js";import"./FSTextField-Du9Dg0zN.js";import"./FSBaseField-C48d8q8m.js";import"./FSSpan-DxKJLsSl.js";import"./useBreakpoints-RTs-XAJF.js";import"./useSlots-nyIcwo6G.js";import"./FSCol-Bfhiyt6Y.js";import"./css-BeoQuAfr.js";import"./FSRow-C-b-hpWa.js";import"./useColors-WMY9wD-z.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-DW7AHeJn.js";import"./FSButton-C_cDbGvj.js";import"./FSRouterLink-mxENRZ46.js";import"./vue-router-D84-pxgD.js";import"./FSClickable-BpeLEfG7.js";import"./FSCard-B7av1ouT.js";import"./VProgressCircular-D57tYVQX.js";import"./color-CQ7P2KsY.js";import"./resizeObserver-BAwzmH4Y.js";import"./VIcon-shEmQARK.js";import"./useRules-CT5DWk6c.js";import"./VField-D3hGYPrZ.js";import"./index-COu1mqSp.js";import"./transition-BpYTYsmy.js";import"./VLabel-B2dMuALu.js";import"./VInput-CX-j4Zl6.js";import"./locale-CoLhg8Wl.js";import"./density-DM1TPnyn.js";import"./dimensions-D04OQyPe.js";import"./proxiedModel-BMHfYIia.js";import"./loader-zqGHJTJd.js";import"./anchor-rLQXsCC5.js";import"./rounded-Cwlpymxx.js";import"./VDefaultsProvider--dbql3OT.js";import"./forwardRefs-DWGaNmQL.js";import"./index-CzkqP9_q.js";import"./FSDialogMenu-Crze0iUo.js";import"./VDialog-CkmtLqSZ.js";import"./VOverlay-C4y2redN.js";import"./display-D1WOGNJY.js";import"./lazy-PL0gnfDR.js";import"./router-DS8hXbpn.js";import"./scopeId-DFcjERLl.js";import"./FSSlideGroup-G-1eJ8xl.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BfAvcYY6.js";import"./VSlideGroupItem-B4B7QRhR.js";import"./group-QLjCrFp5.js";import"./FSToggleSet-BSMIUsc9.js";import"./FSWrapGroup-Dayjp45z.js";import"./FSCheckbox-B1Q6_lSw.js";import"./VCheckboxBtn-CYnHxMSC.js";import"./VSelectionControl-BAKsAS1a.js";import"./index-aCfcr9Gd.js";import"./FSFadeOut-Dik6Imqk.js";import"./FSLoader-B0jwcdOS.js";import"./elevation-D2k7D5K3.js";import"./FSRadio-CdtLWkJD.js";import"./VSelect-CyCOXYrT.js";import"./VList-BCmGq4kQ.js";import"./ssrBoot-DufuUSU7.js";import"./border-BL_XAYaf.js";import"./VImg-AonvEV9k.js";import"./VMenu-DAcX0VlQ.js";import"./filter-D4n0RRF9.js";import"./dashboardTranslation-BjqIvegu.js";import"./useAppLanguageCode-fPbUdbod.js";import"./lodash-Zo30T2Bj.js";import"./pathCrumb-Db-cq5HI.js";import"./base-Cd1_IDDR.js";import"./useAppOrganisationId-BgVWu_vS.js";import"./composableFactory-B2U31qfW.js";import"./serviceFactory-aQiBqOvf.js";import"./filter-KTTNQBFM.js";import"./index-Cw6eTGe7.js";import"./theme-CYBW1gqf.js";import"./color-BjNiHHj9.js";import"./icons-B8jsWbid.js";import"./transition-BLc6SjwQ.js";import"./VInput-PVuhiTi8.js";import"./dimensions-Bhowz3j9.js";import"./proxiedModel-YDID3p5t.js";import"./VMenu-CPBRiML2.js";import"./display-iOw8Yit5.js";import"./lazy-6CyKxEg9.js";import"./goto-D1U7XOvA.js";import"./VDivider-C4YNcQz1.js";import"./group-DpPqq0Wg.js";const F=q({name:"FSAutocompleteDashboard",components:{FSAutocompleteField:h,FSIcon:V},props:{dashboardOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update:modelValue"],setup(e,{emit:m}){const{getMany:p,fetching:l,entities:a}=T(),{$tr:n}=E(),i=s(()=>y.value&&l.value),o=s(()=>e.multiple&&e.modelValue?n("autocomplete.dashboard.placeholder","{0} dashboard(s) selected",e.modelValue.length):null),S=A=>p({...e.dashboardOrganisationFilters,search:A??void 0}),{toggleSet:D,init:y,onUpdate:O}=U(a,[()=>e.dashboardOrganisationFilters],m,S);return{dashboardOrganisations:a,placeholder:o,toggleSet:D,loading:i,onUpdate:O}}});function M(e,m,p,l,a,n){const i=_("FSAutocompleteField");return c(),d(i,C({label:e.$props.label??e.$tr("ui.common.dashboard","Dashboard"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,items:e.dashboardOrganisations,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":u(({item:o})=>[o.icon?(c(),d(V,{key:0},{default:u(()=>[k(N(o.icon),1)]),_:2},1024)):B("",!0)]),_:1},16,["label","toggleSet","items","multiple","placeholder","loading","modelValue","onUpdate:modelValue"])}const r=I(F,[["render",M]]);F.__docgenInfo={displayName:"FSAutocompleteDashboard",exportName:"default",description:"",tags:{},props:[{name:"dashboardOrganisationFilters",type:{name:"DashboardOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteDashboardOrganisation.vue"]};const ko={title:"Foundation/Core/Autocompletes/AutocompleteDashboardOrganisation",component:r,tags:["autodocs"],argTypes:{...$([h,w],r),...v(r)}},t={render:e=>({components:{FSAutocompleteDashboardOrganisation:r},setup(){return{args:e}},template:`
    <FSAutocompleteDashboardOrganisation
      v-model="args.modelValue"
      v-bind="args"
    />`}),args:{modelValue:[]}};var f,g,b;t.parameters={...t.parameters,docs:{...(f=t.parameters)==null?void 0:f.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteDashboardOrganisation
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteDashboardOrganisation
      v-model="args.modelValue"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: []
  }
}`,...(b=(g=t.parameters)==null?void 0:g.docs)==null?void 0:b.source}}};const No=["Default"];export{t as Default,No as __namedExportsOrder,ko as default};
