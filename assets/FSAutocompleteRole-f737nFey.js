import{d as k,c as p,y as F,z as b,A as h,C as r,m as D,H as I,I as _,F as w,N as d,B as M,D as U}from"./vue.esm-bundler-DTB_q9xr.js";import{F as L}from"./FSAutocompleteField-CAwBHctb.js";import{F as V}from"./FSButton-BpVntGX1.js";import{F as P}from"./FSChip-B9LiwYIc.js";import{F as S}from"./FSIcon-8KdV556C.js";import{u as j}from"./useRoleOrganisationTypes-Dc65a5Q2.js";import{u as z}from"./useRoleOrganisations-CtFWj6Te.js";import{u as E}from"./useAutocomplete-CPR75ud1.js";import{C as m}from"./useColors-CeHYzu6a.js";import{u as T}from"./useTranslations-BehwFxDb.js";import{_ as H}from"./_plugin-vue_export-helper-DlAUqK2U.js";var l=(e=>(e[e.None=0]="None",e[e.Organisation=1]="Organisation",e[e.OrganisationType=2]="OrganisationType",e))(l||{});const{$tr:c}=T(),W=e=>{switch(e){case l.None:return c("ui.role-type.none","None");case l.Organisation:return c("ui.role-type.organisation","Custom");case l.OrganisationType:return c("ui.role-type.organisation-type","Shared")}},G=e=>{switch(e){case l.None:return m.Error;case l.Organisation:return m.Primary;case l.OrganisationType:return m.Warning}},C=k({name:"FSAutocompleteRole",components:{FSAutocompleteField:L,FSButton:V,FSChip:P,FSIcon:S},props:{roleOrganisationTypeFilters:{type:Object,required:!1,default:null},roleOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:l.None},ignoreRoleOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreRoleOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue","update:type"],setup(e,{emit:n}){const{getMany:f,fetching:g,entities:y}=j(),{getMany:O,fetching:i,entities:s}=z(),{$tr:a}=T(),u=p(()=>y.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:l.OrganisationType})).concat(s.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:l.Organisation})))),q=p(()=>$.value&&(g.value||i.value)),R=p(()=>e.multiple&&e.modelValue?a("ui.autocomplete-role.placeholder","{0} role(s) selected",e.modelValue.length):null),N=o=>{Array.isArray(o)?(n("update:modelValue",o.map(t=>t.id)),n("update:type",o.map(t=>t.type))):(n("update:modelValue",o==null?void 0:o.id),n("update:type",o==null?void 0:o.type))},A=o=>{const t=[];return e.ignoreRoleOrganisations||t.push(O({...e.roleOrganisationFilters,search:o??void 0})),e.ignoreRoleOrganisationTypes||t.push(f({...e.roleOrganisationTypeFilters,search:o??void 0})),Promise.all(t)},{toggleSet:v,init:$,onUpdate:B}=E(u,[()=>e.roleOrganisationTypeFilters,()=>e.roleOrganisationFilters],n,A,N);return{placeholder:R,toggleSet:v,RoleType:l,loading:q,roles:u,roleTypeColor:G,roleTypeLabel:W,onUpdate:B}}});function J(e,n,f,g,y,O){const i=F("FSChip"),s=F("FSAutocompleteField");return b(),h(s,D({toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.roles,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":r(({item:a})=>[a.icon?(b(),h(S,{key:0},{default:r(()=>[I(_(a.icon),1)]),_:2},1024)):w("",!0)]),"item-append":r(({item:a})=>[d(i,{color:e.roleTypeColor(a.type),label:e.roleTypeLabel(a.type),editable:!1},null,8,["color","label"])]),"toggle-set-item":r(a=>[d(V,{prependIcon:a.item.icon,variant:a.getVariant(a.item),color:a.getColor(a.item),class:U(a.getClass(a.item)),label:a.item.label,onClick:u=>a.toggle(a.item)},M({_:2},[a.item.type?{name:"append",fn:r(()=>[d(i,{color:e.roleTypeColor(a.item.type),label:e.roleTypeLabel(a.item.type),editable:!1},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const ne=H(C,[["render",J]]);C.__docgenInfo={displayName:"FSAutocompleteRole",exportName:"default",description:"",tags:{},props:[{name:"roleOrganisationTypeFilters",type:{name:"RoleOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"roleOrganisationFilters",type:{name:"RoleOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"RoleType[] | RoleType"},required:!1,defaultValue:{func:!1,value:"RoleType.None"}},{name:"ignoreRoleOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreRoleOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteRole.vue"]};export{ne as F};
