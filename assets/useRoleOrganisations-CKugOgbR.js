var r=Object.defineProperty;var c=(i,o,e)=>o in i?r(i,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[o]=e;var s=(i,o,e)=>c(i,typeof o!="symbol"?o+"":o,e);import{P as l}from"./permissionInfos-BPDgTHQl.js";import{C as a}from"./base-Cf5ASDDk.js";import{S as d}from"./serviceFactory-Bd5jifNi.js";import{C as g}from"./composableFactory-B0937_6N.js";class t{constructor(o){s(this,"id");s(this,"roleId");s(this,"organisationId");s(this,"scope");s(this,"userType");s(this,"icon");s(this,"code");s(this,"label");s(this,"tags");s(this,"permissions");this.id=o.id,this.roleId=o.roleId,this.organisationId=o.organisationId,this.scope=o.scope,this.userType=o.userType,this.icon=o.icon,this.code=o.code,this.label=o.label,this.tags=o.tags.slice(),this.permissions=o.permissions.map(e=>new l(e))}}class I extends t{constructor(e){super(e);s(this,"description");this.description=e.description}}const n=()=>`${a()}/role-organisations`,R=i=>`${n()}/${encodeURIComponent(i)}`,p=new d("roleOrganisation",I).createComplete(n,R,t),m=g.getMany(p);export{m as u};
