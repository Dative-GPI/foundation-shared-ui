import{a as $,b as q}from"./properties-DwZ_iDct.js";import{F as v}from"./FSAutocompleteField-DxnPXb84.js";import{d as _,c,z as g,C as i,m as k,G as f,H as F,P as S,D as B,B as D,E as w}from"./vue.esm-bundler-CM4TIH-Q.js";import{F as y}from"./FSButton-OpnenzvL.js";import{F as N}from"./FSImage-BesC0Cra.js";import{u as U}from"./useModels-D9OD5T-4.js";import{u as x}from"./useAutocomplete-C46pWvzP.js";import{u as E}from"./useTranslations-CLqRehXT.js";import{_ as T}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as z}from"./VAutocomplete-ChZxRvKw.js";import"./FSSearchField-BpYj47_i.js";import"./FSTextField-D1GTNUtI.js";import"./FSBaseField-B4z0jav7.js";import"./FSSpan-BXQyelfo.js";import"./useBreakpoints-DsICqL2A.js";import"./useSlots-c6yg-hhg.js";import"./FSCol-Be93XvPD.js";import"./css-D38lF7BW.js";import"./FSRow-C47sfGk6.js";import"./useColors-CjA2D2xA.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DfSX31J9.js";import"./theme-d3-Spt7o.js";import"./useRules-B12Yr5ve.js";import"./VField-D97ztcGG.js";import"./index-BJH4L2FX.js";import"./color-Bo6l13w9.js";import"./transition-DMoMR0kB.js";import"./VLabel-Ca5QW7tf.js";import"./VInput-DXPqvHKO.js";import"./locale-BqFH1fBg.js";import"./VIcon-GfKFLOEw.js";import"./density-Dl4v3sM7.js";import"./dimensions-DW-k5kP_.js";import"./proxiedModel-DKx29MO-.js";import"./loader-CQB_6PPx.js";import"./VProgressCircular-C-4f-PXJ.js";import"./resizeObserver-Cb3oz2nO.js";import"./anchor-DCFmATqq.js";import"./rounded-CDCr0BOq.js";import"./VDefaultsProvider-DYp4Zk7-.js";import"./forwardRefs-DWGaNmQL.js";import"./index-DWgrY6Dg.js";import"./VList-CSxQCBMo.js";import"./FSCard-ByrGPHX6.js";import"./VDialog-CgsoTmCe.js";import"./VOverlay-DtEUynQC.js";import"./display-CUGteI3_.js";import"./scopeId-COl1Iexy.js";import"./router-BXF-7Xxx.js";import"./ssrBoot-BDHgcVA9.js";import"./border-CvDIZQGy.js";import"./elevation-DgpWsjTu.js";import"./index-BkfcJ8bv.js";import"./VImg-D7XF-hIS.js";import"./FSSlideGroup-BA1MtzDE.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-COmxHR4E.js";import"./VSlideGroupItem-41bDxGuE.js";import"./group-3MU8bQUc.js";import"./FSToggleSet-DEeraGIg.js";import"./FSWrapGroup-Fe7qxaBI.js";import"./FSCheckbox-hfVXQFUK.js";import"./FSIcon-B4J40lse.js";import"./VSelectionControl-MVg9W9ha.js";import"./FSFadeOut-PZiJk41N.js";import"./FSLoader-_1jWS2ee.js";import"./FSRadio-vQr5ac4u.js";import"./VSelect-DT2KUlZG.js";import"./VMenu-sKuqJ8jm.js";import"./filter-DHa7wap7.js";import"./FSRouterLink-CxLK3Rak.js";import"./vue-router-io_1IWnU.js";import"./FSClickable-DsGMo-Qs.js";import"./FSImageUI-CbHYTG-G.js";import"./useImages-X7qHyDlJ.js";import"./base-CmdGny12.js";import"./composableFactory-B6T2dm2_.js";import"./serviceFactory-B3o6Bvwt.js";import"./lodash-BrWYvtk2.js";import"./useAppAuthToken-3v3Ax1PV.js";import"./base-Be6PBkQb.js";import"./useAppOrganisationId-BtM3-JKO.js";import"./theme-DXeyMPXT.js";import"./VMenu-BXLqflw9.js";import"./display-3DMk9Rra.js";import"./color-CNG8pFwQ.js";import"./goto-BwWWZoRA.js";import"./VDivider-zRdWWS9b.js";const A=_({name:"FSAutocompleteModel",components:{FSAutocompleteField:v,FSButton:y,FSImage:N},props:{modelFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update:modelValue"],setup(e,{emit:n}){const{getMany:p,fetching:s,entities:r}=U(),{$tr:d}=E(),o=c(()=>M.value&&s.value),a=c(()=>e.multiple&&e.modelValue?d("autocomplete.model.placeholder","{0} model(s) selected",e.modelValue.length):null),t=C=>p({...e.modelFilters,search:C??void 0}),{toggleSet:u,init:M,onUpdate:I}=x(r,[()=>e.modelFilters],n,t);return{placeholder:a,toggleSet:u,loading:o,models:r,onUpdate:I}}});function O(e,n,p,s,r,d){const o=f("FSImage"),a=f("FSAutocompleteField");return F(),g(a,k({label:e.$props.label??e.$tr("ui.common.model","Model"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.models,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":i(({item:t})=>[t.imageId?(F(),g(o,{key:0,height:"26px",width:"26px",imageId:t.imageId,thumbnail:!0},null,8,["imageId"])):w("",!0)]),"toggle-set-item":i(t=>[S(y,{padding:t.item.imageId?["6px 16px","4px 12px"]:void 0,variant:t.getVariant(t.item),color:t.getColor(t.item),class:B(t.getClass(t.item)),label:t.item.label,onClick:u=>t.toggle(t.item)},D({_:2},[t.item.imageId?{name:"prepend",fn:i(()=>[S(o,{height:"26px",width:"26px",imageId:t.item.imageId,thumbnail:!0},null,8,["imageId"])]),key:"0"}:void 0]),1032,["padding","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const m=T(A,[["render",O]]);A.__docgenInfo={displayName:"FSAutocompleteModel",exportName:"default",description:"",tags:{},props:[{name:"modelFilters",type:{name:"ModelFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteModel.vue"]};const yt={title:"Foundation/Core/Autocompletes/AutocompleteModel",component:m,tags:["autodocs"],argTypes:{...q([v,z],m),...$(m)}},l={render:e=>({components:{FSAutocompleteModel:m},setup(){return{args:e}},template:`
    <FSAutocompleteModel
      v-model="args.modelValue"
      v-bind="args"
    />`}),args:{modelValue:[]}};var V,h,b;l.parameters={...l.parameters,docs:{...(V=l.parameters)==null?void 0:V.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteModel
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteModel
      v-model="args.modelValue"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: []
  }
}`,...(b=(h=l.parameters)==null?void 0:h.docs)==null?void 0:b.source}}};const At=["Default"];export{l as Default,At as __namedExportsOrder,yt as default};
