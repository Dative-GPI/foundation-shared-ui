import{d as N,c as O,w as U,y as d,z as V,A as v,B as P,O as G,C as r,m as R,K as j,L as z,M as A,N as s,H as S,I as _,F as H}from"./vue.esm-bundler-Ddr6MgcY.js";import{_ as K}from"./lodash-BiW_TGGX.js";import{F as J}from"./FSChartTileUI-mhf45mex.js";import{F as Q}from"./FSTagGroup-C14rkXPu.js";import{F as W}from"./FSImage-9J49soYl.js";import{F as y}from"./FSIcon-DfjSexyz.js";import{_ as E}from"./FSRow-CSQtiyAx.js";import{F as M}from"./FSDataTable-Bt6mgnKV.js";import{u as X}from"./useChartOrganisations-Bt6oG3rc.js";import{u as Y}from"./useChartOrganisationTypes-ujBHx51T.js";import{C as Z}from"./useColors-DnoeDx-P.js";import{e as B,c as x,C as ee}from"./chartsTools-BXyv05r8.js";import{g as te}from"./enumTools-BEsapygt.js";import{_ as ae}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSTile-BHCSbyjx.js";import"./FSClickable-D7sul-uP.js";import"./FSRouterLink-BEGxvgrv.js";import"./vue-router-9d6tV3EF.js";import"./FSCard-Bfo4Z0Zf.js";import"./FSCol-D8gLxM2E.js";import"./css-CxoeZkpP.js";import"./useBreakpoints-BMg9gIvD.js";import"./VProgressCircular-PqDihA6U.js";import"./color-DdAXPAA0.js";import"./theme-D55tBrU4.js";import"./resizeObserver-wyIwxSZb.js";import"./VIcon-zho7mIKV.js";import"./FSCheckbox-3iIuKfLX.js";import"./FSSpan-Bh1X02mE.js";import"./useSlots-C9mZt9CQ.js";import"./useRules-BfiZMl38.js";import"./VSelectionControl-DbX2q5FD.js";import"./density-B5LNz2JK.js";import"./proxiedModel-BYnu2EOK.js";import"./index-BF2Ge4Ib.js";import"./VLabel-DauhzWNW.js";import"./VInput-D-xdUwRR.js";import"./locale-CA7yUTVs.js";import"./index-B-qTxNvr.js";import"./transition-BtBp4lzQ.js";import"./form-vji0TmoR.js";import"./FSWrapGroup-DCzWuvHX.js";import"./uuid-DTaye2KM.js";import"./VSlideGroupItem-DFjaovtS.js";import"./group-Chxk22vU.js";import"./display-BUGvawh3.js";import"./FSTag-B6pa7vMu.js";import"./VBtn-GP0Uljy4.js";import"./border-BiXRHevL.js";import"./elevation-BNOJtsSY.js";import"./rounded-BoPqla0T.js";import"./dimensions-DL1AZk-8.js";import"./loader-CNy9VCwd.js";import"./anchor-BdD5yCeG.js";import"./router-C4YP2PAT.js";import"./VDefaultsProvider-B6zOjuu3.js";import"./FSSlideGroup-8udoapu6.js";import"./FSButtonNextIcon-C4Myj5uR.js";import"./FSButton-DZMcpMR1.js";import"./FSImageUI-CifHzJ5L.js";import"./FSLoader-PksHGtEK.js";import"./VImg-Bi-pKvLj.js";import"./index-lTYthPHq.js";import"./imageDetails-C93ayhcT.js";import"./base-CmdGny12.js";import"./serviceFactory-DTTRhbEw.js";import"./composableFactory-H3XPfy7N.js";import"./useAppAuthToken-BhmYrSKL.js";import"./FSDataTableUI-BIjOEfUj.js";import"./FSText-CAGI2dEo.js";import"./FSSearchField-D9ku8NjQ.js";import"./FSTextField-ECMlyBTY.js";import"./FSBaseField-BXJBXTur.js";import"./VField-DrieYqTb.js";import"./forwardRefs-DWGaNmQL.js";import"./useTranslations-DgvmBCqU.js";import"./FSSelectField-WQNi82Nz.js";import"./VList-BsRjN0ZI.js";import"./VDialog-CGEJcy8g.js";import"./VOverlay-C5IcMf4o.js";import"./lazy-BsoIJm2g.js";import"./ssrBoot-BXK87sqN.js";import"./FSToggleSet-CjZBl77R.js";import"./FSFadeOut-B5r2PNGg.js";import"./FSRadio-CBI2uo6q.js";import"./VSelect-DLEPHyKg.js";import"./VMenu-CkU-g4Hp.js";import"./FSDivider-CDvYXrsD.js";import"./FSChip-B-qI2KQy.js";import"./FSOptionGroup-CjsCGHE4.js";import"./filter-C1K_d8Vd.js";import"./filter-MqAtiUjL.js";import"./base-DCZJTx46.js";import"./useAppOrganisationId-4oKdl_5X.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./index-DfSX31J9.js";const k=N({name:"FSBaseChartsList",components:{FSChartTileUI:J,FSDataTable:M,FSTagGroup:Q,FSImage:W,FSIcon:y,FSRow:E},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},modelValue:{type:Array,default:()=>[],required:!1}},emits:["update","update:modelValue","update:scope"],setup(t,{emit:n}){const{entities:b,fetching:I,getMany:L}=X(),{entities:u,fetching:F,getMany:c}=Y(),g=e=>t.modelValue.includes(e),T=()=>{L(t.chartOrganisationFilters),c(t.chartOrganisationTypeFilters)},h=O(()=>b.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})).concat(u.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})))),a=O(()=>({modelsLabels:{fixedFilters:u.value.map(e=>e.modelsLabels).reduce((e,o)=>{for(const i of o)e.map(f=>f.id).includes(i.id)||e.push(i);return e},[]).map(e=>({value:e.id,text:e.label})).concat({value:"",text:"--"}),methodFilter:(e,o)=>o.length==0&&e==""||o.length>0&&o.some(i=>i.id==e)},chartType:{fixedFilters:te(ee).map(e=>({value:e.value,text:B(e.value)})),methodFilter:(e,o)=>e==o}})),l=e=>{const o=g(e);m(o?t.modelValue.filter(i=>i!=e):[...t.modelValue,e])},m=e=>{if(!e){n("update:modelValue",[]),n("update:scope",[]),n("update",{modelValue:[],scope:[]});return}const o=h.value.filter(p=>e.includes(p.id)),i=o.map(p=>p.id),f=o.map(p=>p.scope);n("update:modelValue",i),n("update:scope",f),n("update",{modelValue:i,scope:f})};return U(()=>[t.chartOrganisationFilters,t.chartOrganisationTypeFilters],(e,o)=>{(!e&&!o||!K.isEqual(e,o))&&T()},{immediate:!0}),{fetchingChartOrganisationTypes:F,fetchingChartOrganisations:I,chartOrganisationTypes:u,chartOrganisations:b,headersOptions:a,ColorEnum:Z,charts:h,chartTypeLabel:B,isSelected:g,chartIcon:x,onSelect:m,update:l}}});function oe(t,n,b,I,L,u){const F=d("FSImage"),c=d("FSTagGroup"),g=d("FSText"),T=d("FSChartTileUI"),h=d("FSDataTable");return V(),v(h,R({defaultMode:"iterator",loading:t.fetchingChartOrganisationTypes||t.fetchingChartOrganisations,headersOptions:t.headersOptions,items:t.charts,tableCode:t.$props.tableCode,modelValue:t.$props.modelValue,"onUpdate:modelValue":t.onSelect},t.$attrs),P({"header.imageId-title":r(()=>[s(y,null,{default:r(()=>[S(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[s(y,null,{default:r(()=>[S(_(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(V(),v(F,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):H("",!0)]),"item.tags":r(({item:a})=>[s(c,{variant:"slide",editable:!1,tags:a.tags},null,8,["tags"])]),"item.chartType":r(({item:a})=>[s(E,{wrap:!1},{default:r(()=>[s(y,{icon:t.chartIcon(a.chartType)},null,8,["icon"]),s(g,null,{default:r(()=>[S(_(t.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.modelsLabels":r(({item:a})=>[s(c,{editable:!1,tags:a.modelsLabels.map(l=>l.label)},null,8,["tags"])]),"item.tile":r(({item:a})=>[s(T,{variant:"standard",label:a.label,categoryLabel:a.chartCategoryLabel,icon:a.icon,imageId:a.imageId,type:a.chartType,color:t.isSelected(a.id)?t.ColorEnum.Primary:t.ColorEnum.Light,onClick:l=>t.update(a.id)},null,8,["label","categoryLabel","icon","imageId","type","color","onClick"])]),_:2},[G(t.$slots,(a,l)=>({name:l,fn:r(m=>[j(t.$slots,l,z(A(m)))])}))]),1040,["loading","headersOptions","items","tableCode","modelValue","onUpdate:modelValue"])}const D=ae(k,[["render",oe]]);k.__docgenInfo={displayName:"FSBaseChartsList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:scope"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/charts/FSBaseChartsList.vue"]};const Qt={title:"Foundation/Core/Lists/Base Lists/BaseChartsList",component:D,subcomponents:{FSDataTable:M},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["charts1"]},args:{selecteds:[]}}},C={render:t=>({components:{FSBaseChartsList:D},setup(){return{args:t}},template:`
      <FSBaseChartsList
        :tableCode="args.tableCode"
        v-model="args.selecteds"
      />
    `}),args:{tableCode:"charts1"}};var w,$,q;C.parameters={...C.parameters,docs:{...(w=C.parameters)==null?void 0:w.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartsList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartsList
        :tableCode="args.tableCode"
        v-model="args.selecteds"
      />
    \`
  }),
  args: {
    tableCode: 'charts1'
  }
}`,...(q=($=C.parameters)==null?void 0:$.docs)==null?void 0:q.source}}};const Wt=["Default"];export{C as Default,Wt as __namedExportsOrder,Qt as default};
