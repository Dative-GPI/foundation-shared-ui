import{d as N,c as O,w as U,A as V,C as P,S as R,D as r,l as G,H as d,I as v,L as j,N as A,O as z,R as s,J as T,K as _,F as H}from"./vue.esm-bundler-NAfsqApI.js";import{_ as J}from"./lodash-BrWYvtk2.js";import{F as K}from"./FSChartTileUI-Cf3rPr30.js";import{F as Q}from"./FSTagGroup-_uAzbfER.js";import{F as W}from"./FSImage-pL2n9Qiy.js";import{F as y}from"./FSIcon-Dq2bxLH5.js";import{_ as D}from"./FSRow-GjwhmX1p.js";import{F as E}from"./FSDataTable-Bdkg7Eyy.js";import{u as X}from"./useChartOrganisations-CA_HuXXN.js";import{u as Y}from"./useChartOrganisationTypes-CYzwBkiz.js";import{c as Z,e as B,C as x}from"./chartsTools-l63nn86N.js";import{C as ee}from"./useColors-CWqJhoVw.js";import{g as te}from"./enumTools-BEsapygt.js";import{_ as ae}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSTile-DVIPkavo.js";import"./FSClickable-Dvaj3J5M.js";import"./FSRouterLink-BsurcUkD.js";import"./vue-router-CwkSDy-h.js";import"./FSCard-DOESxZy8.js";import"./FSCol-CPY6S-Xd.js";import"./css-DBDqGZ-V.js";import"./useBreakpoints-BwxwzcAl.js";import"./VProgressCircular-B6p7zTwg.js";import"./color-BvydW9AS.js";import"./theme-F_JAsCzs.js";import"./resizeObserver-CLnVcpcq.js";import"./VIcon-PiNvAqE-.js";import"./FSCheckbox-CZADXYvb.js";import"./FSSpan-CLtVPKpS.js";import"./useSlots-S0O9Daut.js";import"./useRules-pqUeO9kt.js";import"./VSelectionControl-CV2pv1R-.js";import"./density-BGeA8UH8.js";import"./proxiedModel-sn-eI_a5.js";import"./index-o6vlk9JB.js";import"./VLabel-BDFzMscP.js";import"./VInput-B5HH3Lye.js";import"./locale-CAPEya44.js";import"./index-Dne_26Gx.js";import"./transition-L7INWkz2.js";import"./dimensions-IFPI4Yq9.js";import"./form-DTsyvZhj.js";import"./FSWrapGroup-C3Z0hZ7U.js";import"./uuid-DTaye2KM.js";import"./VSlideGroupItem-BvOdViLK.js";import"./group-Dl43T2CL.js";import"./display-Bn-MFLq6.js";import"./FSTag---43R17_.js";import"./VBtn-DqFLTMVy.js";import"./border-C5v47RY4.js";import"./elevation-B-XsQHpK.js";import"./rounded-DwVJT96z.js";import"./loader-DsBOwpms.js";import"./anchor-DvtYZGyi.js";import"./router-0GC4RTMW.js";import"./VDefaultsProvider-BngNLuXK.js";import"./FSSlideGroup-Cl7IgSOt.js";import"./FSButtonNextIcon-BwecMMW5.js";import"./FSButton-CnXo3fLV.js";import"./FSImageUI-5vzo4bHr.js";import"./FSLoader-C8dZP0ML.js";import"./VImg-D7CqP58l.js";import"./index-DINlpRuJ.js";import"./useImages-V3peuH-V.js";import"./base-CmdGny12.js";import"./composableFactory-WcheuuwI.js";import"./serviceFactory-DMr1GitK.js";import"./useAppAuthToken-DQih8RjT.js";import"./FSDataTableUI-C7fdNUM1.js";import"./FSText-Bp70TDSF.js";import"./FSSearchField-LHGjxxhV.js";import"./FSTextField-Dzov9hcU.js";import"./FSBaseField-CjhswGig.js";import"./VField-KOKiCRZA.js";import"./forwardRefs-DWGaNmQL.js";import"./useTranslations-CxiknF7e.js";import"./FSSelectField-BvYV5EfQ.js";import"./VList-Cf1cUG92.js";import"./VDialog-uWe1mq7l.js";import"./VOverlay-CNRAdbgq.js";import"./scopeId-CbPxXtFO.js";import"./ssrBoot-BkO-TPgF.js";import"./FSToggleSet-CBrw8ECP.js";import"./FSFadeOut-D3iDD7Hj.js";import"./FSRadio-Bz6eMy_b.js";import"./VSelect-aoHOo6gx.js";import"./VMenu-D8AvjW2T.js";import"./FSDivider-CFth2ThC.js";import"./FSChip-DFWe0C6o.js";import"./FSOptionGroup-B6MwFvnd.js";import"./filter-C1K_d8Vd.js";import"./filter-DH9_huac.js";import"./base-D1kf-R5n.js";import"./useAppOrganisationId-CZPUgkT3.js";import"./chartAllowedStep-BBjUr5Kj.js";import"./chartTimeStep-DIQ4HUqp.js";import"./index-DfSX31J9.js";const k=N({name:"FSBaseChartsList",components:{FSChartTileUI:K,FSDataTable:E,FSTagGroup:Q,FSImage:W,FSIcon:y,FSRow:D},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},modelValue:{type:Array,default:()=>[],required:!1}},emits:["update","update:modelValue","update:scope"],setup(t,{emit:n}){const{entities:b,fetching:I,getMany:L}=X(),{entities:u,fetching:F,getMany:c}=Y(),g=e=>t.modelValue.includes(e),S=()=>{L(t.chartOrganisationFilters),c(t.chartOrganisationTypeFilters)},h=O(()=>b.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})).concat(u.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})))),a=O(()=>({modelsLabels:{fixedFilters:u.value.map(e=>e.modelsLabels).reduce((e,o)=>{for(const i of o)e.map(f=>f.id).includes(i.id)||e.push(i);return e},[]).map(e=>({value:e.id,text:e.label})).concat({value:"",text:"--"}),methodFilter:(e,o)=>o.length==0&&e==""||o.length>0&&o.some(i=>i.id==e)},chartType:{fixedFilters:te(x).map(e=>({value:e.value,text:B(e.value)})),methodFilter:(e,o)=>e==o}})),l=e=>{const o=g(e);m(o?t.modelValue.filter(i=>i!=e):[...t.modelValue,e])},m=e=>{if(!e){n("update:modelValue",[]),n("update:scope",[]),n("update",{modelValue:[],scope:[]});return}const o=h.value.filter(p=>e.includes(p.id)),i=o.map(p=>p.id),f=o.map(p=>p.scope);n("update:modelValue",i),n("update:scope",f),n("update",{modelValue:i,scope:f})};return U(()=>[t.chartOrganisationFilters,t.chartOrganisationTypeFilters],(e,o)=>{(!e&&!o||!J.isEqual(e,o))&&S()},{immediate:!0}),{fetchingChartOrganisationTypes:F,fetchingChartOrganisations:I,chartOrganisationTypes:u,chartOrganisations:b,headersOptions:a,ColorEnum:ee,charts:h,chartTypeLabel:B,isSelected:g,chartIcon:Z,onSelect:m,update:l}}});function oe(t,n,b,I,L,u){const F=d("FSImage"),c=d("FSTagGroup"),g=d("FSText"),S=d("FSChartTileUI"),h=d("FSDataTable");return v(),V(h,G({defaultMode:"iterator",loading:t.fetchingChartOrganisationTypes||t.fetchingChartOrganisations,headersOptions:t.headersOptions,items:t.charts,tableCode:t.$props.tableCode,modelValue:t.$props.modelValue,"onUpdate:modelValue":t.onSelect},t.$attrs),P({"header.imageId-title":r(()=>[s(y,null,{default:r(()=>[T(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[s(y,null,{default:r(()=>[T(_(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(v(),V(F,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):H("",!0)]),"item.tags":r(({item:a})=>[s(c,{variant:"slide",editable:!1,tags:a.tags},null,8,["tags"])]),"item.chartType":r(({item:a})=>[s(D,{wrap:!1},{default:r(()=>[s(y,{icon:t.chartIcon(a.chartType)},null,8,["icon"]),s(g,null,{default:r(()=>[T(_(t.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.modelsLabels":r(({item:a})=>[s(c,{editable:!1,tags:a.modelsLabels.map(l=>l.label)},null,8,["tags"])]),"item.tile":r(({item:a})=>[s(S,{variant:"standard",label:a.label,categoryLabel:a.chartCategoryLabel,icon:a.icon,imageId:a.imageId,type:a.chartType,color:t.isSelected(a.id)?t.ColorEnum.Primary:t.ColorEnum.Light,onClick:l=>t.update(a.id)},null,8,["label","categoryLabel","icon","imageId","type","color","onClick"])]),_:2},[R(t.$slots,(a,l)=>({name:l,fn:r(m=>[j(t.$slots,l,A(z(m)))])}))]),1040,["loading","headersOptions","items","tableCode","modelValue","onUpdate:modelValue"])}const M=ae(k,[["render",oe]]);k.__docgenInfo={displayName:"FSBaseChartsList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:scope"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/charts/FSBaseChartsList.vue"]};const Qt={title:"Foundation/Core/Lists/Base Lists/BaseChartsList",component:M,subcomponents:{FSDataTable:E},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["charts1"]},args:{selecteds:[]}}},C={render:t=>({components:{FSBaseChartsList:M},setup(){return{args:t}},template:`
      <FSBaseChartsList
        :tableCode="args.tableCode"
        v-model="args.selecteds"
      />
    `}),args:{tableCode:"charts1"}};var w,$,q;C.parameters={...C.parameters,docs:{...(w=C.parameters)==null?void 0:w.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartsList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartsList
        :tableCode="args.tableCode"
        v-model="args.selecteds"
      />
    \`
  }),
  args: {
    tableCode: 'charts1'
  }
}`,...(q=($=C.parameters)==null?void 0:$.docs)==null?void 0:q.source}}};const Wt=["Default"];export{C as Default,Wt as __namedExportsOrder,Qt as default};
