import{d as B,c as f,w as q,z as b,A as _,B as D,M as w,N as M,C as n,m as N,J as G,K as k,L as E,v as y,G as P,H as j}from"./vue.esm-bundler-BwDfg4wG.js";import{_ as z}from"./lodash-BiW_TGGX.js";import{F as V}from"./FSDataTable-Me_5Some.js";import{F as L}from"./FSIcon-ChaYv6Le.js";import{F as A}from"./FSTagGroup-5FHer4Te.js";import{u as H}from"./useScenarioOrganisations-ClR383ua.js";import{u as J}from"./useScenarioOrganisationTypes-SG9eqpRx.js";import{C as K}from"./useColors-tmPxRJAs.js";import{u as R}from"./useTranslations-CHmpEDXr.js";import{_ as U}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSLoader-CBedVZCM.js";import"./css-DTUiF03J.js";import"./color-BnvS3YzF.js";import"./theme-DkbGhe4v.js";import"./dimensions-yOZi2HlQ.js";import"./elevation-Ba-uT6Vw.js";import"./locale-DTc71_bq.js";import"./FSCol-BEvj3we4.js";import"./FSRow-k5pgBhR1.js";import"./VSpacer-C5S3LEb3.js";import"./FSDataTableUI-cllOIrAS.js";import"./vue-router-BC-FzL9X.js";import"./uuid-DTaye2KM.js";import"./FSCheckbox-Up-USX9A.js";import"./FSSpan-H3zJ0Cfa.js";import"./useSlots-2JqallzA.js";import"./useRules-CJCAsX67.js";import"./VSelectionControl-gUfFxYp8.js";import"./density-CY8ZwxUy.js";import"./VIcon-D-JUvW-a.js";import"./tag-Ceq3l71M.js";import"./proxiedModel-okNizC5Y.js";import"./index-BBm8PRb1.js";import"./VLabel-BAbVzo-k.js";import"./VInput-Bb_DU4hJ.js";import"./index-h4Pvk0JI.js";import"./transition-DbaVUv7M.js";import"./form-CH3j37ax.js";import"./FSCard-ENPT7Hcj.js";import"./FSText-CwwFvnOv.js";import"./FSSearchField-DSDBhq1s.js";import"./FSTextField-C_L-5gHA.js";import"./FSBaseField-3b1naUZS.js";import"./FSButton-jJkg4qCi.js";import"./FSClickable-Y_T-Cq-9.js";import"./VProgressCircular-CmpAWY4m.js";import"./VField-C9nLiyrW.js";import"./loader-ecE02KGk.js";import"./anchor-0YuAsO7w.js";import"./rounded-NuUWeCiM.js";import"./VDefaultsProvider-_csoeOf7.js";import"./forwardRefs-DWGaNmQL.js";import"./index-O1RQoaVh.js";import"./FSSelectField-BAtD035V.js";import"./FSDialogMenu-Rt_YvAbG.js";import"./VDialog-D51psHtT.js";import"./VOverlay-DP3B0xk9.js";import"./display-DC3KmzVA.js";import"./lazy-MJJzC26k.js";import"./router-CeBnHAqN.js";import"./FSSlideGroup-FmBZXb1C.js";import"./group-Co3yQlsH.js";import"./FSToggleSet-nzyxIkxs.js";import"./FSWrapGroup-CzncWNtJ.js";import"./FSFadeOut-D8lX1YMU.js";import"./FSRadio-BZx_I5qq.js";import"./VList-C9PART4F.js";import"./ssrBoot-D00LCOWZ.js";import"./border-CJvl-6Or.js";import"./VImg-DFtMr-E9.js";import"./VSelect-ByKY6ruB.js";import"./VMenu-CbEP2O2_.js";import"./FSDivider-CNRYiEGS.js";import"./FSChip-kw9MOYsi.js";import"./FSOptionGroup-DruPS3EV.js";import"./filter-C1K_d8Vd.js";import"./VBtn-CAkWF00h.js";import"./filter-Cv_nnV1z.js";import"./base-C7fpSlQX.js";import"./useAppOrganisationId-C2bN-F6j.js";import"./serviceFactory-Bd5jifNi.js";import"./composableFactory-fou7heQy.js";import"./FSTag-B1oK3EZ-.js";import"./scenarioChart-DT-qM5Ky.js";import"./timeRange-DtWQBHMx.js";import"./index-DfSX31J9.js";const O=B({name:"FSBaseScenariosList",components:{FSDataTable:V,FSIcon:L,FSTagGroup:A},props:{tableCode:{type:String,required:!0},scenarioOrganisationFilters:{type:Object,required:!1,default:null},scenarioOrganisationTypeFilters:{type:Object,required:!1,default:null},editable:{type:Boolean,required:!1,default:!0},modelValue:{type:Array,default:()=>[],required:!1}},emits:["update:modelValue"],setup(t,{emit:r}){const{$tr:o}=R(),{entities:m,fetching:c,getMany:g}=H(),{entities:s,fetching:p,getMany:a}=J(),i=e=>t.modelValue.includes(e),d=f(()=>[{text:o("entity.scenario.icon","Icon"),value:"icon",sortable:!1},{text:o("entity.scenario.label","Label"),value:"label",sortable:!0},{text:o("entity.scenario.modelLabel","Model label"),value:"modelLabel",sortable:!0},{text:o("entity.scenario.dataCategoryLabel","Data category label"),value:"dataCategoryLabel",sortable:!0},{text:o("ui.common.action",""),value:"action",sortable:!1}]),h=f(()=>m.value.map(e=>({id:`${e.id}_${e.scope}`,modelId:e.modelId,dataCategoryId:e.dataCategoryId,dataCategoryLabel:e.dataCategoryLabel,scenarioId:e.scenarioId,scope:e.scope,label:e.label,modelLabel:e.modelLabel,code:e.code,icon:e.icon,tags:e.tags,criticity:e.criticity,parameters:e.parameters})).concat(s.value.map(e=>({id:`${e.id}_${e.scope}`,modelId:e.modelId,dataCategoryId:e.dataCategoryId,dataCategoryLabel:e.dataCategoryLabel,scenarioId:e.scenarioId,scope:e.scope,label:e.label,modelLabel:e.modelLabel,code:e.code,icon:e.icon,tags:e.tags,criticity:e.criticity,parameters:e.parameters})))),v=()=>{g(t.scenarioOrganisationFilters),a(t.scenarioOrganisationTypeFilters)},$=e=>{i(e)?r("update:modelValue",t.modelValue.filter(I=>I!=e)):r("update:modelValue",[...t.modelValue,e])};return q(()=>[t.scenarioOrganisationFilters,t.scenarioOrganisationTypeFilters],(e,u)=>{(!e&&!u||!z.isEqual(e,u))&&v()},{immediate:!0}),{fetchingScenarioOrganisationTypes:p,fetchingScenarioOrganisations:c,scenarioOrganisationTypes:s,scenarioOrganisations:m,ColorEnum:K,scenarios:h,headers:d,isSelected:i,update:$}}});function x(t,r,o,m,c,g){const s=b("FSTagGroup"),p=b("FSDataTable");return _(),D(p,N({loading:t.fetchingScenarioOrganisationTypes||t.fetchingScenarioOrganisations,headers:t.headers,items:t.scenarios,showSelect:t.$props.editable,tableCode:t.$props.tableCode,modelValue:t.$props.modelValue,"onUpdate:modelValue":r[0]||(r[0]=a=>t.$emit("update:modelValue",a))},t.$attrs),w({"item.icon":n(({item:a})=>[y(L,null,{default:n(()=>[P(j(a.icon),1)]),_:2},1024)]),"item.tags":n(({item:a})=>[y(s,{variant:"slide",editable:!1,tags:a.tags},null,8,["tags"])]),_:2},[M(t.$slots,(a,i)=>({name:i,fn:n(d=>[G(t.$slots,i,k(E(d)))])}))]),1040,["loading","headers","items","showSelect","tableCode","modelValue"])}const T=U(O,[["render",x]]);O.__docgenInfo={displayName:"FSBaseScenariosList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string"},required:!0},{name:"scenarioOrganisationFilters",type:{name:"ScenarioOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"scenarioOrganisationTypeFilters",type:{name:"ScenarioOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/scenarios/FSBaseScenariosList.vue"]};const It={title:"Foundation/Core/Lists/Base Lists/BaseScenariosList",component:T,subcomponents:{FSDataTable:V},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["scenarios1"]}}},l={render:t=>({components:{FSBaseScenariosList:T},setup(){return{args:t}},template:`
      <FSBaseScenariosList
        v-model:modelValue="args.modelValue"
        :tableCode="args.tableCode"
      />
    `}),args:{tableCode:"scenarios1",modelValue:[]}};var S,C,F;l.parameters={...l.parameters,docs:{...(S=l.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseScenariosList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseScenariosList
        v-model:modelValue="args.modelValue"
        :tableCode="args.tableCode"
      />
    \`
  }),
  args: {
    tableCode: 'scenarios1',
    modelValue: []
  }
}`,...(F=(C=l.parameters)==null?void 0:C.docs)==null?void 0:F.source}}};const Bt=["Default"];export{l as Default,Bt as __namedExportsOrder,It as default};
