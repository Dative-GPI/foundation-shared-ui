import{a as L,b as P}from"./properties-Qw-O9fbT.js";import{F as N}from"./FSAutocompleteField-DyV5nib5.js";import{d as j,c,B as T,E as n,m as z,I as h,J as R,k as f,G,D as H,H as J,A as K,K as W}from"./vue.esm-bundler-CocPPKUI.js";import{F as $}from"./FSButton-VjwKfCr9.js";import{F as Q}from"./FSChip-FYuzsxJw.js";import{F as k}from"./FSIcon-CKNHHVc2.js";import{u as X}from"./useRoleOrganisationTypes-D04k57yj.js";import{u as Y}from"./useRoleOrganisations-fhsvhFMx.js";import{u as v}from"./useTranslations-DJaIYmO0.js";import{C as g}from"./useColors-DUufJJPH.js";import{u as Z}from"./useAutocomplete-D_03bGX7.js";import{_ as x}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as ee}from"./VAutocomplete-B5-TedGs.js";import"./FSSearchField-BChNb6vP.js";import"./FSTextField-CrSrBFtk.js";import"./FSBaseField-BHCTmkg_.js";import"./FSSpan-DrSEJIpr.js";import"./useBreakpoints-DZlz3-56.js";import"./useSlots-D4bv69lA.js";import"./FSCol-79-COv64.js";import"./css-mt76hoAn.js";import"./FSRow-BvJ7lU5E.js";import"./useRules-C3-AmzzE.js";import"./VField-CEhz-0ZK.js";import"./index-DfBdMsnv.js";import"./color-yBCdco2I.js";import"./theme-DhcBBMcp.js";import"./transition-BuKnRONq.js";import"./VLabel-HvE-XSAC.js";import"./VInput-DhPQv4YC.js";import"./locale-_fONYh-8.js";import"./VIcon-Qz-Il978.js";import"./density-DZuLaB-B.js";import"./dimensions-C9PuMYcl.js";import"./proxiedModel-DvocDLKO.js";import"./loader-B3-0Tc48.js";import"./VProgressCircular-BMkR7ln7.js";import"./resizeObserver-QYhQJr79.js";import"./anchor-C7UfIAXa.js";import"./rounded-Cjf6r1y4.js";import"./VDefaultsProvider-Clc0K3gC.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-lkzvYdnq.js";import"./FSDialogMenu-CeOfi1Vz.js";import"./FSCard-JQNJPDhp.js";import"./VDialog-Cy-8Xjn8.js";import"./VOverlay-BofqjN94.js";import"./display-BmuJHlI4.js";import"./lazy-CpkO2kQj.js";import"./router-Btsphvl6.js";import"./scopeId-LQkRlG9f.js";import"./FSSlideGroup-BpYleAPY.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-BGw3zb-K.js";import"./VSlideGroup-D3ZQzm0f.js";import"./group-CbiZXdYV.js";import"./VSlideGroupItem-BQNaTCX0.js";import"./FSToggleSet-BAu9OVEz.js";import"./FSWrapGroup-CR1U-5kP.js";import"./FSCheckbox-ChCYq6Yz.js";import"./VCheckboxBtn-B3VCaA0L.js";import"./VSelectionControl-BneTlqNp.js";import"./index-BgX1FNqJ.js";import"./FSFadeOut-BaaWP8Xe.js";import"./FSLoader-BeIlBGG_.js";import"./elevation-CsFMJmSN.js";import"./FSRadio-DSN2e6_O.js";import"./VSelect-CKWfJZu2.js";import"./VList-BU_HHy4r.js";import"./ssrBoot-B-cFki3l.js";import"./border-B0huqYee.js";import"./VImg-BaN5zAl6.js";import"./VMenu-uiC9_CJ1.js";import"./filter-CdJ0RAiZ.js";import"./FSRouterLink-CitgaMwY.js";import"./vue-router-BKog_lZN.js";import"./FSClickable-6FPdriKA.js";import"./permissionInfos-BPDgTHQl.js";import"./base-D6U4mRRi.js";import"./useAppOrganisationId-DacmST4-.js";import"./composableFactory-DRFDSLtA.js";import"./serviceFactory-aQiBqOvf.js";import"./_commonjsHelpers-BosuxZz1.js";import"./lodash-Zo30T2Bj.js";import"./index-_Z9wfsFC.js";import"./filter-BQ0STsnY.js";import"./index-DKSn5ED3.js";import"./theme-DUXgegjh.js";import"./transition-DkkipAGr.js";import"./VInput-DubWEo8m.js";import"./dimensions-uS3VphvY.js";import"./proxiedModel-B1JMxAMo.js";import"./VIcon-ztK8zS1c.js";import"./color-BK5ZIy-X.js";import"./icons-BwWw16hn.js";import"./density-CqIhSxaR.js";import"./VMenu-DpEzbcEb.js";import"./display-BGETPCpm.js";import"./lazy-DRlBmSL1.js";import"./VDefaultsProvider-Bf2Uq0GP.js";import"./goto-CDc73PVO.js";import"./VDivider-DEKgrCTA.js";import"./group-DerKiMss.js";var r=(e=>(e[e.None=0]="None",e[e.Organisation=1]="Organisation",e[e.OrganisationType=2]="OrganisationType",e))(r||{});const{$tr:y}=v(),oe=e=>{switch(e){case r.None:return y("ui.common.none","None");case r.Organisation:return y("ui.common.custom","Custom");case r.OrganisationType:return y("ui.common.shared","Shared")}},te=e=>{switch(e){case r.None:return g.Error;case r.Organisation:return g.Primary;case r.OrganisationType:return g.Warning}},B=j({name:"FSAutocompleteRole",components:{FSAutocompleteField:N,FSButton:$,FSChip:Q,FSIcon:k},props:{roleOrganisationTypeFilters:{type:Object,required:!1,default:null},roleOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:r.None},ignoreRoleOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreRoleOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(e,{emit:a}){const{getMany:O,fetching:V,entities:F}=X(),{getMany:b,fetching:i,entities:s}=Y(),{$tr:t}=v(),u=c(()=>F.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:r.OrganisationType})).concat(s.value.map(o=>({id:o.id,icon:o.icon,label:o.label,type:r.Organisation})))),D=c(()=>_.value&&(V.value||i.value)),w=c(()=>e.multiple&&e.modelValue?t("autocomplete.role.placeholder","{0} role(s) selected",e.modelValue.length):null),E=o=>{if(Array.isArray(o)){const l=o.map(d=>d.id),S=o.map(d=>d.type);a("update:modelValue",l),a("update:type",S),a("update",{modelValue:l,type:S})}else a("update:modelValue",o==null?void 0:o.id),a("update:type",o==null?void 0:o.type),a("update",{modelValue:o==null?void 0:o.id,type:o==null?void 0:o.type})},I=o=>{const l=[];return e.ignoreRoleOrganisations||l.push(b({...e.roleOrganisationFilters,search:o??void 0})),e.ignoreRoleOrganisationTypes||l.push(O({...e.roleOrganisationTypeFilters,search:o??void 0})),Promise.all(l)},{toggleSet:M,init:_,onUpdate:U}=Z(u,[()=>e.roleOrganisationTypeFilters,()=>e.roleOrganisationFilters],a,I,E);return{placeholder:w,toggleSet:M,RoleType:r,loading:D,roles:u,roleTypeColor:te,roleTypeLabel:oe,onUpdate:U}}});function re(e,a,O,V,F,b){const i=h("FSChip"),s=h("FSAutocompleteField");return R(),T(s,z({label:e.$props.label??e.$tr("ui.common.role","Role"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,loading:e.loading,items:e.roles,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-prepend":n(({item:t})=>[t.icon?(R(),T(k,{key:0},{default:n(()=>[K(W(t.icon),1)]),_:2},1024)):J("",!0)]),"item-append":n(({item:t})=>[f(i,{color:e.roleTypeColor(t.type),label:e.roleTypeLabel(t.type)},null,8,["color","label"])]),"toggle-set-item":n(t=>[f($,{prependIcon:t.item.icon,variant:t.getVariant(t.item),color:t.getColor(t.item),class:G(t.getClass(t.item)),label:t.item.label,onClick:u=>t.toggle(t.item)},H({_:2},[t.item.type?{name:"append",fn:n(()=>[f(i,{color:e.roleTypeColor(t.item.type),label:e.roleTypeLabel(t.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","loading","items","modelValue","onUpdate:modelValue"])}const p=x(B,[["render",re]]);B.__docgenInfo={displayName:"FSAutocompleteRole",exportName:"default",description:"",tags:{},props:[{name:"roleOrganisationTypeFilters",type:{name:"RoleOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"roleOrganisationFilters",type:{name:"RoleOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"RoleType[] | RoleType"},required:!1,defaultValue:{func:!1,value:"RoleType.None"}},{name:"ignoreRoleOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreRoleOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteRole.vue"]};const ot={title:"Foundation/Core/Autocompletes/AutocompleteRole",component:p,tags:["autodocs"],argTypes:{...P([N,ee],p),...L(p)}},m={render:e=>({components:{FSAutocompleteRole:p},setup(){return{args:e}},template:`
    <FSAutocompleteRole
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:r.None}};var A,C,q;m.parameters={...m.parameters,docs:{...(A=m.parameters)==null?void 0:A.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteRole
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteRole
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: RoleType.None
  }
}`,...(q=(C=m.parameters)==null?void 0:C.docs)==null?void 0:q.source}}};const tt=["Default"];export{m as Default,tt as __namedExportsOrder,ot as default};
