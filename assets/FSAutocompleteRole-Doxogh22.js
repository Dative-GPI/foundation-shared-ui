var j=Object.defineProperty;var z=(e,o,l)=>o in e?j(e,o,{enumerable:!0,configurable:!0,writable:!0,value:l}):e[o]=l;var n=(e,o,l)=>z(e,typeof o!="symbol"?o+"":o,l);import{d as Y,c as C,y as w,z as p,A as d,B as s,m as W,E as g,G as m,D as O,L as r,S as H}from"./vue.esm-bundler-gWFTcvUr.js";import{F as J}from"./FSAutocompleteField-b3Xz2NwJ.js";import{F as N}from"./FSButton-CDk00Rln.js";import{F as K}from"./FSChip-C4GLzprG.js";import{_ as h}from"./FSIcon-C5ELG8c1.js";import{_ as S}from"./FSSpan-BlywDO8Z.js";import{_ as F}from"./FSRow-Bpa2jjpJ.js";import{P as V}from"./permissionInfos-BPDgTHQl.js";import{C as A}from"./base-DV1z3red.js";import{S as L}from"./serviceFactory-Bd5jifNi.js";import{C as $}from"./composableFactory-CZGZ62iP.js";import{u as Q}from"./useAutocomplete-DqlTmpvX.js";import{C as T}from"./useColors-vfWFlOSD.js";import{u as X}from"./useTranslations-DebMVrXy.js";import{_ as Z}from"./_plugin-vue_export-helper-DlAUqK2U.js";var i=(e=>(e[e.None=0]="None",e[e.Organisation=1]="Organisation",e[e.OrganisationType=2]="OrganisationType",e))(i||{});class q{constructor(o){n(this,"id");n(this,"roleId");n(this,"organisationId");n(this,"scope");n(this,"userType");n(this,"icon");n(this,"code");n(this,"label");n(this,"tags");n(this,"permissions");this.id=o.id,this.roleId=o.roleId,this.organisationId=o.organisationId,this.scope=o.scope,this.userType=o.userType,this.icon=o.icon,this.code=o.code,this.label=o.label,this.tags=o.tags.slice(),this.permissions=o.permissions.map(l=>new V(l))}}class x extends q{constructor(l){super(l);n(this,"description");this.description=l.description}}class v{constructor(o){n(this,"id");n(this,"roleId");n(this,"organisationTypeId");n(this,"organisationTypeLabel");n(this,"icon");n(this,"code");n(this,"label");n(this,"scope");n(this,"userType");n(this,"tags");n(this,"permissions");this.id=o.id,this.roleId=o.roleId,this.organisationTypeId=o.organisationTypeId,this.organisationTypeLabel=o.organisationTypeLabel,this.scope=o.scope,this.userType=o.userType,this.icon=o.icon,this.code=o.code,this.label=o.label,this.scope=o.scope,this.userType=o.userType,this.tags=o.tags.slice(),this.permissions=o.permissions.map(l=>new V(l))}}class ee extends v{constructor(l){super(l);n(this,"description");this.description=l.description}}const U=()=>`${A()}/role-organisations`,oe=e=>`${U()}/${encodeURIComponent(e)}`,E=()=>`${A()}/role-organisation-types`,te=e=>`${E()}/${encodeURIComponent(e)}`,ne=new L("roleOrganisation",x).createComplete(U,oe,q),ae=$.getMany(ne),le=new L("roleOrganisationType",ee).create(e=>e.build(e.addGet(te),e.addGetMany(E,v),e.addNotify())),ie=$.getMany(le),{$tr:b}=X(),se=e=>{switch(e){case i.None:return b("ui.role-type.none","None");case i.Organisation:return b("ui.role-type.organisation","Custom");case i.OrganisationType:return b("ui.role-type.organisation-type","Shared")}},re=e=>{switch(e){case i.None:return T.Error;case i.Organisation:return T.Primary;case i.OrganisationType:return T.Warning}},k=Y({name:"FSAutocompleteRole",components:{FSAutocompleteField:J,FSButton:N,FSChip:K,FSIcon:h,FSSpan:S,FSRow:F},props:{roleOrganisationTypeFilters:{type:Object,required:!1,default:null},roleOrganisationFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:Number,required:!1,default:i.None},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue","update:type"],setup(e,{emit:o}){const{getMany:l,fetching:R,entities:I}=ie(),{getMany:_,fetching:c,entities:y}=ae(),t=C(()=>I.value.map(a=>({id:a.id,icon:a.icon,label:a.label,type:i.OrganisationType})).concat(y.value.map(a=>({id:a.id,icon:a.icon,label:a.label,type:i.Organisation})))),u=C(()=>P.value&&(R.value||c.value)),D=a=>{Array.isArray(a)?(o("update:modelValue",a.map(f=>f.id)),o("update:type",a.map(f=>f.type))):(o("update:modelValue",a==null?void 0:a.id),o("update:type",a==null?void 0:a.type))},G=a=>Promise.all([l({...e.roleOrganisationTypeFilters,search:a??void 0}),_({...e.roleOrganisationFilters,search:a??void 0})]),{toggleSet:M,init:P,onUpdate:B}=Q(t,[()=>e.roleOrganisationTypeFilters,()=>e.roleOrganisationFilters],o,G,D);return{toggleSet:M,RoleType:i,loading:u,roles:t,roleTypeColor:re,roleTypeLabel:se,onUpdate:B}}});function ce(e,o,l,R,I,_){const c=w("FSChip"),y=w("FSAutocompleteField");return p(),d(y,W({toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,loading:e.loading,items:e.roles,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"autocomplete-selection":s(({item:t})=>[e.$props.modelValue?(p(),d(F,{key:0,align:"center-center",wrap:!1},{default:s(()=>[t.raw.icon?(p(),d(h,{key:0},{default:s(()=>[g(m(t.raw.icon),1)]),_:2},1024)):O("",!0),r(S,null,{default:s(()=>[g(m(t.raw.label),1)]),_:2},1024),r(c,{color:e.roleTypeColor(t.raw.type),label:e.roleTypeLabel(t.raw.type),editable:!1},null,8,["color","label"])]),_:2},1024)):O("",!0)]),"item-label":s(({item:t,font:u})=>[r(F,{align:"center-left",wrap:!1},{default:s(()=>[t.raw.icon?(p(),d(h,{key:0},{default:s(()=>[g(m(t.raw.icon),1)]),_:2},1024)):O("",!0),r(S,{font:u},{default:s(()=>[g(m(t.raw.label),1)]),_:2},1032,["font"]),r(c,{color:e.roleTypeColor(t.raw.type),label:e.roleTypeLabel(t.raw.type),editable:!1},null,8,["color","label"])]),_:2},1024)]),"toggle-set-item":s(t=>[r(N,{prependIcon:t.item.icon,variant:t.getVariant(t.item),color:t.getColor(t.item),class:H(t.getClass(t.item)),label:t.item.label,onClick:u=>t.toggle(t.item)},{append:s(()=>[r(c,{color:e.roleTypeColor(t.item.type),label:e.roleTypeLabel(t.item.type),editable:!1},null,8,["color","label"])]),_:2},1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["toggleSet","multiple","loading","items","modelValue","onUpdate:modelValue"])}const Ce=Z(k,[["render",ce]]);k.__docgenInfo={displayName:"FSAutocompleteRole",exportName:"default",description:"",tags:{},props:[{name:"roleOrganisationTypeFilters",type:{name:"RoleOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"roleOrganisationFilters",type:{name:"RoleOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"RoleType"},required:!1,defaultValue:{func:!1,value:"RoleType.None"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteRole.vue"]};export{Ce as F};
