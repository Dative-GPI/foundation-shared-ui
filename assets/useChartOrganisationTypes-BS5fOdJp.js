var g=Object.defineProperty;var y=(s,i,e)=>i in s?g(s,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[i]=e;var t=(s,i,e)=>y(s,typeof i!="symbol"?i+"":i,e);import{C,a as h,b,c as u,d as T,e as p,f as I,g as f,h as S,i as O,j as w}from"./chartSerie-CU1F_Cev.js";import{C as x}from"./base-LOOo-Z1R.js";import{S as r}from"./serviceFactory-Bd5jifNi.js";import{C as l}from"./composableFactory-D0eCIUsD.js";class c{constructor(i){t(this,"id");t(this,"imageId");t(this,"chartId");t(this,"organisationTypeId");t(this,"organisationTypeLabel");t(this,"chartCategoryId");t(this,"chartCategoryLabel");t(this,"scope");t(this,"label");t(this,"title");t(this,"code");t(this,"icon");t(this,"tags");t(this,"multiple");t(this,"chartType");t(this,"modelsLabels");this.id=i.id,this.imageId=i.imageId,this.chartId=i.chartId,this.organisationTypeId=i.organisationTypeId,this.organisationTypeLabel=i.organisationTypeLabel,this.chartCategoryId=i.chartCategoryId,this.chartCategoryLabel=i.chartCategoryLabel,this.scope=i.scope,this.label=i.label,this.title=i.title,this.code=i.code,this.icon=i.icon,this.tags=i.tags.slice(),this.multiple=i.multiple,this.chartType=i.chartType,this.modelsLabels=i.modelsLabels.map(e=>new C(e))}}class o extends c{constructor(e){super(e);t(this,"labelDefault");t(this,"titleDefault");t(this,"colorSet");t(this,"colorSeed");t(this,"xAxis");t(this,"aggregates");t(this,"dynamicVariables");t(this,"chartVariables");t(this,"chartPresets");t(this,"chartPresetFilters");t(this,"chartPlots");t(this,"chartSeries");t(this,"chartOperands");t(this,"chartFilters");t(this,"chartModifiers");t(this,"yAxis");t(this,"translations");this.labelDefault=e.labelDefault,this.titleDefault=e.titleDefault,this.colorSet=e.colorSet,this.colorSeed=e.colorSeed,this.xAxis=e.xAxis?new h(e.xAxis):null,this.aggregates=e.aggregates,this.dynamicVariables=e.dynamicVariables,this.chartVariables=e.chartVariables.map(a=>new b(a)),this.chartPresets=e.chartPresets.map(a=>new u(a)),this.chartPresetFilters=e.chartPresetFilters.map(a=>new T(a)),this.chartPlots=e.chartPlots.map(a=>new p(a)),this.chartSeries=e.chartSeries.map(a=>new I(a)),this.chartOperands=e.chartOperands.map(a=>new f(a)),this.chartFilters=e.chartFilters.map(a=>new S(a)),this.chartModifiers=e.chartModifiers.map(a=>new O(a)),this.yAxis=e.yAxis.map(a=>new h(a)),this.translations=e.translations.map(a=>new w(a))}}const n=()=>`${x()}/chart-organisation-types`,d=s=>`${n()}/${encodeURIComponent(s)}`,A=new r("chartOrganisationType",o).createComplete(n,d,c),P=new r("chartOrganisationType",o).create(s=>s.build(s.addNotify(i=>({...r.addCustom("duplicate",(e,a)=>e.patch(d(a)),e=>{const a=new o(e);return i.notify("update",a),a})})))),_=l.getMany(A);l.custom(P.duplicate);export{_ as u};
