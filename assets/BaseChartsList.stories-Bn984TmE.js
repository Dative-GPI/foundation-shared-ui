import{a as k,b as N}from"./properties-DwZ_iDct.js";import{F as I}from"./FSDataTable-BxpbJjb5.js";import{F as R}from"./FSDataTableUI-DxqgE6HR.js";import{d as A,c as v,w as G,z as _,B as P,Q as j,C as r,m as z,G as d,H as w,L as H,M as J,N as Q,P as s,I as V,J as B,E as K}from"./vue.esm-bundler-PTWG9x2X.js";import{_ as W}from"./lodash-BrWYvtk2.js";import{F as X}from"./FSChartTileUI-rNDVx3M7.js";import{F as Y}from"./FSTagGroup-BCmEe6Qe.js";import{F as Z}from"./FSImage-D6wIZvVb.js";import{F as b}from"./FSIcon-DQMOs0-E.js";import{_ as E}from"./FSRow-DPcQMiM9.js";import{u as x}from"./useChartOrganisations-7gnGEmtu.js";import{u as ee}from"./useChartOrganisationTypes-CbaHj2T2.js";import{c as te,e as $,C as ae}from"./chartsTools-B-i7eD4N.js";import{C as oe}from"./useColors-DSUu_QQ4.js";import{g as re}from"./enumTools-BEsapygt.js";import{_ as le}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./FSLoader-DnFcYh1x.js";import"./useBreakpoints-W7XGW48y.js";import"./css-B90wD3BD.js";import"./color-CCpgnDIk.js";import"./theme-D6MQh39g.js";import"./dimensions-v18atrWI.js";import"./elevation-CrSwNJwg.js";import"./locale-Cz_4DTJh.js";import"./FSCol-qfATdd_b.js";import"./base-BJ27TNVe.js";import"./useAppOrganisationId-CurthI5S.js";import"./composableFactory-BVozujU4.js";import"./serviceFactory-B3o6Bvwt.js";import"./_commonjsHelpers-BosuxZz1.js";import"./uuid-DTaye2KM.js";import"./FSFadeOut-BR2NoxgI.js";import"./vue-router-_5OpMgKw.js";import"./FSText-Da5isN0I.js";import"./useSlots-BG_ZhEqK.js";import"./FSTile-oBYIwUj0.js";import"./FSClickable-KpP1cmTZ.js";import"./FSRouterLink-C06pLVSG.js";import"./FSCard-CRoBY3gL.js";import"./VProgressCircular-eoxb555W.js";import"./resizeObserver-C17Kgm90.js";import"./VIcon-DIeegzqR.js";import"./FSCheckbox-D0eLEsDk.js";import"./FSSpan-yJEd2pn-.js";import"./useRules-D0leB7Wy.js";import"./VSelectionControl-Fvr0iuTu.js";import"./density-CznkHGGy.js";import"./proxiedModel-CvHSoKPb.js";import"./index-Dqqa47M6.js";import"./VLabel-BNJ33aDR.js";import"./VInput-C2FcZlE6.js";import"./index-b-ADC_Il.js";import"./transition-QV8dDJB9.js";import"./FSSearchField-BeidTVNh.js";import"./FSTextField-Du_6UKzN.js";import"./FSBaseField-BF-P1IfK.js";import"./FSButton-CqjbOz0n.js";import"./VField-w4x2OZhg.js";import"./loader-BqT2mYY7.js";import"./anchor-BcF6JBj1.js";import"./rounded-BbPXzFqc.js";import"./VDefaultsProvider-aDgtYDKn.js";import"./forwardRefs-DWGaNmQL.js";import"./index-BNomsh5u.js";import"./useTranslations-BnE68qER.js";import"./FSSelectField-CdRtA_Eu.js";import"./VList-Dqx2Wq64.js";import"./VDialog-DW8Lwwmu.js";import"./VOverlay-CoK8W0Lk.js";import"./display-CESVul9-.js";import"./scopeId-CROTNdIb.js";import"./router-BQjY5_kj.js";import"./ssrBoot-DfimFJGl.js";import"./border-CIYj3WlL.js";import"./VImg-CBGPWIu-.js";import"./FSSlideGroup-Cnb4B0wP.js";import"./FSButtonNextIcon-BgOE6pA_.js";import"./VSlideGroupItem-C6-4cvTl.js";import"./group-8tJUjatm.js";import"./FSToggleSet-2ksJh9hi.js";import"./FSWrapGroup-8ynKQ69u.js";import"./FSRadio-dWKh4KJE.js";import"./VSelect-D-RlUgcB.js";import"./VMenu-BiZHvw8b.js";import"./FSDivider-D-FRSUwM.js";import"./FSChip-BOsjgfVT.js";import"./FSOptionGroup-CiKAPU5_.js";import"./filter-C1K_d8Vd.js";import"./VBtn-oNOab7rO.js";import"./filter-qsWrMVs0.js";import"./FSTag-CFGgNd-A.js";import"./FSImageUI-Cd9yfhhj.js";import"./useImages-B58XKdkx.js";import"./base-CmdGny12.js";import"./useAppAuthToken-3n1rBHGl.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./index-DfSX31J9.js";const M=A({name:"FSBaseChartsList",components:{FSChartTileUI:X,FSDataTable:I,FSTagGroup:Y,FSImage:Z,FSIcon:b,FSRow:E},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},modelValue:{type:Array,default:()=>[],required:!1},selectable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update","update:modelValue","update:scope"],setup(t,{emit:i}){const{entities:F,fetching:L,getMany:O}=x(),{entities:u,fetching:S,getMany:c}=ee(),g=e=>t.modelValue.includes(e),T=()=>{O(t.chartOrganisationFilters),c(t.chartOrganisationTypeFilters)},f=v(()=>F.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})).concat(u.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})))),a=v(()=>({modelsLabels:{fixedFilters:u.value.map(e=>e.modelsLabels).reduce((e,o)=>{for(const l of o)e.map(h=>h.id).includes(l.id)||e.push(l);return e},[]).map(e=>({value:e.id,text:e.label})).concat({value:"",text:"--"}),methodFilter:(e,o)=>o.length==0&&e==""||o.length>0&&o.some(l=>l.id==e)},chartType:{fixedFilters:re(ae).map(e=>({value:e.value,text:$(e.value)})),methodFilter:(e,o)=>e==o}})),n=e=>{g(e)?m(t.modelValue.filter(l=>l!=e)):t.singleSelect?m([e]):m([...t.modelValue,e])},m=e=>{if(!e){i("update:modelValue",[]),i("update:scope",[]),i("update",{modelValue:[],scope:[]});return}const o=f.value.filter(p=>e.includes(p.id)),l=o.map(p=>p.id),h=o.map(p=>p.scope);i("update:modelValue",l),i("update:scope",h),i("update",{modelValue:l,scope:h})};return G(()=>[t.chartOrganisationFilters,t.chartOrganisationTypeFilters],(e,o)=>{(!e&&!o||!W.isEqual(e,o))&&T()},{immediate:!0}),{fetchingChartOrganisationTypes:S,fetchingChartOrganisations:L,chartOrganisationTypes:u,chartOrganisations:F,headersOptions:a,ColorEnum:oe,charts:f,chartTypeLabel:$,isSelected:g,chartIcon:te,onSelect:m,update:n}}});function se(t,i,F,L,O,u){const S=d("FSImage"),c=d("FSTagGroup"),g=d("FSText"),T=d("FSChartTileUI"),f=d("FSDataTable");return w(),_(f,z({defaultMode:"iterator",loading:t.fetchingChartOrganisationTypes||t.fetchingChartOrganisations,headersOptions:t.headersOptions,items:t.charts,selectable:t.$props.selectable,singleSelect:t.$props.singleSelect,tableCode:t.$props.tableCode,modelValue:t.$props.modelValue,"onUpdate:modelValue":t.onSelect},t.$attrs),P({"header.imageId-title":r(()=>[s(b,null,{default:r(()=>[V(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[s(b,null,{default:r(()=>[V(B(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(w(),_(S,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):K("",!0)]),"item.tags":r(({item:a})=>[s(c,{variant:"slide",showRemove:!1,tags:a.tags},null,8,["tags"])]),"item.chartType":r(({item:a})=>[s(E,{wrap:!1},{default:r(()=>[s(b,{icon:t.chartIcon(a.chartType)},null,8,["icon"]),s(g,null,{default:r(()=>[V(B(t.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.modelsLabels":r(({item:a})=>[s(c,{showRemove:!1,tags:a.modelsLabels.map(n=>n.label)},null,8,["tags"])]),"item.tile":r(({item:a})=>[s(T,{label:a.label,categoryLabel:a.chartCategoryLabel,icon:a.icon,imageId:a.imageId,type:a.chartType,singleSelect:t.$props.singleSelect,selectable:t.$props.selectable,modelValue:t.isSelected(a.id),"onUpdate:modelValue":n=>t.update(a.id)},null,8,["label","categoryLabel","icon","imageId","type","singleSelect","selectable","modelValue","onUpdate:modelValue"])]),_:2},[j(t.$slots,(a,n)=>({name:n,fn:r(m=>[H(t.$slots,n,J(Q(m)))])}))]),1040,["loading","headersOptions","items","selectable","singleSelect","tableCode","modelValue","onUpdate:modelValue"])}const C=le(M,[["render",se]]);M.__docgenInfo={displayName:"FSBaseChartsList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:scope"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/charts/FSBaseChartsList.vue"]};const Yt={title:"Foundation/Core/Lists/Base Lists/BaseChartsList",component:C,subcomponents:{FSDataTable:I},tags:["autodocs"],argTypes:{...N([I,R],C),...k(C),tableCode:{control:"select",options:["charts1"]}}},y={render:t=>({components:{FSBaseChartsList:C},setup(){return{args:t}},template:`
      <FSBaseChartsList
        :onClick:row="null"
        v-model:modelValue="args.modelValue"
        v-model:scope="args.scope"
        v-bind="args"
      />
    `}),args:{tableCode:"charts1",modelValue:[]}};var q,U,D;y.parameters={...y.parameters,docs:{...(q=y.parameters)==null?void 0:q.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartsList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartsList
        :onClick:row="null"
        v-model:modelValue="args.modelValue"
        v-model:scope="args.scope"
        v-bind="args"
      />
    \`
  }),
  args: {
    tableCode: 'charts1',
    modelValue: []
  }
}`,...(D=(U=y.parameters)==null?void 0:U.docs)==null?void 0:D.source}}};const Zt=["Default"];export{y as Default,Zt as __namedExportsOrder,Yt as default};
