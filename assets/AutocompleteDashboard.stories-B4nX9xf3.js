import{a as L,b as P}from"./properties-Qw-O9fbT.js";import{F as C}from"./FSAutocompleteField-ChGdda7D.js";import{d as z,c as u,B as S,E as l,m as G,I as V,J as O,k as c,G as H,D as J,H as K,A as Q,K as R}from"./vue.esm-bundler-CC_jVOJ5.js";import{F as w}from"./FSButton-Czf3beC8.js";import{F as W}from"./FSChip-DtJe-ffy.js";import{F as $}from"./FSIcon-CeLDRxMK.js";import{u as X}from"./useDashboardOrganisationTypes-Dg0R0vYb.js";import{u as Y}from"./useDashboardOrganisations-lO0xhGN1.js";import{u as Z}from"./useDashboardShallows-ClxVY_Oz.js";import{d as x,a as ee}from"./dashboards-D37KKZde.js";import{D as i}from"./dashboards-JSNI7pIu.js";import{u as ae}from"./useAutocomplete-BT_5GYCQ.js";import{u as oe}from"./useTranslations-5XSl7qXA.js";import{_ as te}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as re}from"./VAutocomplete-C_uG8JE-.js";import"./FSSearchField-X1df83qn.js";import"./FSTextField-CTUDqfDL.js";import"./FSBaseField-Bo38Hl_f.js";import"./FSSpan-DkNsO5wd.js";import"./useBreakpoints-BMcJFLA8.js";import"./useSlots-C8jkAuOW.js";import"./FSCol-DVEaUPKl.js";import"./css-DTGEi_Ca.js";import"./FSRow-CjY3icuR.js";import"./useColors-BXuuHMxE.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-Bp81IclV.js";import"./useRules-Da0JLBaA.js";import"./VField-CnDxsm3U.js";import"./index-Dylhq_Dl.js";import"./color-BM2dSUAO.js";import"./transition-Ucf2Ovas.js";import"./VLabel-kKpu5iXd.js";import"./VInput-0C1kQySn.js";import"./locale-K9DBMW2q.js";import"./VIcon-BOLLMMm0.js";import"./density-mssFUWH2.js";import"./dimensions-TKp8HHzB.js";import"./proxiedModel-Nw0LX-ta.js";import"./loader-CbVzlK-r.js";import"./VProgressCircular-B7HKciov.js";import"./resizeObserver-BZ0AJw4z.js";import"./anchor-S0Fc85Gi.js";import"./rounded-Cy4gG01O.js";import"./VDefaultsProvider-CuIagDb9.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-B48vLg-P.js";import"./FSDialogMenu-CWcRHPoR.js";import"./FSCard-twwkVLSp.js";import"./VDialog-fWvZSkPk.js";import"./VOverlay-DXMNyzvF.js";import"./display-CpM-3U3n.js";import"./lazy-BrZUVd24.js";import"./router-kuDvkEMM.js";import"./scopeId-BJNiFHH-.js";import"./FSSlideGroup-nu8Cr66q.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-CsckSPrB.js";import"./VSlideGroup-DVr5PPvN.js";import"./group-CxQl3dDS.js";import"./VSlideGroupItem-Bl-P3Ech.js";import"./FSToggleSet-CEKaVblF.js";import"./FSWrapGroup-Cr3q9yBs.js";import"./FSCheckbox-D-xuSzdC.js";import"./VCheckboxBtn-C85wpeer.js";import"./VSelectionControl-CvHa2RXZ.js";import"./index-DWDx8SXO.js";import"./FSFadeOut-DU3Ke7qi.js";import"./FSLoader-0nGK1qhA.js";import"./elevation-CjJG1XnK.js";import"./FSRadio-QZhD_0uB.js";import"./VSelect-rJC_8mRT.js";import"./VList-C5ZFMMa0.js";import"./ssrBoot-CyKRGZ4o.js";import"./border-BnR_N-bS.js";import"./VImg-BmPSKt86.js";import"./VMenu-DWktgpYO.js";import"./filter-DunZ8aFg.js";import"./FSRouterLink-DFrDtHuc.js";import"./vue-router-CE1XKJtL.js";import"./FSClickable-DFmwvck2.js";import"./dashboardTranslation-DZP1AHwx.js";import"./useAppLanguageCode-DwRThLpm.js";import"./lodash-Zo30T2Bj.js";import"./base-Cj4tO-2v.js";import"./useAppOrganisationId-DWUnIwce.js";import"./composableFactory-7f7_oyFS.js";import"./serviceFactory-aQiBqOvf.js";import"./pathCrumb-Db-cq5HI.js";import"./filter-D1UR3hsR.js";import"./index-Dqg0TTWH.js";import"./theme-Dr63acs7.js";import"./transition-C-FpXdho.js";import"./VInput-DLkUt0lp.js";import"./dimensions-Da35Ei1o.js";import"./proxiedModel-bjdrrHqV.js";import"./VIcon-BcNWhSjn.js";import"./color-C0yweL_m.js";import"./icons-_5OLM8s6.js";import"./density-DeV3WOwj.js";import"./VMenu-D-pFn2q3.js";import"./display-D7GaAsq5.js";import"./lazy-DxXQL0A4.js";import"./VDefaultsProvider-BXUMBw6n.js";import"./goto-DfPTJcvo.js";import"./VDivider-CVQ4TAeg.js";import"./group-CCLuHEuz.js";const v=z({name:"FSAutocompleteDashboard",components:{FSAutocompleteField:C,FSButton:w,FSChip:W,FSIcon:$},props:{dashboardOrganisationTypeFilters:{type:Object,required:!1,default:null},dashboardOrganisationFilters:{type:Object,required:!1,default:null},dashboardShallowFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},type:{type:[Array,Number],required:!1,default:i.None},ignoreDashboardOrganisationTypes:{type:Boolean,required:!1,default:!1},ignoreDashboardOrganisations:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update","update:modelValue","update:type"],setup(a,{emit:t}){const{getMany:f,fetching:b,entities:g}=X(),{getMany:h,fetching:n,entities:m}=Y(),{getMany:o,fetching:y,entities:N}=Z(),{$tr:k}=oe(),D=u(()=>g.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.OrganisationType})).concat(m.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.Organisation}))).concat(N.value.map(e=>({id:e.id,icon:e.icon,label:e.label,type:i.Shallow})))),B=u(()=>j.value&&(b.value||n.value||y.value)),M=u(()=>a.multiple&&a.modelValue?k("autocomplete.dashboard.placeholder","{0} dashboard(s) selected",a.modelValue.length):null),I=e=>{if(Array.isArray(e)){const r=e.map(d=>d.id),F=e.map(d=>d.type);t("update:modelValue",r),t("update:type",F),t("update",{modelValue:r,type:F})}else t("update:modelValue",e==null?void 0:e.id),t("update:type",e==null?void 0:e.type),t("update",{modelValue:e==null?void 0:e.id,type:e==null?void 0:e.type})},_=e=>{const r=[];return a.ignoreDashboardOrganisationTypes||r.push(f({...a.dashboardOrganisationTypeFilters,search:e??void 0})),a.ignoreDashboardOrganisations||(r.push(h({...a.dashboardOrganisationFilters,search:e??void 0})),r.push(o({...a.dashboardShallowFilters,search:e??void 0}))),Promise.all(r)},{toggleSet:U,init:j,onUpdate:E}=ae(D,[()=>a.dashboardOrganisationTypeFilters,()=>a.dashboardOrganisationFilters,()=>a.dashboardShallowFilters],t,_,I);return{placeholder:M,dashboards:D,toggleSet:U,loading:B,dashboardTypeColor:ee,dashboardTypeLabel:x,onUpdate:E}}});function le(a,t,f,b,g,h){const n=V("FSChip"),m=V("FSAutocompleteField");return O(),S(m,G({label:a.$props.label??a.$tr("ui.common.dashboard","Dashboard"),toggleSet:!a.$props.toggleSetDisabled&&a.toggleSet,multiple:a.$props.multiple,placeholder:a.placeholder,items:a.dashboards,loading:a.loading,modelValue:a.$props.modelValue,"onUpdate:modelValue":a.onUpdate},a.$attrs),{"item-prepend":l(({item:o})=>[o.icon?(O(),S($,{key:0},{default:l(()=>[Q(R(o.icon),1)]),_:2},1024)):K("",!0)]),"item-append":l(({item:o})=>[c(n,{color:a.dashboardTypeColor(o.type),label:a.dashboardTypeLabel(o.type)},null,8,["color","label"])]),"toggle-set-item":l(o=>[c(w,{prependIcon:o.item.icon,variant:o.getVariant(o.item),color:o.getColor(o.item),class:H(o.getClass(o.item)),label:o.item.label,onClick:y=>o.toggle(o.item)},J({_:2},[o.item.type?{name:"append",fn:l(()=>[c(n,{color:a.dashboardTypeColor(o.item.type),label:a.dashboardTypeLabel(o.item.type)},null,8,["color","label"])]),key:"0"}:void 0]),1032,["prependIcon","variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","items","loading","modelValue","onUpdate:modelValue"])}const p=te(v,[["render",le]]);v.__docgenInfo={displayName:"FSAutocompleteDashboard",exportName:"default",description:"",tags:{},props:[{name:"dashboardOrganisationTypeFilters",type:{name:"DashboardOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardOrganisationFilters",type:{name:"DashboardOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"dashboardShallowFilters",type:{name:"DashboardShallowFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"type",type:{name:"DashboardType[] | DashboardType"},required:!1,defaultValue:{func:!1,value:"DashboardType.None"}},{name:"ignoreDashboardOrganisationTypes",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"ignoreDashboardOrganisations",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:type"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteDashboard.vue"]};const no={title:"Foundation/Core/Autocompletes/AutocompleteDashboard",component:p,tags:["autodocs"],argTypes:{...P([C,re],p),...L(p)}},s={render:a=>({components:{FSAutocompleteDashboard:p},setup(){return{args:a}},template:`
    <FSAutocompleteDashboard
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />`}),args:{modelValue:[],type:i.None}};var T,q,A;s.parameters={...s.parameters,docs:{...(T=s.parameters)==null?void 0:T.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteDashboard
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteDashboard
      v-model="args.modelValue"
      v-model:type="args.type"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: [],
    type: DashboardType.None
  }
}`,...(A=(q=s.parameters)==null?void 0:q.docs)==null?void 0:A.source}}};const so=["Default"];export{s as Default,so as __namedExportsOrder,no as default};
