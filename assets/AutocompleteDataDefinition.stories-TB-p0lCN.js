import{a as q,b as k}from"./properties-Qw-O9fbT.js";import{F as v}from"./FSAutocompleteField-ChGdda7D.js";import{d as _,c as f,B as c,E as m,m as B,I as g,J as D,k as F,G as N,D as U,H as E}from"./vue.esm-bundler-CC_jVOJ5.js";import{F as h}from"./FSButton-Czf3beC8.js";import{F as T}from"./FSChip-DtJe-ffy.js";import{u as w}from"./useDataDefinitions-D7FXm6a3.js";import{u as I}from"./useAutocomplete-BT_5GYCQ.js";import{u as M}from"./useTranslations-5XSl7qXA.js";import{_ as O}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as j}from"./VAutocomplete-C_uG8JE-.js";import"./FSSearchField-X1df83qn.js";import"./FSTextField-CTUDqfDL.js";import"./FSBaseField-Bo38Hl_f.js";import"./FSSpan-DkNsO5wd.js";import"./useBreakpoints-BMcJFLA8.js";import"./useSlots-C8jkAuOW.js";import"./FSCol-DVEaUPKl.js";import"./css-DTGEi_Ca.js";import"./FSRow-CjY3icuR.js";import"./useColors-BXuuHMxE.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-_Z9wfsFC.js";import"./theme-Bp81IclV.js";import"./useRules-Da0JLBaA.js";import"./VField-CnDxsm3U.js";import"./index-Dylhq_Dl.js";import"./color-BM2dSUAO.js";import"./transition-Ucf2Ovas.js";import"./VLabel-kKpu5iXd.js";import"./VInput-0C1kQySn.js";import"./locale-K9DBMW2q.js";import"./VIcon-BOLLMMm0.js";import"./density-mssFUWH2.js";import"./dimensions-TKp8HHzB.js";import"./proxiedModel-Nw0LX-ta.js";import"./loader-CbVzlK-r.js";import"./VProgressCircular-B7HKciov.js";import"./resizeObserver-BZ0AJw4z.js";import"./anchor-S0Fc85Gi.js";import"./rounded-Cy4gG01O.js";import"./VDefaultsProvider-CuIagDb9.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-B48vLg-P.js";import"./FSDialogMenu-CWcRHPoR.js";import"./FSCard-twwkVLSp.js";import"./VDialog-fWvZSkPk.js";import"./VOverlay-DXMNyzvF.js";import"./display-CpM-3U3n.js";import"./lazy-BrZUVd24.js";import"./router-kuDvkEMM.js";import"./scopeId-BJNiFHH-.js";import"./FSSlideGroup-nu8Cr66q.js";import"./uuid-DTaye2KM.js";import"./FSButtonNextIcon-CsckSPrB.js";import"./VSlideGroup-DVr5PPvN.js";import"./group-CxQl3dDS.js";import"./VSlideGroupItem-Bl-P3Ech.js";import"./FSToggleSet-CEKaVblF.js";import"./FSWrapGroup-Cr3q9yBs.js";import"./FSCheckbox-D-xuSzdC.js";import"./FSIcon-CeLDRxMK.js";import"./VCheckboxBtn-C85wpeer.js";import"./VSelectionControl-CvHa2RXZ.js";import"./index-DWDx8SXO.js";import"./FSFadeOut-DU3Ke7qi.js";import"./FSLoader-0nGK1qhA.js";import"./elevation-CjJG1XnK.js";import"./FSRadio-QZhD_0uB.js";import"./VSelect-rJC_8mRT.js";import"./VList-C5ZFMMa0.js";import"./ssrBoot-CyKRGZ4o.js";import"./border-BnR_N-bS.js";import"./VImg-BmPSKt86.js";import"./VMenu-DWktgpYO.js";import"./filter-DunZ8aFg.js";import"./FSRouterLink-DFrDtHuc.js";import"./vue-router-CE1XKJtL.js";import"./FSClickable-DFmwvck2.js";import"./base-Cj4tO-2v.js";import"./useAppOrganisationId-DWUnIwce.js";import"./composableFactory-7f7_oyFS.js";import"./serviceFactory-aQiBqOvf.js";import"./lodash-Zo30T2Bj.js";import"./filter-D1UR3hsR.js";import"./index-Dqg0TTWH.js";import"./theme-Dr63acs7.js";import"./transition-C-FpXdho.js";import"./VInput-DLkUt0lp.js";import"./dimensions-Da35Ei1o.js";import"./proxiedModel-bjdrrHqV.js";import"./VIcon-BcNWhSjn.js";import"./color-C0yweL_m.js";import"./icons-_5OLM8s6.js";import"./density-DeV3WOwj.js";import"./VMenu-D-pFn2q3.js";import"./display-D7GaAsq5.js";import"./lazy-DxXQL0A4.js";import"./VDefaultsProvider-BXUMBw6n.js";import"./goto-DfPTJcvo.js";import"./VDivider-CVQ4TAeg.js";import"./group-CCLuHEuz.js";const y=_({name:"FSAutocompleteDataDefinition",components:{FSAutocompleteField:v,FSButton:h,FSChip:T},props:{dataDefinitionFilters:{type:Object,required:!1,default:null},modelValue:{type:[Array,String],required:!1,default:null},multiple:{type:Boolean,required:!1,default:!1},toggleSetDisabled:{type:Boolean,required:!1,default:!1},label:{type:String,required:!1,default:null}},emits:["update:modelValue"],setup(e,{emit:n}){const{getMany:p,fetching:s,entities:r}=w(),{$tr:u}=M(),o=f(()=>A.value&&s.value),l=f(()=>e.multiple&&e.modelValue?u("autocomplete.data-definition.placeholder","{0} data definition(s) selected",e.modelValue.length):null),t=$=>p({...e.dataDefinitionFilters,search:$??void 0}),{toggleSet:d,init:A,onUpdate:C}=I(r,[()=>e.dataDefinitionFilters],n,t);return{dataDefinitions:r,placeholder:l,toggleSet:d,loading:o,onUpdate:C}}});function z(e,n,p,s,r,u){const o=g("FSChip"),l=g("FSAutocompleteField");return D(),c(l,B({label:e.$props.label??e.$tr("ui.common.data-definition","Data"),toggleSet:!e.$props.toggleSetDisabled&&e.toggleSet,multiple:e.$props.multiple,placeholder:e.placeholder,items:e.dataDefinitions,loading:e.loading,modelValue:e.$props.modelValue,"onUpdate:modelValue":e.onUpdate},e.$attrs),{"item-append":m(({item:t})=>[t.unit?(D(),c(o,{key:0,label:t.unit},null,8,["label"])):E("",!0)]),"toggle-set-item":m(t=>[F(h,{variant:t.getVariant(t.item),color:t.getColor(t.item),class:N(t.getClass(t.item)),label:t.item.label,onClick:d=>t.toggle(t.item)},U({_:2},[t.item.unit?{name:"append",fn:m(()=>[F(o,{label:t.item.unit},null,8,["label"])]),key:"0"}:void 0]),1032,["variant","color","class","label","onClick"])]),_:1},16,["label","toggleSet","multiple","placeholder","items","loading","modelValue","onUpdate:modelValue"])}const a=O(y,[["render",z]]);y.__docgenInfo={displayName:"FSAutocompleteDataDefinition",exportName:"default",description:"",tags:{},props:[{name:"dataDefinitionFilters",type:{name:"DataDefinitionFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[] | string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"multiple",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"toggleSetDisabled",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"label",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}}],events:[{name:"update:modelValue"}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/autocompletes/FSAutocompleteDataDefinition.vue"]};const wt={title:"Foundation/Core/Autocompletes/AutocompleteDataDefinition",component:a,tags:["autodocs"],argTypes:{...k([v,j],a),...q(a)}},i={render:e=>({components:{FSAutocompleteDataDefinition:a},setup(){return{args:e}},template:`
    <FSAutocompleteDataDefinition
      v-model="args.modelValue"
      v-bind="args"
    />`}),args:{modelValue:[]}};var S,V,b;i.parameters={...i.parameters,docs:{...(S=i.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSAutocompleteDataDefinition
    },
    setup() {
      return {
        args
      };
    },
    template: \`
    <FSAutocompleteDataDefinition
      v-model="args.modelValue"
      v-bind="args"
    />\`
  }),
  args: {
    modelValue: []
  }
}`,...(b=(V=i.parameters)==null?void 0:V.docs)==null?void 0:b.source}}};const It=["Default"];export{i as Default,It as __namedExportsOrder,wt as default};
