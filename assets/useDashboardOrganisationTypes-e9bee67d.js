import{D as h,a as r,W as l}from"./dashboardTranslation-085f0d84.js";import{C as b}from"./base-168b8f74.js";import{S as c}from"./serviceFactory-2dfad3af.js";import{C as a}from"./composableFactory-2d4a69cc.js";class n{constructor(e){this.id=e.id,this.dashboardId=e.dashboardId,this.organisationTypeId=e.organisationTypeId,this.organisationTypeLabel=e.organisationTypeLabel,this.imageId=e.imageId,this.scope=e.scope,this.locked=e.locked,this.label=e.label,this.code=e.code,this.icon=e.icon,this.tags=e.tags.slice(),this.colors=e.colors.slice()}}class g extends n{constructor(e){super(e),this.labelDefault=e.labelDefault,this.translations=e.translations.map(s=>new h(s)),this.useAutoRefresh=e.useAutoRefresh,this.autoRefresh=e.autoRefresh,this.singleEntity=e.singleEntity,this.entityPresetCode=e.entityPresetCode,this.datePresetCode=e.datePresetCode,this.variableCode=e.variableCode,this.variables=e.variables.map(s=>new r(s)),this.widgets=e.widgets.map(s=>new l(s))}}const o=()=>`${b()}/dashboard-organisation-types`,i=t=>`${o()}/${encodeURIComponent(t)}`,d=new c("dashboardOrganisationType",g).create(t=>t.build(t.addGet(i),t.addGetMany(o,n),t.addCreate(o),t.addUpdate(i),t.addRemove(i),t.addNotify())),I=a.get(d),R=a.getMany(d);export{I as a,R as u};
