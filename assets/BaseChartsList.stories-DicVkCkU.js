import{d as D,c as L,w as N,z as O,B as G,R as P,C as r,m as R,G as d,H as v,K as A,M as j,N as z,Q as n,I as V,J as $,E as H}from"./vue.esm-bundler-CUSnV4DE.js";import{_ as J}from"./lodash-BrWYvtk2.js";import{F as K}from"./FSChartTileUI-DMD578_s.js";import{F as Q}from"./FSTagGroup-M1ubsx4V.js";import{F as W}from"./FSImage-DejQHEUL.js";import{F as b}from"./FSIcon-Cp7BQBW6.js";import{_ as E}from"./FSRow-hpHYWcoJ.js";import{F as M}from"./FSDataTable-B4jY-IsZ.js";import{u as X}from"./useChartOrganisations-TUsUrupL.js";import{u as Y}from"./useChartOrganisationTypes-CioXsEEK.js";import{c as Z,e as B,C as x}from"./chartsTools-DOk0Z_eo.js";import{C as ee}from"./useColors-CQZIO9RQ.js";import{g as te}from"./enumTools-BEsapygt.js";import{_ as ae}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSTile-D67iqGNu.js";import"./FSClickable-Bn4xIsxH.js";import"./FSRouterLink-CNYlwNDi.js";import"./vue-router-KxYGmK2X.js";import"./FSCard-BnVyMFnh.js";import"./FSCol-BQiFrdcO.js";import"./css-BnRE2gle.js";import"./useBreakpoints-CQzBW1Q0.js";import"./VProgressCircular-BbyuaGSs.js";import"./color-CgsoZSKd.js";import"./theme-DGuAngmo.js";import"./resizeObserver-Hv1_IiVG.js";import"./VIcon-DeLOaNVc.js";import"./FSCheckbox-DT2R4my4.js";import"./FSSpan-M9GEX7v6.js";import"./useSlots-CY84M1fx.js";import"./useRules-CYZMRvpC.js";import"./VSelectionControl-BrUoGkRx.js";import"./density-DAqBVexQ.js";import"./proxiedModel-DaBGAliH.js";import"./index-BdaiM53K.js";import"./VLabel-DSsJm0B6.js";import"./VInput-C8lN0V_S.js";import"./locale-DYN4KMd8.js";import"./index-DDQZ-RJM.js";import"./transition-C81aHyit.js";import"./dimensions-BI5CQRk1.js";import"./FSWrapGroup-DswCzfON.js";import"./uuid-DTaye2KM.js";import"./VSlideGroupItem-G437Dc1S.js";import"./group-CrKBhSLQ.js";import"./display-DbvBihXn.js";import"./FSTag-Cwjpfn0r.js";import"./VBtn-Rjy2Sxim.js";import"./border-CdoaLNWv.js";import"./elevation-C08MHLji.js";import"./rounded-DQzQH8wE.js";import"./loader-BjfLeESU.js";import"./anchor-MMgLgK3d.js";import"./router-C6XMMO7F.js";import"./VDefaultsProvider-BV2n7M0f.js";import"./FSSlideGroup-BKtLKoi-.js";import"./FSButtonNextIcon-DC1JdNxL.js";import"./FSButton-BTpAdEE5.js";import"./FSImageUI-C65sLZ4Z.js";import"./FSLoader-BxWH0Nmg.js";import"./VImg-DinzZLZB.js";import"./index-CeZa2hiu.js";import"./useImages-B9Gap5IC.js";import"./base-CmdGny12.js";import"./composableFactory-DWA25NsU.js";import"./serviceFactory-B3o6Bvwt.js";import"./useAppAuthToken-BM6m0Bni.js";import"./FSDataTableUI-DQ0FXpmN.js";import"./FSText-CUkc4ADt.js";import"./FSSearchField-eXvJVmGa.js";import"./FSTextField-MbUkXGoG.js";import"./FSBaseField-DwmVeNEG.js";import"./VField-B_GuA4vu.js";import"./forwardRefs-DWGaNmQL.js";import"./useTranslations-D0SM0QeA.js";import"./FSSelectField-GcoemPSS.js";import"./VList-0zKlnGxf.js";import"./VDialog-Co_Esry_.js";import"./VOverlay-BKGgaXLT.js";import"./scopeId-DP5cc-6o.js";import"./ssrBoot-Cb1Ys1Hl.js";import"./FSToggleSet-gSDjdstT.js";import"./FSFadeOut-BguakrVC.js";import"./FSRadio-BICP5Dmr.js";import"./VSelect-CO7kggYd.js";import"./VMenu-BYRtZ3M5.js";import"./FSDivider-DoNtNYap.js";import"./FSChip-B4fQRAFB.js";import"./FSOptionGroup-aSUFDdlH.js";import"./filter-C1K_d8Vd.js";import"./filter-BDc_Ne3E.js";import"./base-DyefFz5t.js";import"./useAppOrganisationId-D-BntkEj.js";import"./chartAllowedStep-D7zgduHm.js";import"./chartTimeStep-DIQ4HUqp.js";import"./index-DfSX31J9.js";const U=D({name:"FSBaseChartsList",components:{FSChartTileUI:K,FSDataTable:M,FSTagGroup:Q,FSImage:W,FSIcon:b,FSRow:E},props:{tableCode:{type:String,required:!1,default:null},chartOrganisationFilters:{type:Object,required:!1,default:null},chartOrganisationTypeFilters:{type:Object,required:!1,default:null},modelValue:{type:Array,default:()=>[],required:!1},editable:{type:Boolean,required:!1,default:!0},singleSelect:{type:Boolean,required:!1,default:!1}},emits:["update","update:modelValue","update:scope"],setup(t,{emit:m}){const{entities:C,fetching:T,getMany:I}=X(),{entities:u,fetching:S,getMany:c}=Y(),g=e=>t.modelValue.includes(e),F=()=>{I(t.chartOrganisationFilters),c(t.chartOrganisationTypeFilters)},f=L(()=>C.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})).concat(u.value.map(e=>({id:e.id,imageId:e.imageId,chartId:e.chartId,chartCategoryId:e.chartCategoryId,chartCategoryLabel:e.chartCategoryLabel,scope:e.scope,label:e.label,title:e.title,code:e.code,icon:e.icon,tags:e.tags,multiple:e.multiple,chartType:e.chartType,modelsLabels:e.modelsLabels})))),a=L(()=>({modelsLabels:{fixedFilters:u.value.map(e=>e.modelsLabels).reduce((e,o)=>{for(const i of o)e.map(h=>h.id).includes(i.id)||e.push(i);return e},[]).map(e=>({value:e.id,text:e.label})).concat({value:"",text:"--"}),methodFilter:(e,o)=>o.length==0&&e==""||o.length>0&&o.some(i=>i.id==e)},chartType:{fixedFilters:te(x).map(e=>({value:e.value,text:B(e.value)})),methodFilter:(e,o)=>e==o}})),l=e=>{g(e)?s(t.modelValue.filter(i=>i!=e)):t.singleSelect?s([e]):s([...t.modelValue,e])},s=e=>{if(!e){m("update:modelValue",[]),m("update:scope",[]),m("update",{modelValue:[],scope:[]});return}const o=f.value.filter(p=>e.includes(p.id)),i=o.map(p=>p.id),h=o.map(p=>p.scope);m("update:modelValue",i),m("update:scope",h),m("update",{modelValue:i,scope:h})};return N(()=>[t.chartOrganisationFilters,t.chartOrganisationTypeFilters],(e,o)=>{(!e&&!o||!J.isEqual(e,o))&&F()},{immediate:!0}),{fetchingChartOrganisationTypes:S,fetchingChartOrganisations:T,chartOrganisationTypes:u,chartOrganisations:C,headersOptions:a,ColorEnum:ee,charts:f,chartTypeLabel:B,isSelected:g,chartIcon:Z,onSelect:s,update:l}}});function oe(t,m,C,T,I,u){const S=d("FSImage"),c=d("FSTagGroup"),g=d("FSText"),F=d("FSChartTileUI"),f=d("FSDataTable");return v(),O(f,R({defaultMode:"iterator",loading:t.fetchingChartOrganisationTypes||t.fetchingChartOrganisations,headersOptions:t.headersOptions,items:t.charts,showSelect:t.$props.editable,singleSelect:t.$props.singleSelect,tableCode:t.$props.tableCode,modelValue:t.$props.modelValue,"onUpdate:modelValue":t.onSelect},t.$attrs),G({"header.imageId-title":r(()=>[n(b,null,{default:r(()=>[V(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":r(({item:a})=>[n(b,null,{default:r(()=>[V($(a.icon),1)]),_:2},1024)]),"item.imageId":r(({item:a})=>[a.imageId?(v(),O(S,{key:0,height:"32px",width:"32px",imageId:a.imageId,thumbnail:!0},null,8,["imageId"])):H("",!0)]),"item.tags":r(({item:a})=>[n(c,{variant:"slide",editable:!1,tags:a.tags},null,8,["tags"])]),"item.chartType":r(({item:a})=>[n(E,{wrap:!1},{default:r(()=>[n(b,{icon:t.chartIcon(a.chartType)},null,8,["icon"]),n(g,null,{default:r(()=>[V($(t.chartTypeLabel(a.chartType)),1)]),_:2},1024)]),_:2},1024)]),"item.modelsLabels":r(({item:a})=>[n(c,{editable:!1,tags:a.modelsLabels.map(l=>l.label)},null,8,["tags"])]),"item.tile":r(({item:a,toggleSelect:l})=>[n(F,{label:a.label,categoryLabel:a.chartCategoryLabel,icon:a.icon,imageId:a.imageId,type:a.chartType,singleSelect:t.$props.singleSelect,editable:t.$props.editable,activeColor:t.ColorEnum.Primary,modelValue:t.isSelected(a.id),"onUpdate:modelValue":s=>l(a),onClick:s=>t.update(a.id)},null,8,["label","categoryLabel","icon","imageId","type","singleSelect","editable","activeColor","modelValue","onUpdate:modelValue","onClick"])]),_:2},[P(t.$slots,(a,l)=>({name:l,fn:r(s=>[A(t.$slots,l,j(z(s)))])}))]),1040,["loading","headersOptions","items","showSelect","singleSelect","tableCode","modelValue","onUpdate:modelValue"])}const k=ae(U,[["render",oe]]);U.__docgenInfo={displayName:"FSBaseChartsList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"chartOrganisationTypeFilters",type:{name:"ChartOrganisationTypeFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"editable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"singleSelect",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}}],events:[{name:"update"},{name:"update:modelValue"},{name:"update:scope"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/charts/FSBaseChartsList.vue"]};const Kt={title:"Foundation/Core/Lists/Base Lists/BaseChartsList",component:k,subcomponents:{FSDataTable:M},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["charts1"]}}},y={render:t=>({components:{FSBaseChartsList:k},setup(){return{args:t}},template:`
      <FSBaseChartsList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    `}),args:{tableCode:"charts1",modelValue:[],singleSelect:!1,editable:!0}};var _,q,w;y.parameters={...y.parameters,docs:{...(_=y.parameters)==null?void 0:_.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartsList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartsList
        v-model:modelValue="args.modelValue"
        v-bind="args"
      />
    \`
  }),
  args: {
    tableCode: 'charts1',
    modelValue: [],
    singleSelect: false,
    editable: true
  }
}`,...(w=(q=y.parameters)==null?void 0:q.docs)==null?void 0:w.source}}};const Qt=["Default"];export{y as Default,Qt as __namedExportsOrder,Kt as default};
