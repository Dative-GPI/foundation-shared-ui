import{d as _,w as $,z as m,A as f,B as h,M as B,N as q,C as a,m as N,J as v,K as D,L as w,v as i,G as C,H as k,E}from"./vue.esm-bundler-BwDfg4wG.js";import{_ as G}from"./lodash-BiW_TGGX.js";import{F as y}from"./FSDataTable-Me_5Some.js";import{F as d}from"./FSIcon-ChaYv6Le.js";import{F as U}from"./FSImage-CtdLuckH.js";import{F as M}from"./FSTagGroup-5FHer4Te.js";import{F as z}from"./FSChartTileUI-Dqn3CVLG.js";import{P as F}from"./charts-BPLoyxCB.js";import{u as A}from"./useChartOrganisations-CzXxwkos.js";import{C as R}from"./useColors-tmPxRJAs.js";import{_ as j}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSLoader-CBedVZCM.js";import"./css-DTUiF03J.js";import"./color-BnvS3YzF.js";import"./theme-DkbGhe4v.js";import"./dimensions-yOZi2HlQ.js";import"./elevation-Ba-uT6Vw.js";import"./locale-DTc71_bq.js";import"./FSCol-BEvj3we4.js";import"./FSRow-k5pgBhR1.js";import"./VSpacer-C5S3LEb3.js";import"./FSDataTableUI-cllOIrAS.js";import"./vue-router-BC-FzL9X.js";import"./uuid-DTaye2KM.js";import"./FSCheckbox-Up-USX9A.js";import"./FSSpan-H3zJ0Cfa.js";import"./useSlots-2JqallzA.js";import"./useRules-CJCAsX67.js";import"./VSelectionControl-gUfFxYp8.js";import"./density-CY8ZwxUy.js";import"./VIcon-D-JUvW-a.js";import"./tag-Ceq3l71M.js";import"./proxiedModel-okNizC5Y.js";import"./index-BBm8PRb1.js";import"./VLabel-BAbVzo-k.js";import"./VInput-Bb_DU4hJ.js";import"./index-h4Pvk0JI.js";import"./transition-DbaVUv7M.js";import"./form-CH3j37ax.js";import"./FSCard-ENPT7Hcj.js";import"./FSText-CwwFvnOv.js";import"./FSSearchField-DSDBhq1s.js";import"./FSTextField-C_L-5gHA.js";import"./FSBaseField-3b1naUZS.js";import"./FSButton-jJkg4qCi.js";import"./FSClickable-Y_T-Cq-9.js";import"./VProgressCircular-CmpAWY4m.js";import"./VField-C9nLiyrW.js";import"./loader-ecE02KGk.js";import"./anchor-0YuAsO7w.js";import"./rounded-NuUWeCiM.js";import"./VDefaultsProvider-_csoeOf7.js";import"./forwardRefs-DWGaNmQL.js";import"./index-O1RQoaVh.js";import"./useTranslations-CHmpEDXr.js";import"./FSSelectField-BAtD035V.js";import"./FSDialogMenu-Rt_YvAbG.js";import"./VDialog-D51psHtT.js";import"./VOverlay-DP3B0xk9.js";import"./display-DC3KmzVA.js";import"./lazy-MJJzC26k.js";import"./router-CeBnHAqN.js";import"./FSSlideGroup-FmBZXb1C.js";import"./group-Co3yQlsH.js";import"./FSToggleSet-nzyxIkxs.js";import"./FSWrapGroup-CzncWNtJ.js";import"./FSFadeOut-D8lX1YMU.js";import"./FSRadio-BZx_I5qq.js";import"./VList-C9PART4F.js";import"./ssrBoot-D00LCOWZ.js";import"./border-CJvl-6Or.js";import"./VImg-DFtMr-E9.js";import"./VSelect-ByKY6ruB.js";import"./VMenu-CbEP2O2_.js";import"./FSDivider-CNRYiEGS.js";import"./FSChip-kw9MOYsi.js";import"./FSOptionGroup-DruPS3EV.js";import"./filter-C1K_d8Vd.js";import"./VBtn-CAkWF00h.js";import"./filter-Cv_nnV1z.js";import"./base-C7fpSlQX.js";import"./useAppOrganisationId-C2bN-F6j.js";import"./serviceFactory-Bd5jifNi.js";import"./composableFactory-fou7heQy.js";import"./FSImageUI-BAdgvYuR.js";import"./useImages-hJ8kAqsC.js";import"./base-CmdGny12.js";import"./FSTag-B1oK3EZ-.js";import"./chartSerie-CU1F_Cev.js";import"./timeRange-DtWQBHMx.js";import"./index-DfSX31J9.js";const T=_({name:"FSBaseChartOrganisationsList",components:{FSDataTable:y,FSIcon:d,FSImage:U,FSTagGroup:M,FSChartTileUI:z},props:{modelValue:{type:Array,default:()=>[],required:!1},chartOrganisationFilters:{type:Object,required:!1,default:null},plotPer:{type:Number,required:!1,default:F.None},tableCode:{type:String,required:!0},itemTo:{type:Function,required:!1}},emits:["update:modelValue"],setup(t){const{entities:n,fetching:u,getMany:l}=A(),g=r=>t.modelValue.includes(r),c=()=>{t.plotPer===F.None?l(t.chartOrganisationFilters):l({...t.chartOrganisationFilters,plotPer:t.plotPer})};return $(()=>[t.chartOrganisationFilters,t.plotPer],(r,o)=>{(!r&&!o||!G.isEqual(r,o))&&c()},{immediate:!0}),{ColorEnum:R,fetchingChartOrganisations:u,chartOrganisations:n,isSelected:g}}});function H(t,n,u,l,g,c){const r=m("FSImage"),o=m("FSTagGroup"),L=m("FSChartTileUI"),P=m("FSDataTable");return f(),h(P,N({items:t.chartOrganisations,itemTo:t.$props.itemTo,loading:t.fetchingChartOrganisations,tableCode:t.$props.tableCode,modelValue:t.$props.modelValue,"onUpdate:modelValue":n[0]||(n[0]=e=>t.$emit("update:modelValue",e))},t.$attrs),B({"header.imageId-title":a(()=>[i(d,null,{default:a(()=>[C(" mdi-panorama-variant-outline ")]),_:1})]),"item.icon":a(({item:e})=>[i(d,null,{default:a(()=>[C(k(e.icon),1)]),_:2},1024)]),"item.imageId":a(({item:e})=>[e.imageId?(f(),h(r,{key:0,height:"32px",width:"32px",imageId:e.imageId},null,8,["imageId"])):E("",!0)]),"item.tags":a(({item:e})=>[i(o,{variant:"slide",editable:!1,tags:e.tags},null,8,["tags"])]),"item.modelsLabels":a(({item:e})=>[i(o,{editable:!1,tags:e.modelsLabels.map(s=>s.label)},null,8,["tags"])]),"item.tile":a(({item:e})=>[i(L,{label:e.label,categoryLabel:e.chartCategoryLabel,icon:e.icon,imageId:e.imageId,type:e.chartType,to:t.$props.itemTo&&t.$props.itemTo(e)},null,8,["label","categoryLabel","icon","imageId","type","to"])]),_:2},[q(t.$slots,(e,s)=>({name:s,fn:a(V=>[v(t.$slots,s,D(w(V)))])}))]),1040,["items","itemTo","loading","tableCode","modelValue"])}const I=j(T,[["render",H]]);T.__docgenInfo={displayName:"FSBaseChartOrganisationsList",exportName:"default",description:"",tags:{},props:[{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}},{name:"chartOrganisationFilters",type:{name:"ChartOrganisationFilters"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"plotPer",type:{name:"PlotPer"},required:!1,defaultValue:{func:!1,value:"PlotPer.None"}},{name:"tableCode",type:{name:"string"},required:!0},{name:"itemTo",type:{name:"(item: ChartOrganisationInfos) => Partial<RouteLocation>"},required:!1}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/chartOrganisations/FSBaseChartOrganisationsList.vue"]};const Be={title:"Foundation/Core/Lists/Base Lists/BaseChartOrganisationsList",component:I,subcomponents:{FSDataTable:y},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["chartOrganisations1"]}}},p={render:t=>({components:{FSBaseChartOrganisationsList:I},setup(){return{args:t}},template:`
      <FSBaseChartOrganisationsList
        :tableCode="args.tableCode"
      />
    `}),args:{tableCode:"chartOrganisations1"}};var b,O,S;p.parameters={...p.parameters,docs:{...(b=p.parameters)==null?void 0:b.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseChartOrganisationsList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseChartOrganisationsList
        :tableCode="args.tableCode"
      />
    \`
  }),
  args: {
    tableCode: 'chartOrganisations1'
  }
}`,...(S=(O=p.parameters)==null?void 0:O.docs)==null?void 0:S.source}}};const qe=["Default"];export{p as Default,qe as __namedExportsOrder,Be as default};
