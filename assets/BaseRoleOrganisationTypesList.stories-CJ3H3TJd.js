import{d as L,w as B,B as v,D as $,S as q,E as t,m as h,I as p,J as w,O as D,P as I,Q as P,k as a,A as l,K as m}from"./vue.esm-bundler-PONd4AmC.js";import{_ as k}from"./lodash-Zo30T2Bj.js";import{F as b}from"./FSDataTable-BitEA0iY.js";import{_ as O}from"./FSRow-C-b-hpWa.js";import{F as N}from"./FSText-CaGosnIl.js";import{F as u}from"./FSIcon-wf_hiRKr.js";import{F as E}from"./FSTagGroup-C5RX1QNn.js";import{b as G,u as A}from"./users-BCHgesD8.js";import{u as M}from"./useRoleOrganisationTypes-B-j0Hyfn.js";import{_ as j}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./_commonjsHelpers-BosuxZz1.js";import"./FSLoader-B0jwcdOS.js";import"./useBreakpoints-RTs-XAJF.js";import"./useColors-WMY9wD-z.js";import"./index-_Z9wfsFC.js";import"./theme-DW7AHeJn.js";import"./css-BeoQuAfr.js";import"./color-CQ7P2KsY.js";import"./dimensions-D04OQyPe.js";import"./elevation-D2k7D5K3.js";import"./locale-CoLhg8Wl.js";import"./FSCol-Bfhiyt6Y.js";import"./FSDataTableUI-DB8h0tlL.js";import"./vue-router-D84-pxgD.js";import"./uuid-DTaye2KM.js";import"./FSTile-DvIRGdrB.js";import"./FSClickable-BpeLEfG7.js";import"./FSRouterLink-mxENRZ46.js";import"./FSCard-B7av1ouT.js";import"./VProgressCircular-D57tYVQX.js";import"./resizeObserver-BAwzmH4Y.js";import"./VIcon-shEmQARK.js";import"./FSCheckbox-B_D3nKx1.js";import"./FSSpan-DqsaA-ji.js";import"./useSlots-nyIcwo6G.js";import"./useRules-CT5DWk6c.js";import"./VCheckboxBtn-CYnHxMSC.js";import"./VSelectionControl-BAKsAS1a.js";import"./density-DM1TPnyn.js";import"./proxiedModel-BMHfYIia.js";import"./index-aCfcr9Gd.js";import"./VLabel-B2dMuALu.js";import"./VInput-CX-j4Zl6.js";import"./index-COu1mqSp.js";import"./transition-BpYTYsmy.js";import"./FSSearchField-sQ9DfSvh.js";import"./FSTextField-DpTxivyj.js";import"./FSBaseField-ynwJeuM4.js";import"./FSButton-BtOsEP4C.js";import"./VField-BsvLa1Vn.js";import"./loader-zqGHJTJd.js";import"./anchor-rLQXsCC5.js";import"./rounded-Cwlpymxx.js";import"./VDefaultsProvider--dbql3OT.js";import"./easing-DY7PVvcf.js";import"./forwardRefs-C-GTDzx5.js";import"./index-CzkqP9_q.js";import"./useTranslations-_Q1DYra_.js";import"./FSSelectField-DRc-RCGa.js";import"./FSDialogMenu-XBy5gEQ2.js";import"./VDialog-DuPuMCeo.js";import"./VOverlay-DZqv3aZJ.js";import"./display-D1WOGNJY.js";import"./lazy-PL0gnfDR.js";import"./router-DS8hXbpn.js";import"./scopeId-DFcjERLl.js";import"./FSSlideGroup-BKLRFR6r.js";import"./FSButtonNextIcon-PE5YDRXp.js";import"./VSlideGroupItem-B4B7QRhR.js";import"./group-QLjCrFp5.js";import"./FSToggleSet-DoOlvhp-.js";import"./FSWrapGroup-Dayjp45z.js";import"./FSFadeOut-Dik6Imqk.js";import"./FSRadio-CSYtdY7R.js";import"./VSelect-AOkN1lp-.js";import"./VList-BCmGq4kQ.js";import"./ssrBoot-DufuUSU7.js";import"./border-BL_XAYaf.js";import"./VImg-AonvEV9k.js";import"./VMenu-FXIUZrjg.js";import"./FSDivider-B4241t9Q.js";import"./FSChip-i7KKW9RI.js";import"./FSMenu-B9mNoRv6.js";import"./FSOptionGroup-B41RJU-4.js";import"./filter-C1K_d8Vd.js";import"./VBtn-Bcg5Dpfx.js";import"./filter-D4n0RRF9.js";import"./base-Cd1_IDDR.js";import"./useAppOrganisationId-BgVWu_vS.js";import"./composableFactory-B2U31qfW.js";import"./serviceFactory-aQiBqOvf.js";import"./FSTag-Ci46HywE.js";import"./permissionInfos-BPDgTHQl.js";const S=L({name:"FSBaseRoleOrganisationTypesList",components:{FSRow:O,FSIcon:u,FSText:N,FSTagGroup:E,FSDataTable:b},props:{tableCode:{type:String,required:!1,default:null},roleOrganisationTypesFilters:{type:Object,required:!1,default:null},itemTo:{type:Function,required:!1},selectable:{type:Boolean,required:!1,default:!0},modelValue:{type:Array,required:!1,default:()=>[]}},emits:["update:modelValue"],setup(e){const{getMany:i,entities:d,fetching:f}=M(),g=r=>e.modelValue.includes(r);return B(()=>e.roleOrganisationTypesFilters,(r,s)=>{(!r&&!s||!k.isEqual(r,s))&&i(e.roleOrganisationTypesFilters??void 0)},{immediate:!0}),{fetchingRoleOrganisations:f,roleOrganisationTypes:d,userTypeLabel:A,userTypeIcon:G,isSelected:g}}});function z(e,i,d,f,g,r){const s=p("FSText"),R=p("FSTagGroup"),C=p("FSDataTable");return w(),v(C,h({items:e.roleOrganisationTypes,itemTo:e.$props.itemTo,loading:e.fetchingRoleOrganisations,selectable:e.$props.selectable,tableCode:e.$props.tableCode,modelValue:e.$props.modelValue,"onUpdate:modelValue":i[0]||(i[0]=o=>e.$emit("update:modelValue",o))},e.$attrs),$({"item.icon":t(({item:o})=>[a(u,null,{default:t(()=>[l(m(o.icon),1)]),_:2},1024)]),"item.userType":t(({item:o})=>[a(O,{align:"center-left"},{default:t(()=>[a(u,null,{default:t(()=>[l(m(e.userTypeIcon(o.userType)),1)]),_:2},1024),a(s,null,{default:t(()=>[l(m(e.userTypeLabel(o.userType)),1)]),_:2},1024)]),_:2},1024)]),"item.tags":t(({item:o})=>[a(R,{variant:"slide",showRemove:!1,tags:o.tags},null,8,["tags"])]),_:2},[q(e.$slots,(o,c)=>({name:c,fn:t(_=>[D(e.$slots,c,I(P(_)))])}))]),1040,["items","itemTo","loading","selectable","tableCode","modelValue"])}const V=j(S,[["render",z]]);S.__docgenInfo={displayName:"FSBaseRoleOrganisationTypesList",exportName:"default",description:"",tags:{},props:[{name:"tableCode",type:{name:"string | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"roleOrganisationTypesFilters",type:{name:"RoleOrganisationTypeFilters | null"},required:!1,defaultValue:{func:!1,value:"null"}},{name:"itemTo",type:{name:"(item: RoleOrganisationTypeInfos) => Partial<RouteLocation>"},required:!1},{name:"selectable",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"true"}},{name:"modelValue",type:{name:"string[]"},required:!1,defaultValue:{func:!0,value:"() => []"}}],events:[{name:"update:modelValue"}],slots:[{name:"name",scoped:!0,bindings:[{name:"name",title:"binding"}]}],sourceFiles:["/home/runner/work/foundation-shared-ui/foundation-shared-ui/src/core/foundation-core-components/components/lists/roleOrganisationTypes/FSBaseRoleOrganisationTypesList.vue"]};const qo={title:"Foundation/Core/Lists/Base Lists/BaseRoleOrganisationTypesList",component:V,subcomponents:{FSDataTable:b},tags:["autodocs"],argTypes:{tableCode:{control:"select",options:["roleOrganisationTypes1"]}}},n={render:e=>({components:{FSBaseRoleOrganisationTypesList:V},setup(){return{args:e}},template:`
      <FSBaseRoleOrganisationTypesList
        v-model:modelValue="args.modelValue"
        :tableCode="args.tableCode"
      />
    `}),args:{tableCode:"roleOrganisationTypes1",modelValue:[]}};var y,T,F;n.parameters={...n.parameters,docs:{...(y=n.parameters)==null?void 0:y.docs,source:{originalSource:`{
  render: args => ({
    components: {
      FSBaseRoleOrganisationTypesList
    },
    setup() {
      return {
        args
      };
    },
    template: \`
      <FSBaseRoleOrganisationTypesList
        v-model:modelValue="args.modelValue"
        :tableCode="args.tableCode"
      />
    \`
  }),
  args: {
    tableCode: 'roleOrganisationTypes1',
    modelValue: []
  }
}`,...(F=(T=n.parameters)==null?void 0:T.docs)==null?void 0:F.source}}};const ho=["Default"];export{n as Default,ho as __namedExportsOrder,qo as default};
